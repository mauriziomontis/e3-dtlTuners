registerChannelProviderLocal firstTime true
#
# ------>-----> snip ----->------> 
#
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# The IOC is started at "2020-W33-Aug10-1813-24-CEST"
#
# Version information:
# European Spallation Source ERIC : iocsh.bash (0.5.1-04d5808.PID-9653)
#
# HOSTDISPLAY=""
# WINDOWID=""
# PWD="/home/iocuser/e3/e3-dtlTuners"
# USER="iocuser"
# LOGNAME="iocuser"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/epics/base-7.0.3.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="3.1.2"
# E3_REQUIRE_LOCATION="/epics/base-7.0.3.1/require/3.1.2"
# E3_REQUIRE_BIN="/epics/base-7.0.3.1/require/3.1.2/bin"
# E3_REQUIRE_DB="/epics/base-7.0.3.1/require/3.1.2/db"
# E3_REQUIRE_DBD="/epics/base-7.0.3.1/require/3.1.2/dbd"
# E3_REQUIRE_INC="/epics/base-7.0.3.1/require/3.1.2/include"
# E3_REQUIRE_LIB="/epics/base-7.0.3.1/require/3.1.2/lib"
# E3_SITEAPPS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteApps"
# E3_SITELIBS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteLibs"
# E3_SITEMODS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteMods"
# EPICS_DRIVER_PATH="/epics/base-7.0.3.1/require/3.1.2/siteMods:/epics/base-7.0.3.1/require/3.1.2/siteApps"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# PATH="/epics/base-7.0.3.1/require/3.1.2/bin:/epics/base-7.0.3.1/bin/linux-x86_64:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/iocuser/.local/bin:/home/iocuser/bin"
# LD_LIBRARY_PATH="/epics/base-7.0.3.1/lib/linux-x86_64:/epics/base-7.0.3.1/require/3.1.2/lib/linux-x86_64:/epics/base-7.0.3.1/require/3.1.2/siteLibs/linux-x86_64"
#
# ------>-----> snip ----->------> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:04d5808-ess-dtl-9653"
#
# Enable an exit subroutine.
dbLoadRecords "/epics/base-7.0.3.1/db/softIocExit.db" "IOC=REQMOD:04d5808-ess-dtl-9653"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh.bash is executed.
epicsEnvSet E3_IOCSH_TOP "/home/iocuser/e3/e3-dtlTuners"
# 
# Load require module, which has the version 3.1.2
# 
dlload /epics/base-7.0.3.1/require/3.1.2/lib/linux-x86_64/librequire.so
dbLoadDatabase /epics/base-7.0.3.1/require/3.1.2/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
require dtlTuners,master
Module dtlTuners version master found in /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/
Module dtlTuners depends on sequencer 2.2.7
Module sequencer version 2.2.7 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/sequencer/2.2.7/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/sequencer/2.2.7/lib/linux-x86_64/libsequencer.so
Loaded sequencer version 2.2.7
sequencer has no dbd file
Loading module info records for sequencer
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/lib/linux-x86_64/libdtlTuners.so
Loaded dtlTuners version master
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/dbd/dtlTuners.dbd
Calling function dtlTuners_registerRecordDeviceDriver
Loading module info records for dtlTuners
loadIocsh(dtl-tuners.iocsh)
##############################################################################
############ Startup File for DTL Tuners System
############
############ Author: Maurizio Montis || INFN-LNL
############ Mail:   maurizio.montis@lnl.infn.it
############
##############################################################################


##############################################################################
############ Environment

###
############ Configuration
############ Set the values in order to proper configure the application
############
###

#
### Communication
# Ethercat Master Index
epicsEnvSet("MASTER_ID", "3")

### Application
# IOC application name
epicsEnvSet("IOC", "DTL-000")
# Modules version
epicsEnvSet("ECMCCFG_VERSION", "6.2.0")
epicsEnvSet("ECMC_VERSION", "6.2.1")
epicsEnvSet("STREAM_VERSION", "2.8.10")
epicsEnvSet("DTLTUNERS_VERSION", "master")
# Axis configuration
epicsEnvSet("DTL_AXIS_PATH", "/home/iocuser/e3/e3-dtlTuners/cfg")


#
############ End of Configuration part
#



### Standard Configuration - DO NOT MODIFY
#
epicsEnvSet("ECMC_CONFIG_ROOT",     "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/")
epicsEnvSet("ECMC_CONFIG_DB",       "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/db/")
epicsEnvSet("DTL_TUNERS_ROOT",     "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("STREAM_PROTOCOL_PATH", ":/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/:/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/db/")
epicsEnvSet("SM_PREFIX",            "DTL-000:")

##############################################################################
############ Modules Required

require ecmccfg, 6.2.0
Module ecmccfg version 6.2.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/
Module ecmccfg has no library
Loading module info records for ecmccfg
require ecmc, 6.2.1
Module ecmc version 6.2.1 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/6.2.1/
Module ecmc depends on asyn 4.36.0
Module asyn version 4.36.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.36.0
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1
Module exprtk version 1.2.1 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/exprtk/1.2.1/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/exprtk/1.2.1/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.1
Module motor version 7.0.1 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/
Module motor depends on asyn 4.36.0
Module asyn version 4.36.0 already loaded
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.1
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/6.2.1/lib/linux-x86_64/libecmc.so
Loaded ecmc version 6.2.1
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/6.2.1/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
require stream, 2.8.10
Module stream version 2.8.10 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/
Module stream depends on asyn 4.36.0
Module asyn version 4.36.0 already loaded
Module stream depends on calc 3.7.3
Module calc version 3.7.3 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/
Module calc depends on sequencer 2.2.7
Module sequencer version 2.2.7 already loaded
Module calc depends on sscan 2.11.3
Module sscan version 2.11.3 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/
Module sscan depends on sequencer 2.2.7
Module sequencer version 2.2.7 already loaded
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/lib/linux-x86_64/libsscan.so
Loaded sscan version 2.11.3
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/dbd/sscan.dbd
Calling function sscan_registerRecordDeviceDriver
Loading module info records for sscan
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/lib/linux-x86_64/libcalc.so
Loaded calc version 3.7.3
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/dbd/calc.dbd
Calling function calc_registerRecordDeviceDriver
Loading module info records for calc
Module stream depends on pcre 8.41.0
Module pcre version 8.41.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/pcre/8.41.0/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/pcre/8.41.0/lib/linux-x86_64/libpcre.so
Loaded pcre version 8.41.0
pcre has no dbd file
Loading module info records for pcre
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/lib/linux-x86_64/libstream.so
Loaded stream version 2.8.10
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/dbd/stream.dbd
Calling function stream_registerRecordDeviceDriver
Loading module info records for stream


##############################################################################
############ Application Initialization

iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/init.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               -2)
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/initAxis.cmd",1)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/initAxis.cmd"
#==============================================================================
# initAxis.cmd
epicsEnvSet("ECMC_MOTOR_NAME",            "NOT SET")
epicsEnvSet("ECMC_R",                     "NOT SET")
epicsEnvSet("ECMC_AXIS_NO",               "NOT SET")
epicsEnvSet("ECMC_DESC",                  "NOT SET")
epicsEnvSet("ECMC_EGU",                   "NOT SET")       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "NOT SET")       # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "NOT SET")       # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "NOT SET")       # Entry for axis health output (example: ec0.s1.BO_1.0)
epicsEnvSet("ECMC_ENC_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_ENC_BITS",              "NOT SET")
epicsEnvSet("ECMC_ENC_TYPE",              "NOT SET")       # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "NOT SET")       # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_ENC_ABS_BITS",          "NOT SET")       # Absolute bit count (for absolute encoders) always least significant part
epicsEnvSet("ECMC_ENC_ABS_OFFSET",        "NOT SET")       # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_LATCHPOS",       "")              # Ethercat entry for latch position (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_CONTROL",  "")              # Ethercat entry for latch control (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_STATUS",   "")              # Ethercat entry for latch status (only valid for home seq 11,12)
epicsEnvSet("ECMC_DRV_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_DRV_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "NOT SET")       # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "NOT SET")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "NOT SET")       # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "NOT SET")       # Ethercat entry for brake output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "NOT SET")       # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "NOT SET")  # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "NOT SET")  # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_VELO",                  "NOT SET")
epicsEnvSet("ECMC2020/08/10 18:13:24.607 
ECMC Initializes.............
2020/08/10 18:13:24.608 ESS Open Source EtherCAT Motion Control Epics Module2020/08/10 18:13:24.608 
Mode: Configuration
2020/08/10 18:13:24.608 OK
2020/08/10 18:13:24.608 OK
_JOG_VEL",               "NOT SET")
epicsEnvSet("ECMC_JAR",                   "NOT SET")       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "NOT SET")
epicsEnvSet("ECMC_EMERG_DECEL",           "NOT SET")       # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "NOT SET")
epicsEnvSet("ECMC_HOME_PROC",              "NOT SET")
epicsEnvSet("ECMC_HOME_POS",               "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_TO",            "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_FRM",           "NOT SET")
epicsEnvSet("ECMC_HOME_ACC",               "NOT SET")
epicsEnvSet("ECMC_HOME_DEC",               "NOT SET")
epicsEnvSet("ECMC_HOME_LATCH_COUNT_OFFSET","0")
epicsEnvSet("ECMC_CNTRL_KP",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KI",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KD",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KFF",             "NOT SET")
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "NOT SET")       #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "NOT SET")       #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "NOT SET")       #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "NOT SET")       #  Ethercat entry for external interlock input
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "NOT SET")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "NOT SET")
epicsEnvSet("ECMC_DXLM_ENABLE",           "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",    "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX",          "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "NOT SET")
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMCAXISFIELDINIT",      "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "DTL-000:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# Update records in 10ms (100Hz)
epicsEnvSet("ECMC_SAMPLE_RATE_MS",       "10")


##############################################################################
############ EtherCAT Master Configuration

iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addMaster.cmd", "MASTER_ID=3"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "3")
# Clai2020/08/10 18:13:24.608 OK
2020/08/10 18:13:24.608 OK
2020/08/10 18:13:24.608 OK
macLib: macro 0+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.608 OK
2020/08/10 18:13:24.609 OK
macLib: macro 2+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.609 OK
2020/08/10 18:13:24.609 OK
macLib: macro 12+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.609 OK
2020/08/10 18:13:24.609 OK
m master
ecmcConfigOrDie "Cfg.EcSetMaster(3)"


##############################################################################
############ EtherCAT Slaves Configuration



# - Module EK1100
#   Position indexes: 0,2,12,23,33,44,54,56,59,63,66,70
epicsEnvSet("IOC", "DTL-000")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=0"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "0")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,0,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,0,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=0,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=2"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "2")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,2,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,2,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=2,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=12"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "12")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,12,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,12,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=12,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=23"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "23")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,23,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,23,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK110macLib: macro 23+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.610 OK
2020/08/10 18:13:24.610 OK
macLib: macro 33+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.610 OK
2020/08/10 18:13:24.610 OK
macLib: macro 44+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.611 OK
2020/08/10 18:13:24.611 OK
macLib: macro 54+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.611 OK
2020/08/10 18:13:24.611 OK
0.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=23,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=33"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "33")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,33,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,33,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=33,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=44"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "44")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,44,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,44,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=44,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=54"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "54")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,54,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,54,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=54,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=56"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "56")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,56,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,56,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORmacLib: macro 56+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.612 OK
2020/08/10 18:13:24.612 OK
macLib: macro 59+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.612 OK
2020/08/10 18:13:24.612 OK
macLib: macro 63+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.613 OK
2020/08/10 18:13:24.613 OK
macLib: macro 66+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.613 OK
2020/08/10 18:13:24.613 OK
T=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=56,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=59"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "59")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,59,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,59,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=59,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=63"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "63")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,63,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,63,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=63,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=66"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "66")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,66,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,66,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=66,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1100, SLAVE_ID=70"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "70")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,70,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,70,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=70,HWTYPE=EK1100,T_SMP_MS=1macLib: macro 70+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.614 OK
2020/08/10 18:13:24.614 OK
macLib: macro 1+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.614 OK
2020/08/10 18:13:24.614 OK
macLib: macro 22+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.614 OK
2020/08/10 18:13:24.615 OK
macLib: macro 43+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.615 OK
2020/08/10 18:13:24.615 OK
0,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EK1122-0080
#   Position indexes: 1,22,43,55,62,69
epicsEnvSet("IOC", "DTL-000")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "1")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,1,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,1,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=1,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=22"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "22")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,22,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,22,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=22,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=43"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "43")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,43,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,43,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=43,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=55"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "55")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,55,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,55,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0macLib: macro 55+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.615 OK
2020/08/10 18:13:24.615 OK
macLib: macro 62+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.616 OK
2020/08/10 18:13:24.616 OK
macLib: macro 69+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
Can't open /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd: No such file or directory
Can't open /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd: No such file or directory
Can't open /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd: No such file or directory
Can't open /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd: No such file or directory
Can't open /epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd: No such file or directory
2020/08/10 18:13:24.616 OK
2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=55,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=62"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "62")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,62,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,62,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=62,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EK1122, SLAVE_ID=69"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "69")
epicsEnvSet("HW_DESC",            "EK1122")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEK1122.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1122")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04622c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,69,0x2,0x04622c52)"
# Alias = 0
ecmcConfigOrDie "Cfg.EcAddSlave(0,69,0x2,0x04622c52)"
ecmcFileExist(ecmcEK1122.substitutions,1,1)
dbLoadTemplate(ecmcEK1122.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=69,HWTYPE=EK1122,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL9110
#   Position indexes: 7,17,28,38,49
#   NOTE: cmd file is part of dtlTuners Application
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd", "HW_DESC=EL9110, SLAVE_ID=7"
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd", "HW_DESC=EL9110, SLAVE_ID=17"
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd", "HW_DESC=EL9110, SLAVE_ID=28"
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd", "HW_DESC=EL9110, SLAVE_ID=38"
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/addSlave.cmd", "HW_DESC=EL9110, SLAVE_ID=49"

# - Module EL1008
#   Position indexes: 4,5,14,15,25,26,35,36,46,47
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=4"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "4")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,4,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntr2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
2020/08/10 18:13:24.617 OK
macLib: macro 4+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
2020/08/10 18:13:24.618 OK
macLib: macro 5+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
2020/08/10 18:13:24.619 OK
macLib: macro 14+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
yComplete(4,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=4,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=5"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "5")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,5,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=5,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=14"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "14")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,14,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(14,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=14,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=15"
#===============2020/08/10 18:13:24.821 OK
2020/08/10 18:13:24.821 OK
2020/08/10 18:13:24.821 OK
2020/08/10 18:13:24.821 OK
2020/08/10 18:13:24.822 OK
2020/08/10 18:13:24.822 OK
2020/08/10 18:13:24.822 OK
2020/08/10 18:13:24.822 OK
2020/08/10 18:13:24.822 OK
macLib: macro 15+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.025 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.026 OK
2020/08/10 18:13:25.027 OK
2020/08/10 18:13:25.027 OK
macLib: macro 25+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.030 OK
2020/08/10 18:13:25.030 OK
===============================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "15")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,15,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(15,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=15,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=25"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "25")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,25,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(25,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=25,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=26"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "26")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,26,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,2020/08/10 18:13:25.030 OK
2020/08/10 18:13:25.030 OK
2020/08/10 18:13:25.030 OK
2020/08/10 18:13:25.031 OK
2020/08/10 18:13:25.031 OK
2020/08/10 18:13:25.031 OK
2020/08/10 18:13:25.031 OK
macLib: macro 26+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.034 OK
2020/08/10 18:13:25.034 OK
2020/08/10 18:13:25.034 OK
2020/08/10 18:13:25.035 OK
2020/08/10 18:13:25.035 OK
2020/08/10 18:13:25.035 OK
2020/08/10 18:13:25.035 OK
2020/08/10 18:13:25.035 OK
2020/08/10 18:13:25.035 OK
macLib: macro 35+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.238 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.239 OK
2020/08/10 18:13:25.240 OK
2020/08/10 18:13:25.240 OK
0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(26,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=26,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=35"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "35")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,35,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(35,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=35,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=36"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "36")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,36,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(36,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=36,HWTYPE=ELmacLib: macro 36+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.243 OK
2020/08/10 18:13:25.243 OK
2020/08/10 18:13:25.243 OK
2020/08/10 18:13:25.243 OK
2020/08/10 18:13:25.244 OK
2020/08/10 18:13:25.244 OK
2020/08/10 18:13:25.244 OK
2020/08/10 18:13:25.244 OK
2020/08/10 18:13:25.244 OK
macLib: macro 46+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.447 OK
2020/08/10 18:13:25.447 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
2020/08/10 18:13:25.448 OK
macLib: macro 47+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=46"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "46")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,46,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(46,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=46,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL1008, SLAVE_ID=47"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "47")
epicsEnvSet("HW_DESC",            "EL1008")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL1008.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1008")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03f03052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,47,0x2,0x03f03052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(47,0x2,0x03f03052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1008.substitutions,1,1)
dbLoadTemplate(ecmcEL1008.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=47,HWTYPE=EL1008,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL2624
#   Position indexes: 6,16,27,37,48
epicsEnvSet("IOC", "DTL-000")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2624, SLAVE_ID=6"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "6")
epicsEnvSet("HW_DESC",            "EL2624")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2624")
epicsEnvSet("ECMC_EC_VENDO2020/08/10 18:13:25.651 OK
2020/08/10 18:13:25.652 OK
2020/08/10 18:13:25.652 OK
2020/08/10 18:13:25.652 OK
2020/08/10 18:13:25.652 OK
macLib: macro 6+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.855 OK
2020/08/10 18:13:25.855 OK
2020/08/10 18:13:25.855 OK
2020/08/10 18:13:25.855 OK
2020/08/10 18:13:25.855 OK
macLib: macro 16+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:25.858 OK
2020/08/10 18:13:25.858 OK
2020/08/10 18:13:25.858 OK
2020/08/10 18:13:25.858 OK
2020/08/10 18:13:25.858 OK
macLib: macro 27+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.060 OK
R_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0a403052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,6,0x2,0x0a403052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x0a403052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x0a403052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x0a403052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x0a403052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2624.substitutions,1,1)
dbLoadTemplate(ecmcEL2624.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=6,HWTYPE=EL2624,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2624, SLAVE_ID=16"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "16")
epicsEnvSet("HW_DESC",            "EL2624")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2624")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0a403052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,16,0x2,0x0a403052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(16,0x2,0x0a403052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(16,0x2,0x0a403052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(16,0x2,0x0a403052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(16,0x2,0x0a403052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2624.substitutions,1,1)
dbLoadTemplate(ecmcEL2624.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=16,HWTYPE=EL2624,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2624, SLAVE_ID=27"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "27")
epicsEnvSet("HW_DESC",            "EL2624")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2624")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0a403052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,27,0x2,0x0a403052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(27,0x2,0x0a403052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(27,0x2,0x0a403052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(27,0x2,0x0a403052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(27,0x2,0x0a403052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2624.substitutions,1,1)
dbLoadTemplate(ecmcEL2624.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=27,HWTYPE=EL2624,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2624, SLAVE_ID=37"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "37")
epicsEnvSet("HW_DESC",            "EL2624")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2624")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0a403052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,37,0x2,0x0a403052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,2020/08/10 18:13:26.061 OK
2020/08/10 18:13:26.061 OK
2020/08/10 18:13:26.061 OK
2020/08/10 18:13:26.061 OK
macLib: macro 37+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.263 OK
2020/08/10 18:13:26.264 OK
2020/08/10 18:13:26.264 OK
2020/08/10 18:13:26.264 OK
2020/08/10 18:13:26.264 OK
macLib: macro 48+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.267 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
0x0a403052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x0a403052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x0a403052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x0a403052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2624.substitutions,1,1)
dbLoadTemplate(ecmcEL2624.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=37,HWTYPE=EL2624,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2624, SLAVE_ID=48"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "48")
epicsEnvSet("HW_DESC",            "EL2624")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2624.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2624")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0a403052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,48,0x2,0x0a403052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(48,0x2,0x0a403052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(48,0x2,0x0a403052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(48,0x2,0x0a403052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(48,0x2,0x0a403052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2624.substitutions,1,1)
dbLoadTemplate(ecmcEL2624.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=48,HWTYPE=EL2624,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL2819
#   Position indexes: 11,21,32,42,53
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2819, SLAVE_ID=11"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "11")
epicsEnvSet("HW_DESC",            "EL2819")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2819")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0b033052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,11,0x2,0x0b033052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7070,0x1,1,BO_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7080,0x1,1,BO_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x7090,0x1,1,BO_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70A0,0x1,1,BO_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70B0,0x1,1,BO_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70C0,0x1,1,BO_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70D0,0x1,1,BO_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70E0,0x1,1,BO_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,1,2,0x1600,0x70F0,0x1,1,BO_16)"
ecmcConfigOr2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.268 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
2020/08/10 18:13:26.269 OK
macLib: macro 11+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.479 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.480 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
Die "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6001,0x1,4,STATUS_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6011,0x1,4,STATUS_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6021,0x1,4,STATUS_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6031,0x1,4,STATUS_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6041,0x1,4,STATUS_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6051,0x1,4,STATUS_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6061,0x1,4,STATUS_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6071,0x1,4,STATUS_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6081,0x1,4,STATUS_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x6091,0x1,4,STATUS_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60A1,0x1,4,STATUS_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60B1,0x1,4,STATUS_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60C1,0x1,4,STATUS_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60D1,0x1,4,STATUS_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60E1,0x1,4,STATUS_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(11,0x2,0x0b033052,2,3,0x1A00,0x60F1,0x1,4,STATUS_16)"
ecmcFileExist(ecmcEL2819.substitutions,1,1)
dbLoadTemplate(ecmcEL2819.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=11,HWTYPE=EL2819,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2819, SLAVE_ID=21"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "21")
epicsEnvSet("HW_DESC",            "EL2819")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2819")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0b033052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,21,0x2,0x0b033052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7070,0x1,1,BO_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7080,0x1,1,BO_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x7090,0x1,1,BO_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70A0,0x1,1,BO_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70B0,0x1,1,BO_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70C0,0x1,1,BO_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70D0,0x1,1,BO_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70E0,0x1,1,BO_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,1,2,0x1600,0x70F0,0x1,1,BO_16)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6001,0x1,4,STATUS_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6011,0x1,4,STATUS_2)"
ecmcConfigOrDie2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.481 OK
2020/08/10 18:13:26.482 OK
2020/08/10 18:13:26.482 OK
2020/08/10 18:13:26.482 OK
2020/08/10 18:13:26.482 OK
2020/08/10 18:13:26.482 OK
2020/08/10 18:13:26.482 OK
macLib: macro 21+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.692 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.693 OK
 "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6021,0x1,4,STATUS_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6031,0x1,4,STATUS_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6041,0x1,4,STATUS_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6051,0x1,4,STATUS_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6061,0x1,4,STATUS_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6071,0x1,4,STATUS_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6081,0x1,4,STATUS_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x6091,0x1,4,STATUS_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60A1,0x1,4,STATUS_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60B1,0x1,4,STATUS_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60C1,0x1,4,STATUS_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60D1,0x1,4,STATUS_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60E1,0x1,4,STATUS_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(21,0x2,0x0b033052,2,3,0x1A00,0x60F1,0x1,4,STATUS_16)"
ecmcFileExist(ecmcEL2819.substitutions,1,1)
dbLoadTemplate(ecmcEL2819.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=21,HWTYPE=EL2819,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2819, SLAVE_ID=32"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "32")
epicsEnvSet("HW_DESC",            "EL2819")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2819")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0b033052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,32,0x2,0x0b033052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7070,0x1,1,BO_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7080,0x1,1,BO_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x7090,0x1,1,BO_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70A0,0x1,1,BO_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70B0,0x1,1,BO_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70C0,0x1,1,BO_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70D0,0x1,1,BO_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70E0,0x1,1,BO_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,1,2,0x1600,0x70F0,0x1,1,BO_16)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6001,0x1,4,STATUS_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6011,0x1,4,STATUS_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6021,0x1,4,STATUS_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6031,0x1,4,STATUS_4)"
ecmcConfigOrDie "C2020/08/10 18:13:26.693 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
2020/08/10 18:13:26.694 OK
macLib: macro 32+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.704 OK
2020/08/10 18:13:26.704 OK
2020/08/10 18:13:26.704 OK
2020/08/10 18:13:26.704 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.705 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
fg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6041,0x1,4,STATUS_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6051,0x1,4,STATUS_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6061,0x1,4,STATUS_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6071,0x1,4,STATUS_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6081,0x1,4,STATUS_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x6091,0x1,4,STATUS_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60A1,0x1,4,STATUS_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60B1,0x1,4,STATUS_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60C1,0x1,4,STATUS_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60D1,0x1,4,STATUS_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60E1,0x1,4,STATUS_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(32,0x2,0x0b033052,2,3,0x1A00,0x60F1,0x1,4,STATUS_16)"
ecmcFileExist(ecmcEL2819.substitutions,1,1)
dbLoadTemplate(ecmcEL2819.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=32,HWTYPE=EL2819,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2819, SLAVE_ID=42"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "42")
epicsEnvSet("HW_DESC",            "EL2819")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2819")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0b033052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,42,0x2,0x0b033052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7070,0x1,1,BO_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7080,0x1,1,BO_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x7090,0x1,1,BO_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70A0,0x1,1,BO_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70B0,0x1,1,BO_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70C0,0x1,1,BO_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70D0,0x1,1,BO_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70E0,0x1,1,BO_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,1,2,0x1600,0x70F0,0x1,1,BO_16)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6001,0x1,4,STATUS_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6011,0x1,4,STATUS_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6021,0x1,4,STATUS_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6031,0x1,4,STATUS_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6041,0x1,4,STATUS_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6051,0x1,4,STATUS_6)"
ecmcConfigOrDie "Cfg.2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
2020/08/10 18:13:26.706 OK
macLib: macro 42+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.716 OK
2020/08/10 18:13:26.716 OK
2020/08/10 18:13:26.716 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.717 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6061,0x1,4,STATUS_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6071,0x1,4,STATUS_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6081,0x1,4,STATUS_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x6091,0x1,4,STATUS_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60A1,0x1,4,STATUS_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60B1,0x1,4,STATUS_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60C1,0x1,4,STATUS_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60D1,0x1,4,STATUS_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60E1,0x1,4,STATUS_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(42,0x2,0x0b033052,2,3,0x1A00,0x60F1,0x1,4,STATUS_16)"
ecmcFileExist(ecmcEL2819.substitutions,1,1)
dbLoadTemplate(ecmcEL2819.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=42,HWTYPE=EL2819,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2819, SLAVE_ID=53"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "53")
epicsEnvSet("HW_DESC",            "EL2819")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2819.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2819")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0b033052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,53,0x2,0x0b033052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7070,0x1,1,BO_8)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7080,0x1,1,BO_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x7090,0x1,1,BO_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70A0,0x1,1,BO_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70B0,0x1,1,BO_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70C0,0x1,1,BO_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70D0,0x1,1,BO_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70E0,0x1,1,BO_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,1,2,0x1600,0x70F0,0x1,1,BO_16)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6001,0x1,4,STATUS_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6011,0x1,4,STATUS_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6021,0x1,4,STATUS_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6031,0x1,4,STATUS_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6041,0x1,4,STATUS_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6051,0x1,4,STATUS_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6061,0x1,4,STATUS_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6071,0x1,4,STATUS_8)"
ecmcConfigOrDie "Cfg.EcA2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
2020/08/10 18:13:26.718 OK
macLib: macro 53+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.727 OK
2020/08/10 18:13:26.727 OK
2020/08/10 18:13:26.727 OK
2020/08/10 18:13:26.727 OK
2020/08/10 18:13:26.727 OK
macLib: macro 57+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.729 OK
2020/08/10 18:13:26.729 OK
2020/08/10 18:13:26.729 OK
2020/08/10 18:13:26.729 OK
2020/08/10 18:13:26.729 OK
macLib: macro 58+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
ddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6081,0x1,4,STATUS_9)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x6091,0x1,4,STATUS_10)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60A1,0x1,4,STATUS_11)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60B1,0x1,4,STATUS_12)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60C1,0x1,4,STATUS_13)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60D1,0x1,4,STATUS_14)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60E1,0x1,4,STATUS_15)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(53,0x2,0x0b033052,2,3,0x1A00,0x60F1,0x1,4,STATUS_16)"
ecmcFileExist(ecmcEL2819.substitutions,1,1)
dbLoadTemplate(ecmcEL2819.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=53,HWTYPE=EL2819,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL2124
#   Position indexes: 57,58,60,61,64,65,67,68,71,72
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=57"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "57")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,57,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(57,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(57,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(57,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(57,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=57,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=58"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "58")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,58,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(58,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(58,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(58,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(58,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=58,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=60"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/2020/08/10 18:13:26.731 OK
2020/08/10 18:13:26.731 OK
2020/08/10 18:13:26.731 OK
2020/08/10 18:13:26.731 OK
2020/08/10 18:13:26.731 OK
macLib: macro 60+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.732 OK
2020/08/10 18:13:26.733 OK
2020/08/10 18:13:26.733 OK
2020/08/10 18:13:26.733 OK
2020/08/10 18:13:26.733 OK
macLib: macro 61+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.734 OK
2020/08/10 18:13:26.734 OK
2020/08/10 18:13:26.734 OK
2020/08/10 18:13:26.734 OK
2020/08/10 18:13:26.734 OK
macLib: macro 64+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,60,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=60,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=61"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "61")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,61,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=61,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=64"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "64")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,64,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(64,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(64,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(64,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(64,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=64,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=65"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "65")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE" 2020/08/10 18:13:26.735 OK
2020/08/10 18:13:26.736 OK
2020/08/10 18:13:26.736 OK
2020/08/10 18:13:26.736 OK
2020/08/10 18:13:26.736 OK
macLib: macro 65+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.737 OK
2020/08/10 18:13:26.737 OK
2020/08/10 18:13:26.737 OK
2020/08/10 18:13:26.737 OK
2020/08/10 18:13:26.737 OK
macLib: macro 67+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.738 OK
2020/08/10 18:13:26.738 OK
2020/08/10 18:13:26.739 OK
2020/08/10 18:13:26.739 OK
2020/08/10 18:13:26.739 OK
macLib: macro 68+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
            "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,65,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(65,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(65,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(65,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(65,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=65,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=67"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "67")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,67,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(67,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(67,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(67,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(67,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=67,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=68"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "68")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,68,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(68,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(68,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(68,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(68,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=68,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=71"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "71")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x02020/08/10 18:13:26.740 OK
2020/08/10 18:13:26.740 OK
2020/08/10 18:13:26.740 OK
2020/08/10 18:13:26.740 OK
2020/08/10 18:13:26.740 OK
macLib: macro 71+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.741 OK
2020/08/10 18:13:26.741 OK
2020/08/10 18:13:26.741 OK
2020/08/10 18:13:26.741 OK
2020/08/10 18:13:26.741 OK
macLib: macro 72+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.742 OK
2020/08/10 18:13:26.748 OK
2020/08/10 18:13:26.748 OK
2020/08/10 18:13:26.748 OK
2020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
84c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,71,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(71,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(71,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(71,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(71,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=71,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL2124, SLAVE_ID=72"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "72")
epicsEnvSet("HW_DESC",            "EL2124")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL2124.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2124")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x084c3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,72,0x2,0x084c3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(72,0x2,0x084c3052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(72,0x2,0x084c3052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(72,0x2,0x084c3052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(72,0x2,0x084c3052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcFileExist(ecmcEL2124.substitutions,1,1)
dbLoadTemplate(ecmcEL2124.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=72,HWTYPE=EL2124,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL3255
#   Position indexes: 3,13,24,34,45
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL3255, SLAVE_ID=3"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "3")
epicsEnvSet("HW_DESC",            "EL3255")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL3255")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0cb73052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,3,0x2,0x0cb73052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(3,0x1011,0x1,1684107116,4)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "1")
epicsEnvSet("ECMC_EC_PDO"                "0x1a00")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6000")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x11,16,1,CH1_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "2")
epicsEnvSet("ECMC_EC_PDO"                "0x1a02")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6010")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x11,16,1,CH2_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "3")
epicsEnvSet("ECMC_EC_PDO"                "0x1a04")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6020")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x1,16,CH3_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb730522020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
2020/08/10 18:13:26.749 OK
macLib: macro 3+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.750 OK
2020/08/10 18:13:26.756 OK
2020/08/10 18:13:26.756 OK
2020/08/10 18:13:26.756 OK
2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
,2,3,0x1a04,0x6020,0x11,16,1,CH3_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "4")
epicsEnvSet("ECMC_EC_PDO"                "0x1a06")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6030")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x1,16,CH4_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x11,16,1,CH4_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "5")
epicsEnvSet("ECMC_EC_PDO"                "0x1a08")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6040")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x1,16,CH5_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x11,16,1,CH5_VALUE)"
epicsEnvUnset("ECMC_EC_CHANNEL_ID")
epicsEnvUnset("ECMC_EC_PDO")
epicsEnvUnset("ECMC_EC_PDO_ENTRY")
ecmcFileExist(ecmcEL3255.substitutions,1,1)
dbLoadTemplate(ecmcEL3255.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=3,HWTYPE=EL3255,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL3255, SLAVE_ID=13"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "13")
epicsEnvSet("HW_DESC",            "EL3255")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL3255")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0cb73052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,13,0x2,0x0cb73052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(13,0x1011,0x1,1684107116,4)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "1")
epicsEnvSet("ECMC_EC_PDO"                "0x1a00")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6000")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x11,16,1,CH1_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "2")
epicsEnvSet("ECMC_EC_PDO"                "0x1a02")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6010")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x11,16,1,CH2_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "3")
epicsEnvSet("ECMC_EC_PDO"                "0x1a04")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6020")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x1,16,CH3_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x11,16,1,CH3_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "4")
epicsEnvSet("ECMC_EC_PDO"                "0x1a06")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6030")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x1,16,CH4_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x11,16,1,CH4_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "5")
epicsEnvSet("ECMC_EC_PDO"                "0x1a08")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6040")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryC2020/08/10 18:13:26.757 OK
2020/08/10 18:13:26.757 OK
macLib: macro 13+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:26.758 OK
2020/08/10 18:13:26.764 OK
2020/08/10 18:13:26.764 OK
2020/08/10 18:13:26.764 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
2020/08/10 18:13:26.765 OK
macLib: macro 24+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
omplete(13,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x1,16,CH5_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(13,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x11,16,1,CH5_VALUE)"
epicsEnvUnset("ECMC_EC_CHANNEL_ID")
epicsEnvUnset("ECMC_EC_PDO")
epicsEnvUnset("ECMC_EC_PDO_ENTRY")
ecmcFileExist(ecmcEL3255.substitutions,1,1)
dbLoadTemplate(ecmcEL3255.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=13,HWTYPE=EL3255,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL3255, SLAVE_ID=24"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "24")
epicsEnvSet("HW_DESC",            "EL3255")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL3255")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0cb73052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,24,0x2,0x0cb73052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(24,0x1011,0x1,1684107116,4)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "1")
epicsEnvSet("ECMC_EC_PDO"                "0x1a00")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6000")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x11,16,1,CH1_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "2")
epicsEnvSet("ECMC_EC_PDO"                "0x1a02")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6010")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x11,16,1,CH2_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "3")
epicsEnvSet("ECMC_EC_PDO"                "0x1a04")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6020")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x1,16,CH3_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x11,16,1,CH3_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "4")
epicsEnvSet("ECMC_EC_PDO"                "0x1a06")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6030")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x1,16,CH4_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x11,16,1,CH4_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "5")
epicsEnvSet("ECMC_EC_PDO"                "0x1a08")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6040")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x1,16,CH5_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(24,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x11,16,1,CH5_VALUE)"
epicsEnvUnset("ECMC_EC_CHANNEL_ID")
epicsEnvUnset("ECMC_EC_PDO")
epicsEnvUnset("ECMC_EC_PDO_ENTRY")
ecmcFileExist(ecmcEL3255.substitutions,1,1)
dbLoadTemplate(ecmcEL3255.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=24,HWTYPE=EL3255,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL3255, SLAVE_ID=34"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "34")
2020/08/10 18:13:26.966 OK
2020/08/10 18:13:26.973 OK
2020/08/10 18:13:26.974 OK
2020/08/10 18:13:26.974 OK
2020/08/10 18:13:26.974 OK
2020/08/10 18:13:26.974 OK
2020/08/10 18:13:26.975 OK
2020/08/10 18:13:26.975 OK
2020/08/10 18:13:26.975 OK
2020/08/10 18:13:26.975 OK
2020/08/10 18:13:26.975 OK
2020/08/10 18:13:26.975 OK
macLib: macro 34+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:27.179 OK
2020/08/10 18:13:27.185 OK
epicsEnvSet("HW_DESC",            "EL3255")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL3255")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0cb73052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,34,0x2,0x0cb73052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(34,0x1011,0x1,1684107116,4)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "1")
epicsEnvSet("ECMC_EC_PDO"                "0x1a00")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6000")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x11,16,1,CH1_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "2")
epicsEnvSet("ECMC_EC_PDO"                "0x1a02")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6010")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x11,16,1,CH2_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "3")
epicsEnvSet("ECMC_EC_PDO"                "0x1a04")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6020")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x1,16,CH3_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x11,16,1,CH3_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "4")
epicsEnvSet("ECMC_EC_PDO"                "0x1a06")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6030")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x1,16,CH4_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x11,16,1,CH4_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "5")
epicsEnvSet("ECMC_EC_PDO"                "0x1a08")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6040")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x1,16,CH5_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(34,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x11,16,1,CH5_VALUE)"
epicsEnvUnset("ECMC_EC_CHANNEL_ID")
epicsEnvUnset("ECMC_EC_PDO")
epicsEnvUnset("ECMC_EC_PDO_ENTRY")
ecmcFileExist(ecmcEL3255.substitutions,1,1)
dbLoadTemplate(ecmcEL3255.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=34,HWTYPE=EL3255,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL3255, SLAVE_ID=45"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "45")
epicsEnvSet("HW_DESC",            "EL3255")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL3255.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL3255")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0cb73052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,45,0x2,0x0cb73052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(45,0x1011,0x1,1684107116,4)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "1")
epicsEnvSet("ECMC_EC_PDO"                "0x1a00")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6000")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecm2020/08/10 18:13:27.186 OK
2020/08/10 18:13:27.186 OK
2020/08/10 18:13:27.186 OK
2020/08/10 18:13:27.186 OK
2020/08/10 18:13:27.187 OK
2020/08/10 18:13:27.187 OK
2020/08/10 18:13:27.187 OK
2020/08/10 18:13:27.187 OK
2020/08/10 18:13:27.187 OK
2020/08/10 18:13:27.187 OK
macLib: macro 45+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:27.391 OK
2020/08/10 18:13:27.475 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.476 OK
2020/08/10 18:13:27.477 OK
2020/08/10 18:13:27.477 OK
ccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a00,0x6000,0x11,16,1,CH1_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "2")
epicsEnvSet("ECMC_EC_PDO"                "0x1a02")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6010")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a02,0x6010,0x11,16,1,CH2_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "3")
epicsEnvSet("ECMC_EC_PDO"                "0x1a04")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6020")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x1,16,CH3_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a04,0x6020,0x11,16,1,CH3_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "4")
epicsEnvSet("ECMC_EC_PDO"                "0x1a06")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6030")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x1,16,CH4_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a06,0x6030,0x11,16,1,CH4_VALUE)"
epicsEnvSet("ECMC_EC_CHANNEL_ID"         "5")
epicsEnvSet("ECMC_EC_PDO"                "0x1a08")
epicsEnvSet("ECMC_EC_PDO_ENTRY"          "0x6040")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL32XX-chX-analogInput.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x1,16,CH5_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(45,0x2,0x0cb73052,2,3,0x1a08,0x6040,0x11,16,1,CH5_VALUE)"
epicsEnvUnset("ECMC_EC_CHANNEL_ID")
epicsEnvUnset("ECMC_EC_PDO")
epicsEnvUnset("ECMC_EC_PDO_ENTRY")
ecmcFileExist(ecmcEL3255.substitutions,1,1)
dbLoadTemplate(ecmcEL3255.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=45,HWTYPE=EL3255,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID

# - Module EL7047
#   Position indexes: 8,9,10,18,19,20,29,30,31,39,40,41,50,51,52
epicsEnvSet("IOC", "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=8"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "8")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,8,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(8,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0xA,1,1)"
ecmcCon2020/08/10 18:13:27.477 OK
2020/08/10 18:13:27.477 OK
macLib: macro 8+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.680 OK
2020/08/10 18:13:27.768 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.769 OK
2020/08/10 18:13:27.770 OK
2020/08/10 18:13:27.770 OK
2020/08/10 18:13:27.770 OK
2020/08/10 18:13:27.770 OK
macLib: macro 9+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:27.973 OK
2020/08/10 18:13:27.973 OK
2020/08/10 18:13:27.973 OK
2020/08/10 18:13:27.973 OK
2020/08/10 18:13:27.973 OK
2020/08/10 18:13:27.973 OK
figOrDie "Cfg.EcAddSdo(8,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=8,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=9"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "9")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,9,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(9,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(9,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=9,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(9,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=12020/08/10 18:13:27.973 OK
2020/08/10 18:13:28.062 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.063 OK
2020/08/10 18:13:28.064 OK
2020/08/10 18:13:28.064 OK
2020/08/10 18:13:28.064 OK
2020/08/10 18:13:28.064 OK
macLib: macro 10+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.267 OK
2020/08/10 18:13:28.357 OK
2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.358 OK
0"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "10")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,10,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(10,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(10,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=10,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(10,0x8010,0xA,600,2)"
epicsEnvSet("IOC", "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=18"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "18")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,18,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(18,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComple2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.358 OK
2020/08/10 18:13:28.359 OK
2020/08/10 18:13:28.359 OK
2020/08/10 18:13:28.359 OK
2020/08/10 18:13:28.359 OK
2020/08/10 18:13:28.359 OK
macLib: macro 18+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.562 OK
2020/08/10 18:13:28.650 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.651 OK
2020/08/10 18:13:28.652 OK
2020/08/10 18:13:28.652 OK
2020/08/10 18:13:28.652 OK
2020/08/10 18:13:28.652 OK
2020/08/10 18:13:28.652 OK
macLib: macro 19+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
te(18,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(18,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=18,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(18,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=19"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "19")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,19,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(19,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(19,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=19,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(12020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.855 OK
2020/08/10 18:13:28.941 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.942 OK
2020/08/10 18:13:28.943 OK
2020/08/10 18:13:28.943 OK
2020/08/10 18:13:28.943 OK
2020/08/10 18:13:28.943 OK
2020/08/10 18:13:28.943 OK
macLib: macro 20+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.146 OK
2020/08/10 18:13:29.232 OK
2020/08/10 18:13:29.233 OK
9,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(19,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=20"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "20")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,20,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(20,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(20,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=20,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(20,0x8010,0xA,600,2)"
epicsEnvSet("IOC", "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=29"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "29")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,29,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(29,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryCom2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.233 OK
2020/08/10 18:13:29.234 OK
2020/08/10 18:13:29.234 OK
2020/08/10 18:13:29.234 OK
2020/08/10 18:13:29.234 OK
2020/08/10 18:13:29.234 OK
macLib: macro 29+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.437 OK
2020/08/10 18:13:29.438 OK
2020/08/10 18:13:29.522 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.523 OK
2020/08/10 18:13:29.524 OK
2020/08/10 18:13:29.524 OK
2020/08/10 18:13:29.524 OK
2020/08/10 18:13:29.524 OK
2020/08/10 18:13:29.524 OK
macLib: macro 30+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
plete(29,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(29,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=29,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(29,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=30"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "30")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,30,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(30,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(30,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=30,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#======================================================2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.527 OK
2020/08/10 18:13:29.616 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.617 OK
2020/08/10 18:13:29.618 OK
2020/08/10 18:13:29.618 OK
2020/08/10 18:13:29.618 OK
2020/08/10 18:13:29.618 OK
macLib: macro 31+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.821 OK
=========================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(30,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=31"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "31")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,31,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(31,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(31,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=31,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(31,0x8010,0xA,600,2)"
epicsEnvSet("IOC", "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=39"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "39")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSe2020/08/10 18:13:29.821 OK
2020/08/10 18:13:29.907 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.908 OK
2020/08/10 18:13:29.909 OK
2020/08/10 18:13:29.909 OK
2020/08/10 18:13:29.909 OK
2020/08/10 18:13:29.909 OK
2020/08/10 18:13:29.909 OK
macLib: macro 39+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:29.911 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.912 OK
2020/08/10 18:13:29.996 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.997 OK
2020/08/10 18:13:29.998 OK
2020/08/10 18:13:29.998 OK
2020/08/10 18:13:29.998 OK
2020/08/10 18:13:29.998 OK
2020/08/10 18:13:29.998 OK
t("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,39,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(39,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(39,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=39,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(39,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=40"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "40")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,40,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(40,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(40,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8012,0x9,0,1)"
emacLib: macro 40+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.001 OK
2020/08/10 18:13:30.090 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.091 OK
2020/08/10 18:13:30.092 OK
2020/08/10 18:13:30.092 OK
2020/08/10 18:13:30.092 OK
2020/08/10 18:13:30.092 OK
macLib: macro 41+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:30.094 OK
2020/08/10 18:13:30.095 OK
2020/08/10 18:13:30.095 OK
2020/08/10 18:13:30.095 OK
2020/08/10 18:13:30.095 OK
2020/08/10 18:13:30.095 OK
cmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=40,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(40,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=41"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "41")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,41,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(41,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(41,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=41,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(41,0x8010,0xA,600,2)"
epicsEnvSet("IOC", "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=50"
#============================2020/08/10 18:13:30.095 OK
2020/08/10 18:13:30.183 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.184 OK
2020/08/10 18:13:30.185 OK
2020/08/10 18:13:30.185 OK
2020/08/10 18:13:30.185 OK
2020/08/10 18:13:30.185 OK
2020/08/10 18:13:30.185 OK
macLib: macro 50+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.188 OK
2020/08/10 18:13:30.189 OK
2020/08/10 18:13:30.276 OK
2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.277 OK
==================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,50,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(50,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=50,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=51"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,51,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(51,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmc2020/08/10 18:13:30.277 OK
2020/08/10 18:13:30.278 OK
2020/08/10 18:13:30.278 OK
2020/08/10 18:13:30.278 OK
2020/08/10 18:13:30.278 OK
2020/08/10 18:13:30.278 OK
macLib: macro 51+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.481 OK
2020/08/10 18:13:30.482 OK
2020/08/10 18:13:30.568 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.569 OK
2020/08/10 18:13:30.570 OK
2020/08/10 18:13:30.570 OK
2020/08/10 18:13:30.570 OK
2020/08/10 18:13:30.570 OK
macLib: macro 52+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/10 18:13:30.572 OK
ConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=51,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0xA,600,2)"
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addSlave.cmd", "HW_DESC=EL7047, SLAVE_ID=52"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "52")
epicsEnvSet("HW_DESC",            "EL7047")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7047")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b873052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,52,0x2,0x1b873052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(52,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(52,0x2,0x1b873052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7047.substitutions,1,1)
dbLoadTemplate(ecmcEL7047.substitutions,"P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,SLAVE_POS=52,HWTYPE=EL7047,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applySlaveConfig.cmd",   "CONFIG=-Motor-Leadshine-57HS09"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmcEL7047-Motor-Leadshine-57HS09.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,0x1,3000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,2020/08/10 18:13:30.573 OK
2020/08/10 18:13:30.573 OK
2020/08/10 18:13:30.573 OK
2020/08/10 18:13:30.573 OK
2020/08/10 18:13:30.573 OK
2020/08/10 18:13:30.575 OK
0x2,2000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,0x3,4800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,0x4,360,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(52,0x8010,0xA,600,2)"


##############################################################################
############# Apply Configuration

iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applyConfig.cmd"
#===============================================================================
# applyConfig.cfg
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"


##############################################################################
############ Axis Configuration

# - Axis Tank 1
epicsEnvSet("DEV",      "DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M1"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-010:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M1",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M1
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT1M1")
epicsEnvSet("ECMC_R",                     "AxisT1M1-")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "Axis T1 M1")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s8.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s3.CH1_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s8.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s8.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s8.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s8.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsE2020/08/10 18:13:30.577 OK
2020/08/10 18:13:30.577 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.577 OK
2020/08/10 18:13:30.577 OK
2020/08/10 18:13:30.577 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.578 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
nvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s4.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s4.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")         #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(1,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(1,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(1,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(1,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(1,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(1,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(1,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(1,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(1,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s3.CH1_VALUE,"ax1.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(1,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(1,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(1,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(1,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(1,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s8.STM_CONTROL.0,"ax1.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.579 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 OK
2020/08/10 18:13:30.580 ecmcMotorRecord:: setIntegerParam(1 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.580 ecmcMotorRecord:: setDoubleParam(1 motorPowerOnDelay_)=6
2020/08/10 18:13:30.580 ecmcMotorRecord:: setDoubleParam(1 motorPowerOffDelay_=-1
2020/08/10 18:13:30.581 ecmcMotorRecord:: connected(1)
2020/08/10 18:13:30.581 ecmcMotorRecord:: initialPoll(1) status=0
s8.STM_STATUS.1,"ax1.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s8.VELOCITY_SETPOINT,"ax1.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s8.STM_CONTROL.2,"ax1.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(1,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(1,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(1,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(1,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_2.0,"ax1.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_1.0,"ax1.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax1.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax1.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(1,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(1,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(1,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(1,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(1,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(1,300)"
ecmcMotorRecordCreateAxis(MCU1, "1", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M1, MOTOR_PORT=MCU1, AXIS_NO=1, DESC=Axis T1 M1, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M1, MOTOR_PORT=MCU1, AXIS_NO=1,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=1,Name=DTL-010:AxisT1M1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-010:,AXIS_NAME=AxisT1M1,AXIS_NO=1,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M2"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-010:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M2",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M2
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT1M2")
epicsEnvSet("ECMC_R",                     "AxisT1M2-")
epicsEnvSet("ECMC_AXIS_NO",               "2")
epicsEnvSet("ECMC_DESC",                  "Axis T1 M2")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s9.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s3.CH2_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s9.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s9.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s9.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s9.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                  2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.587 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
     # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s4.BI_4.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s4.BI_3.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(2,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(2,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(2,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(2,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(2,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(2,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(2,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(2,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(2,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s3.CH2_VALUE,"ax2.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(2,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(2,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(2,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(2,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(2,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s9.STM_CONTROL.0,"ax2.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s9.STM_STATUS.1,"ax2.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s9.VELOCITY_SETPOINT,"ax2.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObjec2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.588 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.589 OK
2020/08/10 18:13:30.590 OK
2020/08/10 18:13:30.590 OK
2020/08/10 18:13:30.590 ecmcMotorRecord:: setIntegerParam(2 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.590 ecmcMotorRecord:: setDoubleParam(2 motorPowerOnDelay_)=6
2020/08/10 18:13:30.590 ecmcMotorRecord:: setDoubleParam(2 motorPowerOffDelay_=-1
2020/08/10 18:13:30.590 ecmcMotorRecord:: connected(2)
2020/08/10 18:13:30.590 ecmcMotorRecord:: initialPoll(2) status=0
t(,"ax2.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s9.STM_CONTROL.2,"ax2.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(2,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(2,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(2,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(2,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_4.0,"ax2.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_3.0,"ax2.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax2.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax2.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(2,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(2,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(2,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(2,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(2,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(2,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(2,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(2,300)"
ecmcMotorRecordCreateAxis(MCU1, "2", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M2, MOTOR_PORT=MCU1, AXIS_NO=2, DESC=Axis T1 M2, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M2, MOTOR_PORT=MCU1, AXIS_NO=2,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=2,Name=DTL-010:AxisT1M2")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-010:,AXIS_NAME=AxisT1M2,AXIS_NO=2,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M3"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-010:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M3",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T1M3
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT1M3")
epicsEnvSet("ECMC_R",                     "AxisT1M3-")
epicsEnvSet("ECMC_AXIS_NO",               "3")
epicsEnvSet("ECMC_DESC",                  "Axis T1 M3")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s10.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s3.CH3_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s10.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s10.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s10.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s10.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency 2020/08/10 18:13:30.596 OK
2020/08/10 18:13:30.596 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.596 OK
2020/08/10 18:13:30.596 OK
2020/08/10 18:13:30.596 OK
2020/08/10 18:13:30.596 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.597 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s4.BI_6.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s4.BI_5.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(3,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(3,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(3,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(3,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(3,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(3,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(3,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(3,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(3,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s3.CH3_VALUE,"ax3.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(3,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(3,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(3,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(3,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(3,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s10.STM_CONTROL.0,"ax3.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s10.STM_STATUS.1,"ax3.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s10.VELOCITY_SETPOINT,"ax3.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s10.STM_CONTROL.2,"ax3.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(3,2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.598 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 OK
2020/08/10 18:13:30.599 ecmcMotorRecord:: setIntegerParam(3 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.599 ecmcMotorRecord:: setDoubleParam(3 motorPowerOnDelay_)=6
2020/08/10 18:13:30.599 ecmcMotorRecord:: setDoubleParam(3 motorPowerOffDelay_=-1
2020/08/10 18:13:30.599 ecmcMotorRecord:: connected(3)
2020/08/10 18:13:30.599 ecmcMotorRecord:: initialPoll(3) status=0
-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(3,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(3,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(3,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(3,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_6.0,"ax3.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s4.BI_5.0,"ax3.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax3.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax3.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(3,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(3,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(3,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(3,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(3,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(3,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(3,300)"
ecmcMotorRecordCreateAxis(MCU1, "3", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M3, MOTOR_PORT=MCU1, AXIS_NO=3, DESC=Axis T1 M3, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-010:, MOTOR_NAME=AxisT1M3, MOTOR_PORT=MCU1, AXIS_NO=3,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=3,Name=DTL-010:AxisT1M3")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-010:,AXIS_NAME=AxisT1M3,AXIS_NO=3,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")

# - Axis Tank 2
epicsEnvSet("DEV",      "DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M1"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-020:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M1",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M1
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT2M1")
epicsEnvSet("ECMC_R",                     "AxisT2M1-")
epicsEnvSet("ECMC_AXIS_NO",               "4")
epicsEnvSet("ECMC_DESC",                  "Axis T2 M1")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s18.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s13.CH1_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s18.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s18.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s18.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s18.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",  2020/08/10 18:13:30.603 OK
2020/08/10 18:13:30.603 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
           "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s14.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s14.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(4,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(4,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(4,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(4,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(4,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(4,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(4,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(4,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(4,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s13.CH1_VALUE,"ax4.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(4,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(4,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(4,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(4,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(4,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s18.STM_CONTROL.0,"ax4.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s18.STM_STATUS.1,"ax4.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s18.VELOCITY_SETPOINT,"ax4.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.drv.brake2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.604 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 OK
2020/08/10 18:13:30.605 ecmcMotorRecord:: setIntegerParam(4 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.605 ecmcMotorRecord:: setDoubleParam(4 motorPowerOnDelay_)=6
2020/08/10 18:13:30.605 ecmcMotorRecord:: setDoubleParam(4 motorPowerOffDelay_=-1
2020/08/10 18:13:30.605 ecmcMotorRecord:: connected(4)
2020/08/10 18:13:30.605 ecmcMotorRecord:: initialPoll(4) status=0
")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s18.STM_CONTROL.2,"ax4.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(4,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(4,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(4,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(4,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_2.0,"ax4.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_1.0,"ax4.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax4.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax4.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(4,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(4,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(4,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(4,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(4,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(4,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(4,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(4,300)"
ecmcMotorRecordCreateAxis(MCU1, "4", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M1, MOTOR_PORT=MCU1, AXIS_NO=4, DESC=Axis T2 M1, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M1, MOTOR_PORT=MCU1, AXIS_NO=4,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=4,Name=DTL-020:AxisT2M1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-020:,AXIS_NAME=AxisT2M1,AXIS_NO=4,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M2"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-020:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M2",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M2
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT2M2")
epicsEnvSet("ECMC_R",                     "AxisT2M2-")
epicsEnvSet("ECMC_AXIS_NO",               "5")
epicsEnvSet("ECMC_DESC",                  "Axis T2 M2")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "21676")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s19.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s13.CH2_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s19.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s19.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s19.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s19.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.609 OK
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s14.BI_4.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s14.BI_3.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(5,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(5,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(5,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(5,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(5,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(5,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(5,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(5,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s13.CH2_VALUE,"ax5.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(5,21676)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(5,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(5,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(5,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(5,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s19.STM_CONTROL.0,"ax5.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s19.STM_STATUS.1,"ax5.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s19.VELOCITY_2020/08/10 18:13:30.609 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 OK
2020/08/10 18:13:30.610 ecmcMotorRecord:: setIntegerParam(5 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.610 ecmcMotorRecord:: setDoubleParam(5 motorPowerOnDelay_)=6
2020/08/10 18:13:30.610 ecmcMotorRecord:: setDoubleParam(5 motorPowerOffDelay_=-1
2020/08/10 18:13:30.610 ecmcMotorRecord:: connected(5)
2020/08/10 18:13:30.610 ecmcMotorRecord:: initialPoll(5) status=0
SETPOINT,"ax5.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s19.STM_CONTROL.2,"ax5.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(5,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(5,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(5,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_4.0,"ax5.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_3.0,"ax5.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax5.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax5.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(5,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(5,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(5,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(5,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(5,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(5,300)"
ecmcMotorRecordCreateAxis(MCU1, "5", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M2, MOTOR_PORT=MCU1, AXIS_NO=5, DESC=Axis T2 M2, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M2, MOTOR_PORT=MCU1, AXIS_NO=5,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=5,Name=DTL-020:AxisT2M2")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-020:,AXIS_NAME=AxisT2M2,AXIS_NO=5,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M3"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-020:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M3",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T2M3
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT2M3")
epicsEnvSet("ECMC_R",                     "AxisT2M3-")
epicsEnvSet("ECMC_AXIS_NO",               "6")
epicsEnvSet("ECMC_DESC",                  "Axis T2 M3")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s20.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s13.CH3_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s20.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s20.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s20.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s20.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
e2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.613 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.614 OK
picsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s14.BI_6.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s14.BI_5.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(6,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(6,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(6,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(6,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(6,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(6,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(6,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(6,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s13.CH3_VALUE,"ax6.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(6,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(6,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(6,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(6,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(6,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s20.STM_CONTROL.0,"ax6.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s20.STM_2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 OK
2020/08/10 18:13:30.614 ecmcMotorRecord:: setIntegerParam(6 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.614 ecmcMotorRecord:: setDoubleParam(6 motorPowerOnDelay_)=6
2020/08/10 18:13:30.614 ecmcMotorRecord:: setDoubleParam(6 motorPowerOffDelay_=-1
2020/08/10 18:13:30.615 ecmcMotorRecord:: connected(6)
2020/08/10 18:13:30.615 ecmcMotorRecord:: initialPoll(6) status=0
STATUS.1,"ax6.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s20.VELOCITY_SETPOINT,"ax6.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s20.STM_CONTROL.2,"ax6.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(6,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(6,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_6.0,"ax6.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s14.BI_5.0,"ax6.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax6.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax6.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(6,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(6,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(6,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(6,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(6,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(6,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(6,300)"
ecmcMotorRecordCreateAxis(MCU1, "6", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M3, MOTOR_PORT=MCU1, AXIS_NO=6, DESC=Axis T2 M3, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-020:, MOTOR_NAME=AxisT2M3, MOTOR_PORT=MCU1, AXIS_NO=6,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=6,Name=DTL-020:AxisT2M3")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-020:,AXIS_NAME=AxisT2M3,AXIS_NO=6,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")

# - Axis Tank 3
epicsEnvSet("DEV",      "DTL-030")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M1"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-030:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M1",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M1
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT3M1")
epicsEnvSet("ECMC_R",                     "AxisT3M1-")
epicsEnvSet("ECMC_AXIS_NO",               "7")
epicsEnvSet("ECMC_DESC",                  "Axis T3 M1")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s29.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s24.CH1_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "15")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s29.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s29.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s29.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s29.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "2.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "20.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.04")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s25.BI_2.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s25.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s25.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s25.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(7,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(7,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(7,2.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(7,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(7,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(7,20.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(7,0.04)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(7,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(7,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s24.CH1_VALUE,"ax7.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(7,32020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.617 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 OK
2020/08/10 18:13:30.618 ecmcMotorRecord:: setIntegerParam(7 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.618 ecmcMotorRecord:: setDoubleParam(7 motorPowerOnDelay_)=6
2020/08/10 18:13:30.618 ecmcMotorRecord:: setDoubleParam(7 motorPowerOffDelay_=-1
2020/08/10 18:13:30.618 ecmcMotorRecord:: connected(7)
2020/08/10 18:13:30.618 ecmcMotorRecord:: initialPoll(7) status=0
2767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(7,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(7,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(7,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(7,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s29.STM_CONTROL.0,"ax7.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s29.STM_STATUS.1,"ax7.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s29.VELOCITY_SETPOINT,"ax7.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s29.STM_CONTROL.2,"ax7.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(7,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(7,15)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(7,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(7,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_2.0,"ax7.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_1.0,"ax7.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax7.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax7.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(7,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(7,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(7,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(7,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(7,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(7,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(7,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(7,300)"
ecmcMotorRecordCreateAxis(MCU1, "7", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M1, MOTOR_PORT=MCU1, AXIS_NO=7, DESC=Axis T3 M1, EGU=mm, PREC=3, VELO=2.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M1, MOTOR_PORT=MCU1, AXIS_NO=7,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=7,Name=DTL-030:AxisT3M1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-030:,AXIS_NAME=AxisT3M1,AXIS_NO=7,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M2"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-030:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M2",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M2
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT3M2")
epicsEnvSet("ECMC_R",                     "AxisT3M2-")
epicsEnvSet("ECMC_AXIS_NO",               "8")
epicsEnvSet("ECMC_DESC",                  "Axis T3 M2")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s30.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s24.CH2_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s30.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s30.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s30.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s30.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # B2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
rake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s25.BI_4.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s25.BI_3.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(8,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(8,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(8,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(8,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(8,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(8,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(8,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(8,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s24.CH2_VALUE,"ax8.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchstatus")"
ecmcConfigOrDie 2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.621 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 OK
2020/08/10 18:13:30.622 ecmcMotorRecord:: setIntegerParam(8 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.622 ecmcMotorRecord:: setDoubleParam(8 motorPowerOnDelay_)=6
2020/08/10 18:13:30.622 ecmcMotorRecord:: setDoubleParam(8 motorPowerOffDelay_=-1
2020/08/10 18:13:30.622 ecmcMotorRecord:: connected(8)
2020/08/10 18:13:30.622 ecmcMotorRecord:: initialPoll(8) status=0
"Cfg.SetAxisHomeLatchCountOffset(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(8,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(8,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(8,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(8,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(8,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(8,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s30.STM_CONTROL.0,"ax8.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s30.STM_STATUS.1,"ax8.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s30.VELOCITY_SETPOINT,"ax8.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s30.STM_CONTROL.2,"ax8.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(8,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(8,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_4.0,"ax8.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_3.0,"ax8.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax8.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax8.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(8,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(8,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(8,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(8,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(8,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(8,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(8,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(8,300)"
ecmcMotorRecordCreateAxis(MCU1, "8", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M2, MOTOR_PORT=MCU1, AXIS_NO=8, DESC=Axis T3 M2, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M2, MOTOR_PORT=MCU1, AXIS_NO=8,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=8,Name=DTL-030:AxisT3M2")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-030:,AXIS_NAME=AxisT3M2,AXIS_NO=8,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M3"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-030:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M3",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T3M3
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT3M3")
epicsEnvSet("ECMC_R",                     "AxisT3M3-")
epicsEnvSet("ECMC_AXIS_NO",               "9")
epicsEnvSet("ECMC_DESC",                  "Axis T3 M3")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s31.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s24.CH3_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s31.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s31.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s31.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s31.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for b2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
rake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s25.BI_6.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s25.BI_5.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(9,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax9.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(9,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(9,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(9,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(9,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(9,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(9,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(9,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(9,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s24.CH3_VALUE,"ax9.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax9.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax9.enc.latchcontrol2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.624 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 OK
2020/08/10 18:13:30.625 ecmcMotorRecord:: setIntegerParam(9 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.625 ecmcMotorRecord:: setDoubleParam(9 motorPowerOnDelay_)=6
2020/08/10 18:13:30.625 ecmcMotorRecord:: setDoubleParam(9 motorPowerOffDelay_=-1
2020/08/10 18:13:30.625 ecmcMotorRecord:: connected(9)
2020/08/10 18:13:30.625 ecmcMotorRecord:: initialPoll(9) status=0
")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax9.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(9,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(9,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(9,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(9,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(9,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(9,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(9,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s31.STM_CONTROL.0,"ax9.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s31.STM_STATUS.1,"ax9.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s31.VELOCITY_SETPOINT,"ax9.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax9.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s31.STM_CONTROL.2,"ax9.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(9,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(9,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(9,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(9,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(9,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(9,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(9,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(9,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_6.0,"ax9.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s25.BI_5.0,"ax9.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax9.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax9.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(9,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(9,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(9,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(9,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(9,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(9,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(9,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(9,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(9,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(9,300)"
ecmcMotorRecordCreateAxis(MCU1, "9", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M3, MOTOR_PORT=MCU1, AXIS_NO=9, DESC=Axis T3 M3, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-030:, MOTOR_NAME=AxisT3M3, MOTOR_PORT=MCU1, AXIS_NO=9,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=9,Name=DTL-030:AxisT3M3")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-030:,AXIS_NAME=AxisT3M3,AXIS_NO=9,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")

# - Axis Tank 4
epicsEnvSet("DEV",      "DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M1"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-040:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M1",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M1
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT4M1")
epicsEnvSet("ECMC_R",                     "AxisT4M1-")
epicsEnvSet("ECMC_AXIS_NO",               "10")
epicsEnvSet("ECMC_DESC",                  "Axis T4 M1")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s39.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s34.CH1_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s39.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s39.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s39.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s39.STM_CONTROL.2")  2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
    # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s35.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s35.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(10,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax10.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(10,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(10,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(10,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(10,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(10,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(10,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(10,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(10,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s34.CH1_VA2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.627 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 OK
2020/08/10 18:13:30.628 ecmcMotorRecord:: setIntegerParam(10 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.628 ecmcMotorRecord:: setDoubleParam(10 motorPowerOnDelay_)=6
2020/08/10 18:13:30.628 ecmcMotorRecord:: setDoubleParam(10 motorPowerOffDelay_=-1
2020/08/10 18:13:30.628 ecmcMotorRecord:: connected(10)
2020/08/10 18:13:30.628 ecmcMotorRecord:: initialPoll(10) status=0
LUE,"ax10.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax10.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax10.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax10.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(10,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(10,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(10,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(10,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(10,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(10,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(10,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s39.STM_CONTROL.0,"ax10.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s39.STM_STATUS.1,"ax10.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s39.VELOCITY_SETPOINT,"ax10.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax10.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s39.STM_CONTROL.2,"ax10.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(10,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(10,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(10,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(10,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(10,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(10,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(10,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(10,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_2.0,"ax10.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_1.0,"ax10.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax10.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax10.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(10,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(10,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(10,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(10,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(10,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(10,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(10,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(10,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(10,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(10,300)"
ecmcMotorRecordCreateAxis(MCU1, "10", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M1, MOTOR_PORT=MCU1, AXIS_NO=10, DESC=Axis T4 M1, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M1, MOTOR_PORT=MCU1, AXIS_NO=10,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=10,Name=DTL-040:AxisT4M1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-040:,AXIS_NAME=AxisT4M1,AXIS_NO=10,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M2"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-040:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M2",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M2
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT4M2")
epicsEnvSet("ECMC_R",                     "AxisT4M2-")
epicsEnvSet("ECMC_AXIS_NO",               "11")
epicsEnvSet("ECMC_DESC",                  "Axis T4 M2")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s40.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s34.CH2_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s40.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s40.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec32020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
.s40.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s40.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s35.BI_4.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s35.BI_3.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(11,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax11.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(11,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(11,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(11,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(11,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(11,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(11,0.02)"
ecmcCo2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.630 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 OK
2020/08/10 18:13:30.631 ecmcMotorRecord:: setIntegerParam(11 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.631 ecmcMotorRecord:: setDoubleParam(11 motorPowerOnDelay_)=6
2020/08/10 18:13:30.631 ecmcMotorRecord:: setDoubleParam(11 motorPowerOffDelay_=-1
2020/08/10 18:13:30.631 ecmcMotorRecord:: connected(11)
2020/08/10 18:13:30.631 ecmcMotorRecord:: initialPoll(11) status=0
nfigOrDie "Cfg.SetAxisCntrlKd(11,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(11,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s34.CH2_VALUE,"ax11.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax11.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax11.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax11.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(11,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(11,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(11,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(11,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(11,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(11,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(11,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s40.STM_CONTROL.0,"ax11.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s40.STM_STATUS.1,"ax11.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s40.VELOCITY_SETPOINT,"ax11.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax11.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s40.STM_CONTROL.2,"ax11.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(11,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(11,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(11,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(11,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(11,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(11,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(11,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(11,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_4.0,"ax11.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_3.0,"ax11.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax11.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax11.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(11,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(11,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(11,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(11,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(11,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(11,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(11,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(11,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(11,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(11,300)"
ecmcMotorRecordCreateAxis(MCU1, "11", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M2, MOTOR_PORT=MCU1, AXIS_NO=11, DESC=Axis T4 M2, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M2, MOTOR_PORT=MCU1, AXIS_NO=11,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=11,Name=DTL-040:AxisT4M2")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-040:,AXIS_NAME=AxisT4M2,AXIS_NO=11,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M3"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-040:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M3",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T4M3
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT4M3")
epicsEnvSet("ECMC_R",                     "AxisT4M3-")
epicsEnvSet("ECMC_AXIS_NO",               "12")
epicsEnvSet("ECMC_DESC",                  "Axis T4 M3")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s41.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s34.CH3_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s41.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
_STATUS",         "ec3.s41.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s41.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s41.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s35.BI_6.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s35.BI_5.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(12,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax12.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(12,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(12,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(12,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(12,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(12,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(12,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(12,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(12,1.0)"
ecmcCon2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.633 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 OK
2020/08/10 18:13:30.634 ecmcMotorRecord:: setIntegerParam(12 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.634 ecmcMotorRecord:: setDoubleParam(12 motorPowerOnDelay_)=6
2020/08/10 18:13:30.634 ecmcMotorRecord:: setDoubleParam(12 motorPowerOffDelay_=-1
2020/08/10 18:13:30.634 ecmcMotorRecord:: connected(12)
2020/08/10 18:13:30.634 ecmcMotorRecord:: initialPoll(12) status=0
figOrDie "Cfg.LinkEcEntryToObject(ec3.s34.CH3_VALUE,"ax12.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax12.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax12.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax12.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(12,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(12,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(12,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(12,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(12,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(12,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(12,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s41.STM_CONTROL.0,"ax12.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s41.STM_STATUS.1,"ax12.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s41.VELOCITY_SETPOINT,"ax12.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax12.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s41.STM_CONTROL.2,"ax12.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(12,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(12,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(12,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(12,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(12,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(12,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(12,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(12,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_6.0,"ax12.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s35.BI_5.0,"ax12.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax12.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax12.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(12,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(12,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(12,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(12,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(12,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(12,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(12,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(12,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(12,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(12,300)"
ecmcMotorRecordCreateAxis(MCU1, "12", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M3, MOTOR_PORT=MCU1, AXIS_NO=12, DESC=Axis T4 M3, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-040:, MOTOR_NAME=AxisT4M3, MOTOR_PORT=MCU1, AXIS_NO=12,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=12,Name=DTL-040:AxisT4M3")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-040:,AXIS_NAME=AxisT4M3,AXIS_NO=12,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")

# - Axis Tank 5
epicsEnvSet("DEV",      "DTL-050")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M1"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-050:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M1",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M1
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT5M1")
epicsEnvSet("ECMC_R",                     "AxisT5M1-")
epicsEnvSet("ECMC_AXIS_NO",               "13")
epicsEnvSet("ECMC_DESC",                  "Axis T5 M1")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s50.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s45.CH1_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s50.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s50.STM_STATUS.1"2020/08/10 18:13:30.636 OK
)       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s50.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s50.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
#epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s-1.ONE.0")           #  Ethercat entry for low limit switch input
#epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
#epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
#epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s46.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s46.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(13,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"2020/08/10 18:13:30.636 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.636 OK
2020/08/10 18:13:30.637 OK
2020/08/10 18:13:30.637 OK
2020/08/10 18:13:30.637 ecmcMotorRecord:: setIntegerParam(13 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.637 ecmcMotorRecord:: setDoubleParam(13 motorPowerOnDelay_)=6
2020/08/10 18:13:30.637 ecmcMotorRecord:: setDoubleParam(13 motorPowerOffDelay_=-1
2020/08/10 18:13:30.637 ecmcMotorRecord:: connected(13)
2020/08/10 18:13:30.637 ecmcMotorRecord:: initialPoll(13) status=0
ax13.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(13,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(13,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(13,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(13,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(13,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(13,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(13,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(13,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s45.CH1_VALUE,"ax13.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax13.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax13.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax13.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(13,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(13,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(13,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(13,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(13,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(13,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(13,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s50.STM_CONTROL.0,"ax13.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s50.STM_STATUS.1,"ax13.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s50.VELOCITY_SETPOINT,"ax13.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax13.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s50.STM_CONTROL.2,"ax13.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(13,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(13,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(13,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(13,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(13,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(13,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(13,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(13,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_2.0,"ax13.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_1.0,"ax13.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax13.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax13.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(13,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(13,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(13,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(13,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(13,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(13,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(13,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(13,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(13,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(13,300)"
ecmcMotorRecordCreateAxis(MCU1, "13", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M1, MOTOR_PORT=MCU1, AXIS_NO=13, DESC=Axis T5 M1, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M1, MOTOR_PORT=MCU1, AXIS_NO=13,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=13,Name=DTL-050:AxisT5M1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-050:,AXIS_NAME=AxisT5M1,AXIS_NO=13,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M2"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-050:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M2",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M2
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT5M2")
epicsEnvSet("ECMC_R",                     "AxisT5M2-")
epicsEnvSet("ECMC_AXIS_NO",               "14")
epicsEnvSet("ECMC_DESC",                  "Axis T5 M2")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s51.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s45.CH2_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"      2020/08/10 18:13:30.638 OK
2020/08/10 18:13:30.639 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.639 OK
    "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s51.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s51.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s51.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s51.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s46.BI_4.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s46.BI_3.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(14,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax14.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(14,0.1)"
ecmcConfigOrDie "Cfg.S2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 OK
2020/08/10 18:13:30.639 ecmcMotorRecord:: setIntegerParam(14 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.639 ecmcMotorRecord:: setDoubleParam(14 motorPowerOnDelay_)=6
2020/08/10 18:13:30.639 ecmcMotorRecord:: setDoubleParam(14 motorPowerOffDelay_=-1
2020/08/10 18:13:30.640 ecmcMotorRecord:: connected(14)
2020/08/10 18:13:30.640 ecmcMotorRecord:: initialPoll(14) status=0
etAxisVelAccDecTime(14,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(14,50)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(14,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(14,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(14,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(14,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(14,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s45.CH2_VALUE,"ax14.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax14.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax14.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax14.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(14,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(14,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(14,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(14,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(14,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(14,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(14,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s51.STM_CONTROL.0,"ax14.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s51.STM_STATUS.1,"ax14.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s51.VELOCITY_SETPOINT,"ax14.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax14.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s51.STM_CONTROL.2,"ax14.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(14,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(14,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(14,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(14,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(14,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(14,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(14,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(14,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_4.0,"ax14.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_3.0,"ax14.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax14.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax14.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(14,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(14,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(14,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(14,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(14,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(14,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(14,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(14,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(14,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(14,300)"
ecmcMotorRecordCreateAxis(MCU1, "14", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M2, MOTOR_PORT=MCU1, AXIS_NO=14, DESC=Axis T5 M2, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M2, MOTOR_PORT=MCU1, AXIS_NO=14,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=14,Name=DTL-050:AxisT5M2")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-050:,AXIS_NAME=AxisT5M2,AXIS_NO=14,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/configureAxis.cmd", "CONFIG=/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M3"
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "DTL-050:")
ecmcFileExist("/home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M3",1)
iocshLoad /home/iocuser/e3/e3-dtlTuners/cfg/axis_T5M3
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "AxisT5M3")
epicsEnvSet("ECMC_R",                     "AxisT5M3-")
epicsEnvSet("ECMC_AXIS_NO",               "15")
epicsEnvSet("ECMC_DESC",                  "Axis T5 M3")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec3.s1.OUPIN_1.0)
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-105")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "32767")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "16")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "105")                        # Encoder offset in eng units (for absolute encoders)
#epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s52.POSITION")           # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec3.s45.CH3_VALUE")           # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "25")                      # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SC2020/08/10 18:13:30.641 OK
2020/08/10 18:13:30.641 OK
macLib: macro ECMC_MOD_RANGE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModRange(${ECMC_AXIS_NO}, ${ECMC_MOD_RANGE})")
macLib: macro ECMC_MOD_TYPE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisModType(${ECMC_AXIS_NO}, ${ECMC_MOD_TYPE})")
2020/08/10 18:13:30.641 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
ALE_DENOM"        "-32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec3.s52.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec3.s52.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec3.s52.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec3.s52.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")                       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "1")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "0")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "50")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "40")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "30.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec3.s46.BI_6.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec3.s46.BI_5.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec3.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec3.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.5")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "2000.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","300")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "500")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(15,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax15.health")"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(15,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(15,10.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(15,50)"
ecmcC2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
macLib: macro ECMC_EC_ENC_LATCHPOS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCHPOS},"ax${ECMC_AXIS_NO}.enc.latchpos")")
macLib: macro ECMC_EC_ENC_LATCH_CONTROL is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_CONTROL},"ax${ECMC_AXIS_NO}.enc.latchcontrol")")
macLib: macro ECMC_EC_ENC_LATCH_STATUS is undefined (expanding string ecmcConfigOrDie "Cfg.LinkEcEntryToObject(${ECMC_EC_ENC_LATCH_STATUS},"ax${ECMC_AXIS_NO}.enc.latchstatus")")
macLib: macro ECMC_HOME_LATCH_COUNT_OFFSET is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(${ECMC_AXIS_NO},${ECMC_HOME_LATCH_COUNT_OFFSET})")
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 OK
2020/08/10 18:13:30.642 ecmcMotorRecord:: setIntegerParam(15 motorPowerAutoOnOff_)=2
2020/08/10 18:13:30.642 ecmcMotorRecord:: setDoubleParam(15 motorPowerOnDelay_)=6
2020/08/10 18:13:30.642 ecmcMotorRecord:: setDoubleParam(15 motorPowerOffDelay_=-1
2020/08/10 18:13:30.642 ecmcMotorRecord:: connected(15)
2020/08/10 18:13:30.642 ecmcMotorRecord:: initialPoll(15) status=0
onfigOrDie "Cfg.SetAxisHomeVelOffCam(15,40)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(15,30.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(15,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(15,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(15,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s45.CH3_VALUE,"ax15.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax15.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax15.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax15.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(15,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(15,32767)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(15,-105)"
ecmcConfigOrDie "Cfg.SetAxisEncType(15,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(15,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(15,16)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(15,105)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s52.STM_CONTROL.0,"ax15.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s52.STM_STATUS.1,"ax15.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s52.VELOCITY_SETPOINT,"ax15.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax15.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s52.STM_CONTROL.2,"ax15.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(15,-32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(15,25)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(15,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(15,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(15,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(15,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(15,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(15,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_6.0,"ax15.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s46.BI_5.0,"ax15.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax15.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec3.s-1.ONE.0,"ax15.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(15,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(15,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(15,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(15,5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(15,10)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(15,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(15,2000.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(15,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(15,500)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(15,300)"
ecmcMotorRecordCreateAxis(MCU1, "15", "6", "stepSize=1")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M3, MOTOR_PORT=MCU1, AXIS_NO=15, DESC=Axis T5 M3, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=1, RDBD=0.5, DLLM=0, DHLM=0, HOMEPROC=0 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=DTL-050:, MOTOR_NAME=AxisT5M3, MOTOR_PORT=MCU1, AXIS_NO=15,HOMEPROC=0, HOMEPOS=0.0, HVELTO=50, HVELFRM=40, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=15,Name=DTL-050:AxisT5M3")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=DTL-050:,AXIS_NAME=AxisT5M3,AXIS_NO=15,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(E2020/08/10 18:13:30.644 OK
2020/08/10 18:13:30.644 OK
2020/08/10 18:13:30.644 OK
2020/08/10 18:13:30.644 OK
2020/08/10 18:13:30.646 INFO: Locking memory
2020/08/10 18:13:30.646 WARNING: mlockall() failed (0x20045).
epicsMutex pthread_mutex_unlock epicsMutexOsdUnlock failed: error Operation not permitted
2020/08/10 18:13:30.646 Starting up EtherCAT bus: 0 second(s). Max wait time 30 second(s).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:30.747 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 0: Not operational (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 2: Not operational (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 12: Not operational (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.747 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 23: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 33: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 44: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 54: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 56: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 59: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 63: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 66: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 70: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 1: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 22: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 43: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 55: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 62: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 69: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 4: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 5: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 14: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 15: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 25: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 26: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 35: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 36: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 46: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 47: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 6: Not operational (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.748 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 16: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 27: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 37: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 48: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 11: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 21: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 32: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 42: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 53: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 57: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 58: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 60: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 61: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 64: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 65: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 67: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 68: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 71: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 72: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 3: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 13: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 24: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 34: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 45: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 8: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 9: Not operational (0x24011).
2020/08/10 18:13:30.749 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 10: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 18: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 19: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 20: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 29: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 30: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 31: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 39: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 40: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 41: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 50: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 51: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 52: Not operational (0x24011).
2020/08/10 18:13:30.750 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/10 18:13:30.750 ecmc::  Ax     PosSet     PosAct     PosErr    PosTarg   DistLeft    CntrOut   VelFFSet     VelAct   VelFFRaw VelRaw  Error Co CD St IL LI TS ES En Ex Bu Ta Hd L- L+ Ho
2020/08/10 18:13:30.750 ecmc::  15    105.000    105.000      0.000      0.000      0.000      0.000      0.000   1050.000     -0.000      0  14315  0  0  0  7 16  0  0 00  0  0  1  1  0  0  1
2020/08/10 18:13:30.848 ecmc::  15    105.000    105.000      0.000      0.000      0.000      0.000      0.000      0.000     -0.000      0  14315  0  0  0  7  7  0  0 00  0  0  1  1  0  0  1
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(1) homed=1
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(1) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000025
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(1) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.008 ecmcMotorRecord:: sErrorMessage(1)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(2) homed=1
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(2) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000007
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(2) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.008 ecmcMotorRecord:: sErrorMessage(2)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(3) homed=1
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(3) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.008 ecmcMotorRecord:: sErrorMessage(3)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(4) homed=1
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(4) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(4) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.008 ecmcMotorRecord:: sErrorMessage(4)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.008 ecmcMotorRecord:: poll(5) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(5) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000007
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(5) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(5)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(6) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(6) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(6) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(6)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(7) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(7) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(7) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(7)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(8) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(8) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(8) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(8)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(9) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(9) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(9) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(9)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(9) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(10) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(10) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000123
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(10) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(10)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(10) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(11) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(11) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(11) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(11)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(11) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(12) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(12) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(12) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(12)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(12) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(13) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(13) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(13) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(13)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(13) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(14) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(14) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(14) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(14)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(14) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(15) homed=1
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(15) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=105 time=0.000006
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(15) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:31.009 ecmcMotorRecord:: sErrorMessage(15)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:31.009 ecmcMotorRecord:: poll(15) callParamCallbacksUpdateError Error=1 old=-1 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:31.646 Starting up EtherCAT bus: 1 second(s). Max wait time 30 second(s).
2020/08/10 18:13:32.646 Starting up EtherCAT bus: 2 second(s). Max wait time 30 second(s).
2020/08/10 18:13:33.647 Starting up EtherCAT bus: 3 second(s). Max wait time 30 second(s).
2020/08/10 18:13:34.647 Starting up EtherCAT bus: 4 second(s). Max wait time 30 second(s).
2020/08/10 18:13:35.647 Starting up EtherCAT bus: 5 second(s). Max wait time 30 second(s).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.697 ../devEcmcSup/motion/ecmcAxisBase.cpp/getErrorID:422: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/10 18:13:35.797 ecmc::  15    105.000    105.000      0.000      0.000      0.000      0.000      0.000      0.000     -0.000      0  14c10  0  0  0  7  7  0  0 00  0  0  1  1  0  0  1
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(1) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(1)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(2) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(2)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(3) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(3)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(4) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(4)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(5) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(5)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(6) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(6)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(7) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(7)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(8) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.811 ecmcMotorRecord:: sErrorMessage(8)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.811 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(9) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(9)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(9) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(10) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(10)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(10) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(11) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(11)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(11) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(12) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(12)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(12) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(13) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(13)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(13) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(14) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(14)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(14) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(15) bError=1 drvlocal.statusBinData.onChangeData.error=0x14c10
2020/08/10 18:13:35.812 ecmcMotorRecord:: sErrorMessage(15)="ERROR_MON_BOTH_LIMIT_INTERLOCK"
2020/08/10 18:13:35.812 ecmcMotorRecord:: poll(15) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14c10 old=0x14315 Warn=0 nCmd=0 old=0 txt=E: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10)
2020/08/10 18:13:37.647 EtherCAT bus started!
2020/08/10 18:13:37.647 OK
CMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "DTL-000:")

# Apply Axes Configuration - REQUIRED
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/applyConfig.cmd"
#===============================================================================
# applyConfig.cfg
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"



##############################################################################
############ Go Active

iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/setAppMode.cmd"
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/generalDiagnostics.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/generalDiagnostics.cmd
#==============================================================================
# generalDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/general.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/6.2.0/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcEc.db",1,1)
dbLoadRecords("ecmcEc.db","P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=3,T_SMP_MS=10,TSE=-2")
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=DTL-000:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
# Nice commands for info ecmcReport <level> or asynReport <level>
# ecmcReport 3
ecmcConfigOrDie "Cfg.SetAppMode(1)"



##############################################################################
############# Post Configuration - Aliases Definition


# Motor Driver
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=8, HW_DESC=EL7047, SECTION_NAME=DTL-010, DEVICE_POS=001"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-010:MC-MCU-001:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Latch-Rst, ALIAS=DTL-010:MC-MCU-001:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-010:MC-MCU-001:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Latch-Cmd, ALIAS=DTL-010:MC-MCU-001:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Cmd, ALIAS=DTL-010:MC-MCU-001:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Spd, ALIAS=DTL-010:MC-MCU-001:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Cmd, ALIAS=DTL-010:MC-MCU-001:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-PosCmd, ALIAS=DTL-010:MC-MCU-001:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Stat_, ALIAS=DTL-010:MC-MCU-001:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Stat, ALIAS=DTL-010:MC-MCU-001:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Stat, ALIAS=DTL-010:MC-MCU-001:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Stat, ALIAS=DTL-010:MC-MCU-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-online, ALIAS=DTL-010:MC-MCU-001:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-operational, ALIAS=DTL-010:MC-MCU-001:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-alstate-init, ALIAS=DTL-010:MC-MCU-001:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-alstate-preop, ALIAS=DTL-010:MC-MCU-001:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-alstate-safeop, ALIAS=DTL-010:MC-MCU-001:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-alstate-op, ALIAS=DTL-010:MC-MCU-001:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-001:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Err-Alrm, ALIAS=DTL-010:MC-MCU-001:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Stl-Alrm, ALIAS=DTL-010:MC-MCU-001:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-001:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-010:MC-MCU-001:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-010:MC-MCU-001:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-001:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-001:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-entrycounter, ALIAS=DTL-010:MC-MCU-001:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-One, ALIAS=DTL-010:MC-MCU-001:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Zero, ALIAS=DTL-010:MC-MCU-001:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-HWType, ALIAS=DTL-010:MC-MCU-001:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Cmd-RB, ALIAS=DTL-010:MC-MCU-001:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Drv-Spd-RB, ALIAS=DTL-010:MC-MCU-001:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-PosAct, ALIAS=DTL-010:MC-MCU-001:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Latch-PosAct, ALIAS=DTL-010:MC-MCU-001:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-Cmd-RB, ALIAS=DTL-010:MC-MCU-001:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s8-EL7047-Enc-PosCmd-RB, ALIAS=DTL-010:MC-MCU-001:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=9, HW_DESC=EL7047, SECTION_NAME=DTL-010, DEVICE_POS=002"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-010:MC-MCU-002:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Latch-Rst, ALIAS=DTL-010:MC-MCU-002:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-010:MC-MCU-002:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Latch-Cmd, ALIAS=DTL-010:MC-MCU-002:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Cmd, ALIAS=DTL-010:MC-MCU-002:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Spd, ALIAS=DTL-010:MC-MCU-002:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Cmd, ALIAS=DTL-010:MC-MCU-002:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-PosCmd, ALIAS=DTL-010:MC-MCU-002:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Stat_, ALIAS=DTL-010:MC-MCU-002:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Stat, ALIAS=DTL-010:MC-MCU-002:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Stat, ALIAS=DTL-010:MC-MCU-002:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Stat, ALIAS=DTL-010:MC-MCU-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-online, ALIAS=DTL-010:MC-MCU-002:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-operational, ALIAS=DTL-010:MC-MCU-002:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-alstate-init, ALIAS=DTL-010:MC-MCU-002:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-alstate-preop, ALIAS=DTL-010:MC-MCU-002:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-alstate-safeop, ALIAS=DTL-010:MC-MCU-002:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-alstate-op, ALIAS=DTL-010:MC-MCU-002:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-002:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Err-Alrm, ALIAS=DTL-010:MC-MCU-002:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Stl-Alrm, ALIAS=DTL-010:MC-MCU-002:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-002:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-010:MC-MCU-002:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-010:MC-MCU-002:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-002:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-002:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-entrycounter, ALIAS=DTL-010:MC-MCU-002:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-One, ALIAS=DTL-010:MC-MCU-002:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Zero, ALIAS=DTL-010:MC-MCU-002:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-HWType, ALIAS=DTL-010:MC-MCU-002:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Cmd-RB, ALIAS=DTL-010:MC-MCU-002:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Drv-Spd-RB, ALIAS=DTL-010:MC-MCU-002:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-PosAct, ALIAS=DTL-010:MC-MCU-002:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Latch-PosAct, ALIAS=DTL-010:MC-MCU-002:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-Cmd-RB, ALIAS=DTL-010:MC-MCU-002:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s9-EL7047-Enc-PosCmd-RB, ALIAS=DTL-010:MC-MCU-002:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=10, HW_DESC=EL7047, SECTION_NAME=DTL-010, DEVICE_POS=003"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-010:MC-MCU-003:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Latch-Rst, ALIAS=DTL-010:MC-MCU-003:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-010:MC-MCU-003:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Latch-Cmd, ALIAS=DTL-010:MC-MCU-003:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Cmd, ALIAS=DTL-010:MC-MCU-003:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Spd, ALIAS=DTL-010:MC-MCU-003:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Cmd, ALIAS=DTL-010:MC-MCU-003:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-PosCmd, ALIAS=DTL-010:MC-MCU-003:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Stat_, ALIAS=DTL-010:MC-MCU-003:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Stat, ALIAS=DTL-010:MC-MCU-003:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Stat, ALIAS=DTL-010:MC-MCU-003:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Stat, ALIAS=DTL-010:MC-MCU-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-online, ALIAS=DTL-010:MC-MCU-003:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-operational, ALIAS=DTL-010:MC-MCU-003:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-alstate-init, ALIAS=DTL-010:MC-MCU-003:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-alstate-preop, ALIAS=DTL-010:MC-MCU-003:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-alstate-safeop, ALIAS=DTL-010:MC-MCU-003:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-alstate-op, ALIAS=DTL-010:MC-MCU-003:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-003:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Err-Alrm, ALIAS=DTL-010:MC-MCU-003:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Stl-Alrm, ALIAS=DTL-010:MC-MCU-003:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-003:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-010:MC-MCU-003:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-010:MC-MCU-003:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-010:MC-MCU-003:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-010:MC-MCU-003:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-entrycounter, ALIAS=DTL-010:MC-MCU-003:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-One, ALIAS=DTL-010:MC-MCU-003:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Zero, ALIAS=DTL-010:MC-MCU-003:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-HWType, ALIAS=DTL-010:MC-MCU-003:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Cmd-RB, ALIAS=DTL-010:MC-MCU-003:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Drv-Spd-RB, ALIAS=DTL-010:MC-MCU-003:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-PosAct, ALIAS=DTL-010:MC-MCU-003:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Latch-PosAct, ALIAS=DTL-010:MC-MCU-003:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-Cmd-RB, ALIAS=DTL-010:MC-MCU-003:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s10-EL7047-Enc-PosCmd-RB, ALIAS=DTL-010:MC-MCU-003:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=18, HW_DESC=EL7047, SECTION_NAME=DTL-020, DEVICE_POS=001"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-020:MC-MCU-001:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Latch-Rst, ALIAS=DTL-020:MC-MCU-001:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-020:MC-MCU-001:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Latch-Cmd, ALIAS=DTL-020:MC-MCU-001:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Cmd, ALIAS=DTL-020:MC-MCU-001:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Spd, ALIAS=DTL-020:MC-MCU-001:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Cmd, ALIAS=DTL-020:MC-MCU-001:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-PosCmd, ALIAS=DTL-020:MC-MCU-001:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Stat_, ALIAS=DTL-020:MC-MCU-001:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Stat, ALIAS=DTL-020:MC-MCU-001:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Stat, ALIAS=DTL-020:MC-MCU-001:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Stat, ALIAS=DTL-020:MC-MCU-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-online, ALIAS=DTL-020:MC-MCU-001:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-operational, ALIAS=DTL-020:MC-MCU-001:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-alstate-init, ALIAS=DTL-020:MC-MCU-001:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-alstate-preop, ALIAS=DTL-020:MC-MCU-001:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-alstate-safeop, ALIAS=DTL-020:MC-MCU-001:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-alstate-op, ALIAS=DTL-020:MC-MCU-001:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-001:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Err-Alrm, ALIAS=DTL-020:MC-MCU-001:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Stl-Alrm, ALIAS=DTL-020:MC-MCU-001:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-001:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-020:MC-MCU-001:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-020:MC-MCU-001:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-001:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-001:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-entrycounter, ALIAS=DTL-020:MC-MCU-001:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-One, ALIAS=DTL-020:MC-MCU-001:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Zero, ALIAS=DTL-020:MC-MCU-001:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-HWType, ALIAS=DTL-020:MC-MCU-001:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Cmd-RB, ALIAS=DTL-020:MC-MCU-001:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Drv-Spd-RB, ALIAS=DTL-020:MC-MCU-001:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-PosAct, ALIAS=DTL-020:MC-MCU-001:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Latch-PosAct, ALIAS=DTL-020:MC-MCU-001:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-Cmd-RB, ALIAS=DTL-020:MC-MCU-001:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s18-EL7047-Enc-PosCmd-RB, ALIAS=DTL-020:MC-MCU-001:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=19, HW_DESC=EL7047, SECTION_NAME=DTL-020, DEVICE_POS=002"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-020:MC-MCU-002:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Latch-Rst, ALIAS=DTL-020:MC-MCU-002:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-020:MC-MCU-002:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Latch-Cmd, ALIAS=DTL-020:MC-MCU-002:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Cmd, ALIAS=DTL-020:MC-MCU-002:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Spd, ALIAS=DTL-020:MC-MCU-002:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Cmd, ALIAS=DTL-020:MC-MCU-002:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-PosCmd, ALIAS=DTL-020:MC-MCU-002:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Stat_, ALIAS=DTL-020:MC-MCU-002:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Stat, ALIAS=DTL-020:MC-MCU-002:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Stat, ALIAS=DTL-020:MC-MCU-002:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Stat, ALIAS=DTL-020:MC-MCU-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-online, ALIAS=DTL-020:MC-MCU-002:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-operational, ALIAS=DTL-020:MC-MCU-002:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-alstate-init, ALIAS=DTL-020:MC-MCU-002:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-alstate-preop, ALIAS=DTL-020:MC-MCU-002:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-alstate-safeop, ALIAS=DTL-020:MC-MCU-002:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-alstate-op, ALIAS=DTL-020:MC-MCU-002:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-002:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Err-Alrm, ALIAS=DTL-020:MC-MCU-002:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Stl-Alrm, ALIAS=DTL-020:MC-MCU-002:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-002:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-020:MC-MCU-002:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-020:MC-MCU-002:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-002:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-002:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-entrycounter, ALIAS=DTL-020:MC-MCU-002:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-One, ALIAS=DTL-020:MC-MCU-002:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Zero, ALIAS=DTL-020:MC-MCU-002:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-HWType, ALIAS=DTL-020:MC-MCU-002:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Cmd-RB, ALIAS=DTL-020:MC-MCU-002:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Drv-Spd-RB, ALIAS=DTL-020:MC-MCU-002:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-PosAct, ALIAS=DTL-020:MC-MCU-002:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Latch-PosAct, ALIAS=DTL-020:MC-MCU-002:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-Cmd-RB, ALIAS=DTL-020:MC-MCU-002:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s19-EL7047-Enc-PosCmd-RB, ALIAS=DTL-020:MC-MCU-002:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=20, HW_DESC=EL7047, SECTION_NAME=DTL-020, DEVICE_POS=003"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-020:MC-MCU-003:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Latch-Rst, ALIAS=DTL-020:MC-MCU-003:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-020:MC-MCU-003:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Latch-Cmd, ALIAS=DTL-020:MC-MCU-003:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Cmd, ALIAS=DTL-020:MC-MCU-003:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Spd, ALIAS=DTL-020:MC-MCU-003:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Cmd, ALIAS=DTL-020:MC-MCU-003:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-PosCmd, ALIAS=DTL-020:MC-MCU-003:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Stat_, ALIAS=DTL-020:MC-MCU-003:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Stat, ALIAS=DTL-020:MC-MCU-003:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Stat, ALIAS=DTL-020:MC-MCU-003:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Stat, ALIAS=DTL-020:MC-MCU-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-online, ALIAS=DTL-020:MC-MCU-003:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-operational, ALIAS=DTL-020:MC-MCU-003:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-alstate-init, ALIAS=DTL-020:MC-MCU-003:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-alstate-preop, ALIAS=DTL-020:MC-MCU-003:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-alstate-safeop, ALIAS=DTL-020:MC-MCU-003:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-alstate-op, ALIAS=DTL-020:MC-MCU-003:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-003:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Err-Alrm, ALIAS=DTL-020:MC-MCU-003:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Stl-Alrm, ALIAS=DTL-020:MC-MCU-003:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-003:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-020:MC-MCU-003:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-020:MC-MCU-003:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-020:MC-MCU-003:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-020:MC-MCU-003:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-entrycounter, ALIAS=DTL-020:MC-MCU-003:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-One, ALIAS=DTL-020:MC-MCU-003:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Zero, ALIAS=DTL-020:MC-MCU-003:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-HWType, ALIAS=DTL-020:MC-MCU-003:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Cmd-RB, ALIAS=DTL-020:MC-MCU-003:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Drv-Spd-RB, ALIAS=DTL-020:MC-MCU-003:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-PosAct, ALIAS=DTL-020:MC-MCU-003:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Latch-PosAct, ALIAS=DTL-020:MC-MCU-003:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-Cmd-RB, ALIAS=DTL-020:MC-MCU-003:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s20-EL7047-Enc-PosCmd-RB, ALIAS=DTL-020:MC-MCU-003:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=29, HW_DESC=EL7047, SECTION_NAME=DTL-030, DEVICE_POS=001"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-030:MC-MCU-001:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Latch-Rst, ALIAS=DTL-030:MC-MCU-001:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-030:MC-MCU-001:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Latch-Cmd, ALIAS=DTL-030:MC-MCU-001:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Cmd, ALIAS=DTL-030:MC-MCU-001:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Spd, ALIAS=DTL-030:MC-MCU-001:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Cmd, ALIAS=DTL-030:MC-MCU-001:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-PosCmd, ALIAS=DTL-030:MC-MCU-001:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Stat_, ALIAS=DTL-030:MC-MCU-001:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Stat, ALIAS=DTL-030:MC-MCU-001:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Stat, ALIAS=DTL-030:MC-MCU-001:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Stat, ALIAS=DTL-030:MC-MCU-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-online, ALIAS=DTL-030:MC-MCU-001:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-operational, ALIAS=DTL-030:MC-MCU-001:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-alstate-init, ALIAS=DTL-030:MC-MCU-001:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-alstate-preop, ALIAS=DTL-030:MC-MCU-001:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-alstate-safeop, ALIAS=DTL-030:MC-MCU-001:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-alstate-op, ALIAS=DTL-030:MC-MCU-001:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-001:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Err-Alrm, ALIAS=DTL-030:MC-MCU-001:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Stl-Alrm, ALIAS=DTL-030:MC-MCU-001:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-001:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-030:MC-MCU-001:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-030:MC-MCU-001:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-001:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-001:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-entrycounter, ALIAS=DTL-030:MC-MCU-001:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-One, ALIAS=DTL-030:MC-MCU-001:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Zero, ALIAS=DTL-030:MC-MCU-001:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-HWType, ALIAS=DTL-030:MC-MCU-001:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Cmd-RB, ALIAS=DTL-030:MC-MCU-001:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Drv-Spd-RB, ALIAS=DTL-030:MC-MCU-001:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-PosAct, ALIAS=DTL-030:MC-MCU-001:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Latch-PosAct, ALIAS=DTL-030:MC-MCU-001:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-Cmd-RB, ALIAS=DTL-030:MC-MCU-001:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s29-EL7047-Enc-PosCmd-RB, ALIAS=DTL-030:MC-MCU-001:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=30, HW_DESC=EL7047, SECTION_NAME=DTL-030, DEVICE_POS=002"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-030:MC-MCU-002:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Latch-Rst, ALIAS=DTL-030:MC-MCU-002:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-030:MC-MCU-002:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Latch-Cmd, ALIAS=DTL-030:MC-MCU-002:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Cmd, ALIAS=DTL-030:MC-MCU-002:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Spd, ALIAS=DTL-030:MC-MCU-002:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Cmd, ALIAS=DTL-030:MC-MCU-002:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-PosCmd, ALIAS=DTL-030:MC-MCU-002:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Stat_, ALIAS=DTL-030:MC-MCU-002:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Stat, ALIAS=DTL-030:MC-MCU-002:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Stat, ALIAS=DTL-030:MC-MCU-002:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Stat, ALIAS=DTL-030:MC-MCU-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-online, ALIAS=DTL-030:MC-MCU-002:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-operational, ALIAS=DTL-030:MC-MCU-002:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-alstate-init, ALIAS=DTL-030:MC-MCU-002:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-alstate-preop, ALIAS=DTL-030:MC-MCU-002:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-alstate-safeop, ALIAS=DTL-030:MC-MCU-002:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-alstate-op, ALIAS=DTL-030:MC-MCU-002:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-002:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Err-Alrm, ALIAS=DTL-030:MC-MCU-002:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Stl-Alrm, ALIAS=DTL-030:MC-MCU-002:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-002:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-030:MC-MCU-002:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-030:MC-MCU-002:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-002:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-002:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-entrycounter, ALIAS=DTL-030:MC-MCU-002:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-One, ALIAS=DTL-030:MC-MCU-002:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Zero, ALIAS=DTL-030:MC-MCU-002:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-HWType, ALIAS=DTL-030:MC-MCU-002:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Cmd-RB, ALIAS=DTL-030:MC-MCU-002:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Drv-Spd-RB, ALIAS=DTL-030:MC-MCU-002:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-PosAct, ALIAS=DTL-030:MC-MCU-002:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Latch-PosAct, ALIAS=DTL-030:MC-MCU-002:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-Cmd-RB, ALIAS=DTL-030:MC-MCU-002:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s30-EL7047-Enc-PosCmd-RB, ALIAS=DTL-030:MC-MCU-002:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=31, HW_DESC=EL7047, SECTION_NAME=DTL-030, DEVICE_POS=003"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-030:MC-MCU-003:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Latch-Rst, ALIAS=DTL-030:MC-MCU-003:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-030:MC-MCU-003:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Latch-Cmd, ALIAS=DTL-030:MC-MCU-003:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Cmd, ALIAS=DTL-030:MC-MCU-003:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Spd, ALIAS=DTL-030:MC-MCU-003:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Cmd, ALIAS=DTL-030:MC-MCU-003:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-PosCmd, ALIAS=DTL-030:MC-MCU-003:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Stat_, ALIAS=DTL-030:MC-MCU-003:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Stat, ALIAS=DTL-030:MC-MCU-003:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Stat, ALIAS=DTL-030:MC-MCU-003:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Stat, ALIAS=DTL-030:MC-MCU-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-online, ALIAS=DTL-030:MC-MCU-003:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-operational, ALIAS=DTL-030:MC-MCU-003:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-alstate-init, ALIAS=DTL-030:MC-MCU-003:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-alstate-preop, ALIAS=DTL-030:MC-MCU-003:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-alstate-safeop, ALIAS=DTL-030:MC-MCU-003:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-alstate-op, ALIAS=DTL-030:MC-MCU-003:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-003:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Err-Alrm, ALIAS=DTL-030:MC-MCU-003:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Stl-Alrm, ALIAS=DTL-030:MC-MCU-003:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-003:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-030:MC-MCU-003:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-030:MC-MCU-003:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-030:MC-MCU-003:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-030:MC-MCU-003:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-entrycounter, ALIAS=DTL-030:MC-MCU-003:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-One, ALIAS=DTL-030:MC-MCU-003:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Zero, ALIAS=DTL-030:MC-MCU-003:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-HWType, ALIAS=DTL-030:MC-MCU-003:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Cmd-RB, ALIAS=DTL-030:MC-MCU-003:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Drv-Spd-RB, ALIAS=DTL-030:MC-MCU-003:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-PosAct, ALIAS=DTL-030:MC-MCU-003:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Latch-PosAct, ALIAS=DTL-030:MC-MCU-003:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-Cmd-RB, ALIAS=DTL-030:MC-MCU-003:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s31-EL7047-Enc-PosCmd-RB, ALIAS=DTL-030:MC-MCU-003:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=39, HW_DESC=EL7047, SECTION_NAME=DTL-040, DEVICE_POS=001"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-040:MC-MCU-001:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Latch-Rst, ALIAS=DTL-040:MC-MCU-001:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-040:MC-MCU-001:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Latch-Cmd, ALIAS=DTL-040:MC-MCU-001:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Cmd, ALIAS=DTL-040:MC-MCU-001:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Spd, ALIAS=DTL-040:MC-MCU-001:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Cmd, ALIAS=DTL-040:MC-MCU-001:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-PosCmd, ALIAS=DTL-040:MC-MCU-001:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Stat_, ALIAS=DTL-040:MC-MCU-001:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Stat, ALIAS=DTL-040:MC-MCU-001:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Stat, ALIAS=DTL-040:MC-MCU-001:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Stat, ALIAS=DTL-040:MC-MCU-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-online, ALIAS=DTL-040:MC-MCU-001:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-operational, ALIAS=DTL-040:MC-MCU-001:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-alstate-init, ALIAS=DTL-040:MC-MCU-001:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-alstate-preop, ALIAS=DTL-040:MC-MCU-001:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-alstate-safeop, ALIAS=DTL-040:MC-MCU-001:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-alstate-op, ALIAS=DTL-040:MC-MCU-001:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-001:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Err-Alrm, ALIAS=DTL-040:MC-MCU-001:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Stl-Alrm, ALIAS=DTL-040:MC-MCU-001:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-001:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-040:MC-MCU-001:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-040:MC-MCU-001:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-001:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-001:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-entrycounter, ALIAS=DTL-040:MC-MCU-001:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-One, ALIAS=DTL-040:MC-MCU-001:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Zero, ALIAS=DTL-040:MC-MCU-001:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-HWType, ALIAS=DTL-040:MC-MCU-001:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Cmd-RB, ALIAS=DTL-040:MC-MCU-001:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Drv-Spd-RB, ALIAS=DTL-040:MC-MCU-001:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-PosAct, ALIAS=DTL-040:MC-MCU-001:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Latch-PosAct, ALIAS=DTL-040:MC-MCU-001:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-Cmd-RB, ALIAS=DTL-040:MC-MCU-001:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s39-EL7047-Enc-PosCmd-RB, ALIAS=DTL-040:MC-MCU-001:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=40, HW_DESC=EL7047, SECTION_NAME=DTL-040, DEVICE_POS=002"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-040:MC-MCU-002:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Latch-Rst, ALIAS=DTL-040:MC-MCU-002:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-040:MC-MCU-002:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Latch-Cmd, ALIAS=DTL-040:MC-MCU-002:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Cmd, ALIAS=DTL-040:MC-MCU-002:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Spd, ALIAS=DTL-040:MC-MCU-002:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Cmd, ALIAS=DTL-040:MC-MCU-002:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-PosCmd, ALIAS=DTL-040:MC-MCU-002:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Stat_, ALIAS=DTL-040:MC-MCU-002:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Stat, ALIAS=DTL-040:MC-MCU-002:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Stat, ALIAS=DTL-040:MC-MCU-002:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Stat, ALIAS=DTL-040:MC-MCU-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-online, ALIAS=DTL-040:MC-MCU-002:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-operational, ALIAS=DTL-040:MC-MCU-002:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-alstate-init, ALIAS=DTL-040:MC-MCU-002:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-alstate-preop, ALIAS=DTL-040:MC-MCU-002:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-alstate-safeop, ALIAS=DTL-040:MC-MCU-002:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-alstate-op, ALIAS=DTL-040:MC-MCU-002:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-002:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Err-Alrm, ALIAS=DTL-040:MC-MCU-002:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Stl-Alrm, ALIAS=DTL-040:MC-MCU-002:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-002:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-040:MC-MCU-002:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-040:MC-MCU-002:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-002:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-002:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-entrycounter, ALIAS=DTL-040:MC-MCU-002:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-One, ALIAS=DTL-040:MC-MCU-002:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Zero, ALIAS=DTL-040:MC-MCU-002:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-HWType, ALIAS=DTL-040:MC-MCU-002:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Cmd-RB, ALIAS=DTL-040:MC-MCU-002:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Drv-Spd-RB, ALIAS=DTL-040:MC-MCU-002:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-PosAct, ALIAS=DTL-040:MC-MCU-002:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Latch-PosAct, ALIAS=DTL-040:MC-MCU-002:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-Cmd-RB, ALIAS=DTL-040:MC-MCU-002:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s40-EL7047-Enc-PosCmd-RB, ALIAS=DTL-040:MC-MCU-002:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=41, HW_DESC=EL7047, SECTION_NAME=DTL-040, DEVICE_POS=003"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-040:MC-MCU-003:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Latch-Rst, ALIAS=DTL-040:MC-MCU-003:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-040:MC-MCU-003:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Latch-Cmd, ALIAS=DTL-040:MC-MCU-003:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Cmd, ALIAS=DTL-040:MC-MCU-003:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Spd, ALIAS=DTL-040:MC-MCU-003:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Cmd, ALIAS=DTL-040:MC-MCU-003:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-PosCmd, ALIAS=DTL-040:MC-MCU-003:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Stat_, ALIAS=DTL-040:MC-MCU-003:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Stat, ALIAS=DTL-040:MC-MCU-003:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Stat, ALIAS=DTL-040:MC-MCU-003:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Stat, ALIAS=DTL-040:MC-MCU-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-online, ALIAS=DTL-040:MC-MCU-003:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-operational, ALIAS=DTL-040:MC-MCU-003:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-alstate-init, ALIAS=DTL-040:MC-MCU-003:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-alstate-preop, ALIAS=DTL-040:MC-MCU-003:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-alstate-safeop, ALIAS=DTL-040:MC-MCU-003:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-alstate-op, ALIAS=DTL-040:MC-MCU-003:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-003:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Err-Alrm, ALIAS=DTL-040:MC-MCU-003:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Stl-Alrm, ALIAS=DTL-040:MC-MCU-003:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-003:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-040:MC-MCU-003:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-040:MC-MCU-003:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-040:MC-MCU-003:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-040:MC-MCU-003:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-entrycounter, ALIAS=DTL-040:MC-MCU-003:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-One, ALIAS=DTL-040:MC-MCU-003:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Zero, ALIAS=DTL-040:MC-MCU-003:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-HWType, ALIAS=DTL-040:MC-MCU-003:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Cmd-RB, ALIAS=DTL-040:MC-MCU-003:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Drv-Spd-RB, ALIAS=DTL-040:MC-MCU-003:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-PosAct, ALIAS=DTL-040:MC-MCU-003:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Latch-PosAct, ALIAS=DTL-040:MC-MCU-003:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-Cmd-RB, ALIAS=DTL-040:MC-MCU-003:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s41-EL7047-Enc-PosCmd-RB, ALIAS=DTL-040:MC-MCU-003:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=50, HW_DESC=EL7047, SECTION_NAME=DTL-050, DEVICE_POS=001"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-050:MC-MCU-001:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Latch-Rst, ALIAS=DTL-050:MC-MCU-001:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-050:MC-MCU-001:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Latch-Cmd, ALIAS=DTL-050:MC-MCU-001:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Cmd, ALIAS=DTL-050:MC-MCU-001:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Spd, ALIAS=DTL-050:MC-MCU-001:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Cmd, ALIAS=DTL-050:MC-MCU-001:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-PosCmd, ALIAS=DTL-050:MC-MCU-001:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Stat_, ALIAS=DTL-050:MC-MCU-001:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Stat, ALIAS=DTL-050:MC-MCU-001:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Stat, ALIAS=DTL-050:MC-MCU-001:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Stat, ALIAS=DTL-050:MC-MCU-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-online, ALIAS=DTL-050:MC-MCU-001:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-operational, ALIAS=DTL-050:MC-MCU-001:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-alstate-init, ALIAS=DTL-050:MC-MCU-001:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-alstate-preop, ALIAS=DTL-050:MC-MCU-001:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-alstate-safeop, ALIAS=DTL-050:MC-MCU-001:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-alstate-op, ALIAS=DTL-050:MC-MCU-001:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-001:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Err-Alrm, ALIAS=DTL-050:MC-MCU-001:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Stl-Alrm, ALIAS=DTL-050:MC-MCU-001:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-001:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-050:MC-MCU-001:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-050:MC-MCU-001:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-001:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-001:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-entrycounter, ALIAS=DTL-050:MC-MCU-001:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-One, ALIAS=DTL-050:MC-MCU-001:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Zero, ALIAS=DTL-050:MC-MCU-001:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-HWType, ALIAS=DTL-050:MC-MCU-001:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Cmd-RB, ALIAS=DTL-050:MC-MCU-001:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Drv-Spd-RB, ALIAS=DTL-050:MC-MCU-001:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-PosAct, ALIAS=DTL-050:MC-MCU-001:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Latch-PosAct, ALIAS=DTL-050:MC-MCU-001:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-Cmd-RB, ALIAS=DTL-050:MC-MCU-001:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s50-EL7047-Enc-PosCmd-RB, ALIAS=DTL-050:MC-MCU-001:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=51, HW_DESC=EL7047, SECTION_NAME=DTL-050, DEVICE_POS=002"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-050:MC-MCU-002:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Latch-Rst, ALIAS=DTL-050:MC-MCU-002:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-050:MC-MCU-002:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Latch-Cmd, ALIAS=DTL-050:MC-MCU-002:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Cmd, ALIAS=DTL-050:MC-MCU-002:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Spd, ALIAS=DTL-050:MC-MCU-002:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Cmd, ALIAS=DTL-050:MC-MCU-002:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-PosCmd, ALIAS=DTL-050:MC-MCU-002:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Stat_, ALIAS=DTL-050:MC-MCU-002:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Stat, ALIAS=DTL-050:MC-MCU-002:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Stat, ALIAS=DTL-050:MC-MCU-002:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Stat, ALIAS=DTL-050:MC-MCU-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-online, ALIAS=DTL-050:MC-MCU-002:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-operational, ALIAS=DTL-050:MC-MCU-002:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-alstate-init, ALIAS=DTL-050:MC-MCU-002:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-alstate-preop, ALIAS=DTL-050:MC-MCU-002:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-alstate-safeop, ALIAS=DTL-050:MC-MCU-002:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-alstate-op, ALIAS=DTL-050:MC-MCU-002:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-002:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Err-Alrm, ALIAS=DTL-050:MC-MCU-002:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Stl-Alrm, ALIAS=DTL-050:MC-MCU-002:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-002:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-050:MC-MCU-002:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-050:MC-MCU-002:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-002:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-002:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-entrycounter, ALIAS=DTL-050:MC-MCU-002:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-One, ALIAS=DTL-050:MC-MCU-002:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Zero, ALIAS=DTL-050:MC-MCU-002:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-HWType, ALIAS=DTL-050:MC-MCU-002:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Cmd-RB, ALIAS=DTL-050:MC-MCU-002:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Drv-Spd-RB, ALIAS=DTL-050:MC-MCU-002:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-PosAct, ALIAS=DTL-050:MC-MCU-002:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Latch-PosAct, ALIAS=DTL-050:MC-MCU-002:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-Cmd-RB, ALIAS=DTL-050:MC-MCU-002:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s51-EL7047-Enc-PosCmd-RB, ALIAS=DTL-050:MC-MCU-002:Enc-PosCmd-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorDriver.cmd", "SLAVE_ID=52, HW_DESC=EL7047, SECTION_NAME=DTL-050, DEVICE_POS=003"
#==============================================================================
# aliasMotorDriver.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Latch-AutoRst, ALIAS=DTL-050:MC-MCU-003:Enc-Latch-AutoRst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Latch-Rst, ALIAS=DTL-050:MC-MCU-003:Enc-Latch-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Latch-AutoRst_SP, ALIAS=DTL-050:MC-MCU-003:Enc-Latch-AutoRst_SP") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Latch-Cmd, ALIAS=DTL-050:MC-MCU-003:Enc-Latch-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Cmd, ALIAS=DTL-050:MC-MCU-003:Drv-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Spd, ALIAS=DTL-050:MC-MCU-003:Drv-Spd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Cmd, ALIAS=DTL-050:MC-MCU-003:Enc-Cmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-PosCmd, ALIAS=DTL-050:MC-MCU-003:Enc-PosCmd") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Stat_, ALIAS=DTL-050:MC-MCU-003:Stat_") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Stat, ALIAS=DTL-050:MC-MCU-003:Drv-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Stat, ALIAS=DTL-050:MC-MCU-003:Enc-Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Stat, ALIAS=DTL-050:MC-MCU-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-online, ALIAS=DTL-050:MC-MCU-003:online") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-operational, ALIAS=DTL-050:MC-MCU-003:operational") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-alstate-init, ALIAS=DTL-050:MC-MCU-003:alstate-init") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-alstate-preop, ALIAS=DTL-050:MC-MCU-003:alstate-preop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-alstate-safeop, ALIAS=DTL-050:MC-MCU-003:alstate-safeop") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-alstate-op, ALIAS=DTL-050:MC-MCU-003:alstate-op") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-003:Drv-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Err-Alrm, ALIAS=DTL-050:MC-MCU-003:Drv-Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Stl-Alrm, ALIAS=DTL-050:MC-MCU-003:Drv-Stl-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-003:Drv-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-ExtLatch-OK, ALIAS=DTL-050:MC-MCU-003:Enc-ExtLatch-OK") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-OpnCrct-Alrm, ALIAS=DTL-050:MC-MCU-003:Enc-OpnCrct-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Wrn-Alrm, ALIAS=DTL-050:MC-MCU-003:Enc-Wrn-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-SyncErr-Alrm, ALIAS=DTL-050:MC-MCU-003:Enc-SyncErr-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-entrycounter, ALIAS=DTL-050:MC-MCU-003:entrycounter") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-One, ALIAS=DTL-050:MC-MCU-003:One") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Zero, ALIAS=DTL-050:MC-MCU-003:Zero") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-HWType, ALIAS=DTL-050:MC-MCU-003:HWType") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Cmd-RB, ALIAS=DTL-050:MC-MCU-003:Drv-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Drv-Spd-RB, ALIAS=DTL-050:MC-MCU-003:Drv-Spd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-PosAct, ALIAS=DTL-050:MC-MCU-003:Enc-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Latch-PosAct, ALIAS=DTL-050:MC-MCU-003:Enc-Latch-PosAct") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-Cmd-RB, ALIAS=DTL-050:MC-MCU-003:Enc-Cmd-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s52-EL7047-Enc-PosCmd-RB, ALIAS=DTL-050:MC-MCU-003:Enc-PosCmd-RB") 

# Limit Switch (DI)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=4, HW_DESC=EL1008, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-010, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI2, ALIAS=DTL-010:EMR-GS-001:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI1, ALIAS=DTL-010:EMR-GS-011:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=4, HW_DESC=EL1008, BIT_IN=4, BIT_OUT=3, SECTION_NAME=DTL-010, DEVICE_POS=2"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI4, ALIAS=DTL-010:EMR-GS-002:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI3, ALIAS=DTL-010:EMR-GS-012:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=4, HW_DESC=EL1008, BIT_IN=6, BIT_OUT=5, SECTION_NAME=DTL-010, DEVICE_POS=3"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI6, ALIAS=DTL-010:EMR-GS-003:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI5, ALIAS=DTL-010:EMR-GS-013:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=14, HW_DESC=EL1008, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-020, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI2, ALIAS=DTL-020:EMR-GS-001:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI1, ALIAS=DTL-020:EMR-GS-011:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=14, HW_DESC=EL1008, BIT_IN=4, BIT_OUT=3, SECTION_NAME=DTL-020, DEVICE_POS=2"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI4, ALIAS=DTL-020:EMR-GS-002:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI3, ALIAS=DTL-020:EMR-GS-012:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=14, HW_DESC=EL1008, BIT_IN=6, BIT_OUT=5, SECTION_NAME=DTL-020, DEVICE_POS=3"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI6, ALIAS=DTL-020:EMR-GS-003:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s14-EL1008-BI5, ALIAS=DTL-020:EMR-GS-013:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=25, HW_DESC=EL1008, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-030, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI2, ALIAS=DTL-030:EMR-GS-001:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI1, ALIAS=DTL-030:EMR-GS-011:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=25, HW_DESC=EL1008, BIT_IN=4, BIT_OUT=3, SECTION_NAME=DTL-030, DEVICE_POS=2"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI4, ALIAS=DTL-030:EMR-GS-002:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI3, ALIAS=DTL-030:EMR-GS-012:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=25, HW_DESC=EL1008, BIT_IN=6, BIT_OUT=5, SECTION_NAME=DTL-030, DEVICE_POS=3"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI6, ALIAS=DTL-030:EMR-GS-003:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s25-EL1008-BI5, ALIAS=DTL-030:EMR-GS-013:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=35, HW_DESC=EL1008, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-040, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI2, ALIAS=DTL-040:EMR-GS-001:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI1, ALIAS=DTL-040:EMR-GS-011:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=35, HW_DESC=EL1008, BIT_IN=4, BIT_OUT=3, SECTION_NAME=DTL-040, DEVICE_POS=2"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI4, ALIAS=DTL-040:EMR-GS-002:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI3, ALIAS=DTL-040:EMR-GS-012:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=35, HW_DESC=EL1008, BIT_IN=6, BIT_OUT=5, SECTION_NAME=DTL-040, DEVICE_POS=3"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI6, ALIAS=DTL-040:EMR-GS-003:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s35-EL1008-BI5, ALIAS=DTL-040:EMR-GS-013:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=46, HW_DESC=EL1008, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-050, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI2, ALIAS=DTL-050:EMR-GS-001:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI1, ALIAS=DTL-050:EMR-GS-011:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=46, HW_DESC=EL1008, BIT_IN=4, BIT_OUT=3, SECTION_NAME=DTL-050, DEVICE_POS=2"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI4, ALIAS=DTL-050:EMR-GS-002:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI3, ALIAS=DTL-050:EMR-GS-012:LimStat")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchInput.cmd", "SLAVE_ID=46, HW_DESC=EL1008, BIT_IN=6, BIT_OUT=5, SECTION_NAME=DTL-050, DEVICE_POS=3"
#==============================================================================
# aliasMotorSwitchInput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI6, ALIAS=DTL-050:EMR-GS-003:LimStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s46-EL1008-BI5, ALIAS=DTL-050:EMR-GS-013:LimStat")

# Limit Switch (DO)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchOutput.cmd", "SLAVE_ID=11, HW_DESC=EL2819, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-010, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchOutput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2, ALIAS=DTL-010:EMR-GS-001:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-Stat, ALIAS=DTL-010:EMR-GS-001:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-RB, ALIAS=DTL-010:EMR-GS-001:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-OvrTmp-Alrm, ALIAS=DTL-010:EMR-GS-001:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-OpnLoad-Alrm, ALIAS=DTL-010:EMR-GS-001:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-OvrCurr-Alrm, ALIAS=DTL-010:EMR-GS-001:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO2-ShrtCirc-Alrm, ALIAS=DTL-010:EMR-GS-001:ShrtCirc-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1, ALIAS=DTL-010:EMR-GS-011:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-Stat, ALIAS=DTL-010:EMR-GS-011:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-RB, ALIAS=DTL-010:EMR-GS-011:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-OvrTmp-Alrm, ALIAS=DTL-010:EMR-GS-011:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-OpnLoad-Alrm, ALIAS=DTL-010:EMR-GS-011:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-OvrCurr-Alrm, ALIAS=DTL-010:EMR-GS-011:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s11-EL2819-BO1-ShrtCirc-Alrm, ALIAS=DTL-010:EMR-GS-011:ShrtCirc-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchOutput.cmd", "SLAVE_ID=21, HW_DESC=EL2819, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-020, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchOutput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2, ALIAS=DTL-020:EMR-GS-001:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-Stat, ALIAS=DTL-020:EMR-GS-001:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-RB, ALIAS=DTL-020:EMR-GS-001:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-OvrTmp-Alrm, ALIAS=DTL-020:EMR-GS-001:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-OpnLoad-Alrm, ALIAS=DTL-020:EMR-GS-001:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-OvrCurr-Alrm, ALIAS=DTL-020:EMR-GS-001:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO2-ShrtCirc-Alrm, ALIAS=DTL-020:EMR-GS-001:ShrtCirc-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1, ALIAS=DTL-020:EMR-GS-011:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-Stat, ALIAS=DTL-020:EMR-GS-011:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-RB, ALIAS=DTL-020:EMR-GS-011:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-OvrTmp-Alrm, ALIAS=DTL-020:EMR-GS-011:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-OpnLoad-Alrm, ALIAS=DTL-020:EMR-GS-011:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-OvrCurr-Alrm, ALIAS=DTL-020:EMR-GS-011:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s21-EL2819-BO1-ShrtCirc-Alrm, ALIAS=DTL-020:EMR-GS-011:ShrtCirc-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchOutput.cmd", "SLAVE_ID=32, HW_DESC=EL2819, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-030, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchOutput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2, ALIAS=DTL-030:EMR-GS-001:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-Stat, ALIAS=DTL-030:EMR-GS-001:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-RB, ALIAS=DTL-030:EMR-GS-001:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-OvrTmp-Alrm, ALIAS=DTL-030:EMR-GS-001:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-OpnLoad-Alrm, ALIAS=DTL-030:EMR-GS-001:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-OvrCurr-Alrm, ALIAS=DTL-030:EMR-GS-001:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO2-ShrtCirc-Alrm, ALIAS=DTL-030:EMR-GS-001:ShrtCirc-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1, ALIAS=DTL-030:EMR-GS-011:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-Stat, ALIAS=DTL-030:EMR-GS-011:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-RB, ALIAS=DTL-030:EMR-GS-011:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-OvrTmp-Alrm, ALIAS=DTL-030:EMR-GS-011:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-OpnLoad-Alrm, ALIAS=DTL-030:EMR-GS-011:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-OvrCurr-Alrm, ALIAS=DTL-030:EMR-GS-011:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s32-EL2819-BO1-ShrtCirc-Alrm, ALIAS=DTL-030:EMR-GS-011:ShrtCirc-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchOutput.cmd", "SLAVE_ID=42, HW_DESC=EL2819, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-040, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchOutput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2, ALIAS=DTL-040:EMR-GS-001:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-Stat, ALIAS=DTL-040:EMR-GS-001:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-RB, ALIAS=DTL-040:EMR-GS-001:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-OvrTmp-Alrm, ALIAS=DTL-040:EMR-GS-001:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-OpnLoad-Alrm, ALIAS=DTL-040:EMR-GS-001:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-OvrCurr-Alrm, ALIAS=DTL-040:EMR-GS-001:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO2-ShrtCirc-Alrm, ALIAS=DTL-040:EMR-GS-001:ShrtCirc-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1, ALIAS=DTL-040:EMR-GS-011:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-Stat, ALIAS=DTL-040:EMR-GS-011:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-RB, ALIAS=DTL-040:EMR-GS-011:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-OvrTmp-Alrm, ALIAS=DTL-040:EMR-GS-011:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-OpnLoad-Alrm, ALIAS=DTL-040:EMR-GS-011:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-OvrCurr-Alrm, ALIAS=DTL-040:EMR-GS-011:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s42-EL2819-BO1-ShrtCirc-Alrm, ALIAS=DTL-040:EMR-GS-011:ShrtCirc-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorSwitchOutput.cmd", "SLAVE_ID=53, HW_DESC=EL2819, BIT_IN=2, BIT_OUT=1, SECTION_NAME=DTL-050, DEVICE_POS=1"
#==============================================================================
# aliasMotorSwitchOutput.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2, ALIAS=DTL-050:EMR-GS-001:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-Stat, ALIAS=DTL-050:EMR-GS-001:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-RB, ALIAS=DTL-050:EMR-GS-001:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-OvrTmp-Alrm, ALIAS=DTL-050:EMR-GS-001:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-OpnLoad-Alrm, ALIAS=DTL-050:EMR-GS-001:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-OvrCurr-Alrm, ALIAS=DTL-050:EMR-GS-001:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO2-ShrtCirc-Alrm, ALIAS=DTL-050:EMR-GS-001:ShrtCirc-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1, ALIAS=DTL-050:EMR-GS-011:En") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-Stat, ALIAS=DTL-050:EMR-GS-011:EnStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-RB, ALIAS=DTL-050:EMR-GS-011:En-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-OvrTmp-Alrm, ALIAS=DTL-050:EMR-GS-011:Tmp-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-OpnLoad-Alrm, ALIAS=DTL-050:EMR-GS-011:Load-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-OvrCurr-Alrm, ALIAS=DTL-050:EMR-GS-011:OvrI-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s53-EL2819-BO1-ShrtCirc-Alrm, ALIAS=DTL-050:EMR-GS-011:ShrtCirc-Alrm") 

# Linear Encoder
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=3, HW_DESC=EL3255, BIT_POS=1, SECTION_NAME=DTL-010, DEVICE_POS=1"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI1, ALIAS=DTL-010:EMR-GT-001:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI1-Stat, ALIAS=DTL-010:EMR-GT-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI1-Err-Alrm, ALIAS=DTL-010:EMR-GT-001:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI1-UnderLim-Alrm, ALIAS=DTL-010:EMR-GT-001:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI1-OverLim-Alrm, ALIAS=DTL-010:EMR-GT-001:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=3, HW_DESC=EL3255, BIT_POS=2, SECTION_NAME=DTL-010, DEVICE_POS=2"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI2, ALIAS=DTL-010:EMR-GT-002:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI2-Stat, ALIAS=DTL-010:EMR-GT-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI2-Err-Alrm, ALIAS=DTL-010:EMR-GT-002:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI2-UnderLim-Alrm, ALIAS=DTL-010:EMR-GT-002:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI2-OverLim-Alrm, ALIAS=DTL-010:EMR-GT-002:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=3, HW_DESC=EL3255, BIT_POS=3, SECTION_NAME=DTL-010, DEVICE_POS=3"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI3, ALIAS=DTL-010:EMR-GT-003:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI3-Stat, ALIAS=DTL-010:EMR-GT-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI3-Err-Alrm, ALIAS=DTL-010:EMR-GT-003:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI3-UnderLim-Alrm, ALIAS=DTL-010:EMR-GT-003:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s3-EL3255-AI3-OverLim-Alrm, ALIAS=DTL-010:EMR-GT-003:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=13, HW_DESC=EL3255, BIT_POS=1, SECTION_NAME=DTL-020, DEVICE_POS=1"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI1, ALIAS=DTL-020:EMR-GT-001:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI1-Stat, ALIAS=DTL-020:EMR-GT-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI1-Err-Alrm, ALIAS=DTL-020:EMR-GT-001:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI1-UnderLim-Alrm, ALIAS=DTL-020:EMR-GT-001:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI1-OverLim-Alrm, ALIAS=DTL-020:EMR-GT-001:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=13, HW_DESC=EL3255, BIT_POS=2, SECTION_NAME=DTL-020, DEVICE_POS=2"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI2, ALIAS=DTL-020:EMR-GT-002:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI2-Stat, ALIAS=DTL-020:EMR-GT-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI2-Err-Alrm, ALIAS=DTL-020:EMR-GT-002:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI2-UnderLim-Alrm, ALIAS=DTL-020:EMR-GT-002:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI2-OverLim-Alrm, ALIAS=DTL-020:EMR-GT-002:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=13, HW_DESC=EL3255, BIT_POS=3, SECTION_NAME=DTL-020, DEVICE_POS=3"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI3, ALIAS=DTL-020:EMR-GT-003:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI3-Stat, ALIAS=DTL-020:EMR-GT-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI3-Err-Alrm, ALIAS=DTL-020:EMR-GT-003:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI3-UnderLim-Alrm, ALIAS=DTL-020:EMR-GT-003:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s13-EL3255-AI3-OverLim-Alrm, ALIAS=DTL-020:EMR-GT-003:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=24, HW_DESC=EL3255, BIT_POS=1, SECTION_NAME=DTL-030, DEVICE_POS=1"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI1, ALIAS=DTL-030:EMR-GT-001:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI1-Stat, ALIAS=DTL-030:EMR-GT-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI1-Err-Alrm, ALIAS=DTL-030:EMR-GT-001:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI1-UnderLim-Alrm, ALIAS=DTL-030:EMR-GT-001:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI1-OverLim-Alrm, ALIAS=DTL-030:EMR-GT-001:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=24, HW_DESC=EL3255, BIT_POS=2, SECTION_NAME=DTL-030, DEVICE_POS=2"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI2, ALIAS=DTL-030:EMR-GT-002:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI2-Stat, ALIAS=DTL-030:EMR-GT-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI2-Err-Alrm, ALIAS=DTL-030:EMR-GT-002:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI2-UnderLim-Alrm, ALIAS=DTL-030:EMR-GT-002:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI2-OverLim-Alrm, ALIAS=DTL-030:EMR-GT-002:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=24, HW_DESC=EL3255, BIT_POS=3, SECTION_NAME=DTL-030, DEVICE_POS=3"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI3, ALIAS=DTL-030:EMR-GT-003:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI3-Stat, ALIAS=DTL-030:EMR-GT-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI3-Err-Alrm, ALIAS=DTL-030:EMR-GT-003:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI3-UnderLim-Alrm, ALIAS=DTL-030:EMR-GT-003:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s24-EL3255-AI3-OverLim-Alrm, ALIAS=DTL-030:EMR-GT-003:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=34, HW_DESC=EL3255, BIT_POS=1, SECTION_NAME=DTL-040, DEVICE_POS=1"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI1, ALIAS=DTL-040:EMR-GT-001:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI1-Stat, ALIAS=DTL-040:EMR-GT-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI1-Err-Alrm, ALIAS=DTL-040:EMR-GT-001:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI1-UnderLim-Alrm, ALIAS=DTL-040:EMR-GT-001:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI1-OverLim-Alrm, ALIAS=DTL-040:EMR-GT-001:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=34, HW_DESC=EL3255, BIT_POS=2, SECTION_NAME=DTL-040, DEVICE_POS=2"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI2, ALIAS=DTL-040:EMR-GT-002:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI2-Stat, ALIAS=DTL-040:EMR-GT-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI2-Err-Alrm, ALIAS=DTL-040:EMR-GT-002:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI2-UnderLim-Alrm, ALIAS=DTL-040:EMR-GT-002:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI2-OverLim-Alrm, ALIAS=DTL-040:EMR-GT-002:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=34, HW_DESC=EL3255, BIT_POS=3, SECTION_NAME=DTL-040, DEVICE_POS=3"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI3, ALIAS=DTL-040:EMR-GT-003:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI3-Stat, ALIAS=DTL-040:EMR-GT-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI3-Err-Alrm, ALIAS=DTL-040:EMR-GT-003:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI3-UnderLim-Alrm, ALIAS=DTL-040:EMR-GT-003:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s34-EL3255-AI3-OverLim-Alrm, ALIAS=DTL-040:EMR-GT-003:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=45, HW_DESC=EL3255, BIT_POS=1, SECTION_NAME=DTL-050, DEVICE_POS=1"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI1, ALIAS=DTL-050:EMR-GT-001:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI1-Stat, ALIAS=DTL-050:EMR-GT-001:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI1-Err-Alrm, ALIAS=DTL-050:EMR-GT-001:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI1-UnderLim-Alrm, ALIAS=DTL-050:EMR-GT-001:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI1-OverLim-Alrm, ALIAS=DTL-050:EMR-GT-001:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=45, HW_DESC=EL3255, BIT_POS=2, SECTION_NAME=DTL-050, DEVICE_POS=2"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI2, ALIAS=DTL-050:EMR-GT-002:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI2-Stat, ALIAS=DTL-050:EMR-GT-002:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI2-Err-Alrm, ALIAS=DTL-050:EMR-GT-002:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI2-UnderLim-Alrm, ALIAS=DTL-050:EMR-GT-002:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI2-OverLim-Alrm, ALIAS=DTL-050:EMR-GT-002:HLim-Alrm") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorLinearEnc.cmd", "SLAVE_ID=45, HW_DESC=EL3255, BIT_POS=3, SECTION_NAME=DTL-050, DEVICE_POS=3"
#==============================================================================
# aliasMotorLinearEnc.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI3, ALIAS=DTL-050:EMR-GT-003:Pos") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI3-Stat, ALIAS=DTL-050:EMR-GT-003:Stat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI3-Err-Alrm, ALIAS=DTL-050:EMR-GT-003:Err-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI3-UnderLim-Alrm, ALIAS=DTL-050:EMR-GT-003:LLim-Alrm") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s45-EL3255-AI3-OverLim-Alrm, ALIAS=DTL-050:EMR-GT-003:HLim-Alrm") 

# Axis
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-010, ECMC_AXIS_NAME=AxisT1M1, SECTION_NAME=DTL-010, ECMC_AXIS_EPICS_NAME=EMR-SM-001"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Err, ALIAS=DTL-010:EMR-SM-001:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-ErrId, ALIAS=DTL-010:EMR-SM-001:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-ErrRst, ALIAS=DTL-010:EMR-SM-001:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Acc-RB, ALIAS=DTL-010:EMR-SM-001:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-AccHom, ALIAS=DTL-010:EMR-SM-001:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-AllowCmdFromPLC-CmdEn, ALIAS=DTL-010:EMR-SM-001:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-001:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Array-Stat, ALIAS=DTL-010:EMR-SM-001:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-attarget, ALIAS=DTL-010:EMR-SM-001:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-AxisType-Act, ALIAS=DTL-010:EMR-SM-001:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-busy, ALIAS=DTL-010:EMR-SM-001:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgACCS-RB, ALIAS=DTL-010:EMR-SM-001:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgDHLM-En-RB, ALIAS=DTL-010:EMR-SM-001:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgDHLM-RB, ALIAS=DTL-010:EMR-SM-001:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgDLLM-En-RB, ALIAS=DTL-010:EMR-SM-001:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgDLLM-RB, ALIAS=DTL-010:EMR-SM-001:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgJVEL-RB, ALIAS=DTL-010:EMR-SM-001:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgPMAX-RB, ALIAS=DTL-010:EMR-SM-001:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgPMIN-RB, ALIAS=DTL-010:EMR-SM-001:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgPOSLAG-En-RB, ALIAS=DTL-010:EMR-SM-001:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgPOSLAG-RB, ALIAS=DTL-010:EMR-SM-001:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgPOSLAG-Tim-RB, ALIAS=DTL-010:EMR-SM-001:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgRDBD-En-RB, ALIAS=DTL-010:EMR-SM-001:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgRDBD-RB, ALIAS=DTL-010:EMR-SM-001:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgRDBD-Tim-RB, ALIAS=DTL-010:EMR-SM-001:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgSPDB-RB, ALIAS=DTL-010:EMR-SM-001:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgSREV-RB, ALIAS=DTL-010:EMR-SM-001:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgUREV-RB, ALIAS=DTL-010:EMR-SM-001:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgVELO-RB, ALIAS=DTL-010:EMR-SM-001:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-CfgVMAX-RB, ALIAS=DTL-010:EMR-SM-001:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-DbgStrToLOG, ALIAS=DTL-010:EMR-SM-001:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-DIR_, ALIAS=DTL-010:EMR-SM-001:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-enabled, ALIAS=DTL-010:EMR-SM-001:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-EncAct, ALIAS=DTL-010:EMR-SM-001:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-EncSourceType-Cmd, ALIAS=DTL-010:EMR-SM-001:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-EncSourceType-RB, ALIAS=DTL-010:EMR-SM-001:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-execute, ALIAS=DTL-010:EMR-SM-001:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-homeswitch, ALIAS=DTL-010:EMR-SM-001:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-HomPos, ALIAS=DTL-010:EMR-SM-001:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-HomPos-RB, ALIAS=DTL-010:EMR-SM-001:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-HomProc, ALIAS=DTL-010:EMR-SM-001:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-HomProc-RB, ALIAS=DTL-010:EMR-SM-001:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-inrealtime, ALIAS=DTL-010:EMR-SM-001:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-instartup, ALIAS=DTL-010:EMR-SM-001:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-lastilock, ALIAS=DTL-010:EMR-SM-001:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-limitbwd, ALIAS=DTL-010:EMR-SM-001:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-limitfwd, ALIAS=DTL-010:EMR-SM-001:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-moving, ALIAS=DTL-010:EMR-SM-001:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-MRES_, ALIAS=DTL-010:EMR-SM-001:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-MsgTxt, ALIAS=DTL-010:EMR-SM-001:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-OFF_, ALIAS=DTL-010:EMR-SM-001:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLC-CmdEn, ALIAS=DTL-010:EMR-SM-001:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-001:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLC-error, ALIAS=DTL-010:EMR-SM-001:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLC-firstscan, ALIAS=DTL-010:EMR-SM-001:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLCExpr, ALIAS=DTL-010:EMR-SM-001:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PLCExpr-RB, ALIAS=DTL-010:EMR-SM-001:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PosAct, ALIAS=DTL-010:EMR-SM-001:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PosErr, ALIAS=DTL-010:EMR-SM-001:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-PosSet, ALIAS=DTL-010:EMR-SM-001:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-seqstate, ALIAS=DTL-010:EMR-SM-001:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Stat, ALIAS=DTL-010:EMR-SM-001:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Stat_, ALIAS=DTL-010:EMR-SM-001:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-TrajSourceType-Cmd, ALIAS=DTL-010:EMR-SM-001:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-TrajSourceType-RB, ALIAS=DTL-010:EMR-SM-001:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-Vel-RB, ALIAS=DTL-010:EMR-SM-001:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-VelAct, ALIAS=DTL-010:EMR-SM-001:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-VelFrmHom, ALIAS=DTL-010:EMR-SM-001:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1-VelToHom, ALIAS=DTL-010:EMR-SM-001:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M1, ALIAS=DTL-010:EMR-SM-001")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-010, ECMC_AXIS_NAME=AxisT1M2, SECTION_NAME=DTL-010, ECMC_AXIS_EPICS_NAME=EMR-SM-002"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Err, ALIAS=DTL-010:EMR-SM-002:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-ErrId, ALIAS=DTL-010:EMR-SM-002:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-ErrRst, ALIAS=DTL-010:EMR-SM-002:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Acc-RB, ALIAS=DTL-010:EMR-SM-002:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-AccHom, ALIAS=DTL-010:EMR-SM-002:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-AllowCmdFromPLC-CmdEn, ALIAS=DTL-010:EMR-SM-002:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-002:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Array-Stat, ALIAS=DTL-010:EMR-SM-002:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-attarget, ALIAS=DTL-010:EMR-SM-002:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-AxisType-Act, ALIAS=DTL-010:EMR-SM-002:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-busy, ALIAS=DTL-010:EMR-SM-002:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgACCS-RB, ALIAS=DTL-010:EMR-SM-002:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgDHLM-En-RB, ALIAS=DTL-010:EMR-SM-002:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgDHLM-RB, ALIAS=DTL-010:EMR-SM-002:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgDLLM-En-RB, ALIAS=DTL-010:EMR-SM-002:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgDLLM-RB, ALIAS=DTL-010:EMR-SM-002:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgJVEL-RB, ALIAS=DTL-010:EMR-SM-002:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgPMAX-RB, ALIAS=DTL-010:EMR-SM-002:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgPMIN-RB, ALIAS=DTL-010:EMR-SM-002:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgPOSLAG-En-RB, ALIAS=DTL-010:EMR-SM-002:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgPOSLAG-RB, ALIAS=DTL-010:EMR-SM-002:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgPOSLAG-Tim-RB, ALIAS=DTL-010:EMR-SM-002:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgRDBD-En-RB, ALIAS=DTL-010:EMR-SM-002:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgRDBD-RB, ALIAS=DTL-010:EMR-SM-002:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgRDBD-Tim-RB, ALIAS=DTL-010:EMR-SM-002:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgSPDB-RB, ALIAS=DTL-010:EMR-SM-002:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgSREV-RB, ALIAS=DTL-010:EMR-SM-002:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgUREV-RB, ALIAS=DTL-010:EMR-SM-002:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgVELO-RB, ALIAS=DTL-010:EMR-SM-002:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-CfgVMAX-RB, ALIAS=DTL-010:EMR-SM-002:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-DbgStrToLOG, ALIAS=DTL-010:EMR-SM-002:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-DIR_, ALIAS=DTL-010:EMR-SM-002:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-enabled, ALIAS=DTL-010:EMR-SM-002:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-EncAct, ALIAS=DTL-010:EMR-SM-002:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-EncSourceType-Cmd, ALIAS=DTL-010:EMR-SM-002:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-EncSourceType-RB, ALIAS=DTL-010:EMR-SM-002:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-execute, ALIAS=DTL-010:EMR-SM-002:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-homeswitch, ALIAS=DTL-010:EMR-SM-002:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-HomPos, ALIAS=DTL-010:EMR-SM-002:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-HomPos-RB, ALIAS=DTL-010:EMR-SM-002:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-HomProc, ALIAS=DTL-010:EMR-SM-002:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-HomProc-RB, ALIAS=DTL-010:EMR-SM-002:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-inrealtime, ALIAS=DTL-010:EMR-SM-002:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-instartup, ALIAS=DTL-010:EMR-SM-002:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-lastilock, ALIAS=DTL-010:EMR-SM-002:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-limitbwd, ALIAS=DTL-010:EMR-SM-002:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-limitfwd, ALIAS=DTL-010:EMR-SM-002:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-moving, ALIAS=DTL-010:EMR-SM-002:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-MRES_, ALIAS=DTL-010:EMR-SM-002:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-MsgTxt, ALIAS=DTL-010:EMR-SM-002:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-OFF_, ALIAS=DTL-010:EMR-SM-002:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLC-CmdEn, ALIAS=DTL-010:EMR-SM-002:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-002:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLC-error, ALIAS=DTL-010:EMR-SM-002:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLC-firstscan, ALIAS=DTL-010:EMR-SM-002:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLCExpr, ALIAS=DTL-010:EMR-SM-002:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PLCExpr-RB, ALIAS=DTL-010:EMR-SM-002:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PosAct, ALIAS=DTL-010:EMR-SM-002:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PosErr, ALIAS=DTL-010:EMR-SM-002:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-PosSet, ALIAS=DTL-010:EMR-SM-002:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-seqstate, ALIAS=DTL-010:EMR-SM-002:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Stat, ALIAS=DTL-010:EMR-SM-002:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Stat_, ALIAS=DTL-010:EMR-SM-002:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-TrajSourceType-Cmd, ALIAS=DTL-010:EMR-SM-002:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-TrajSourceType-RB, ALIAS=DTL-010:EMR-SM-002:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-Vel-RB, ALIAS=DTL-010:EMR-SM-002:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-VelAct, ALIAS=DTL-010:EMR-SM-002:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-VelFrmHom, ALIAS=DTL-010:EMR-SM-002:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2-VelToHom, ALIAS=DTL-010:EMR-SM-002:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M2, ALIAS=DTL-010:EMR-SM-002")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-010, ECMC_AXIS_NAME=AxisT1M3, SECTION_NAME=DTL-010, ECMC_AXIS_EPICS_NAME=EMR-SM-003"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Err, ALIAS=DTL-010:EMR-SM-003:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-ErrId, ALIAS=DTL-010:EMR-SM-003:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-ErrRst, ALIAS=DTL-010:EMR-SM-003:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Acc-RB, ALIAS=DTL-010:EMR-SM-003:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-AccHom, ALIAS=DTL-010:EMR-SM-003:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-AllowCmdFromPLC-CmdEn, ALIAS=DTL-010:EMR-SM-003:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-003:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Array-Stat, ALIAS=DTL-010:EMR-SM-003:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-attarget, ALIAS=DTL-010:EMR-SM-003:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-AxisType-Act, ALIAS=DTL-010:EMR-SM-003:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-busy, ALIAS=DTL-010:EMR-SM-003:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgACCS-RB, ALIAS=DTL-010:EMR-SM-003:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgDHLM-En-RB, ALIAS=DTL-010:EMR-SM-003:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgDHLM-RB, ALIAS=DTL-010:EMR-SM-003:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgDLLM-En-RB, ALIAS=DTL-010:EMR-SM-003:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgDLLM-RB, ALIAS=DTL-010:EMR-SM-003:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgJVEL-RB, ALIAS=DTL-010:EMR-SM-003:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgPMAX-RB, ALIAS=DTL-010:EMR-SM-003:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgPMIN-RB, ALIAS=DTL-010:EMR-SM-003:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgPOSLAG-En-RB, ALIAS=DTL-010:EMR-SM-003:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgPOSLAG-RB, ALIAS=DTL-010:EMR-SM-003:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgPOSLAG-Tim-RB, ALIAS=DTL-010:EMR-SM-003:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgRDBD-En-RB, ALIAS=DTL-010:EMR-SM-003:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgRDBD-RB, ALIAS=DTL-010:EMR-SM-003:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgRDBD-Tim-RB, ALIAS=DTL-010:EMR-SM-003:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgSPDB-RB, ALIAS=DTL-010:EMR-SM-003:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgSREV-RB, ALIAS=DTL-010:EMR-SM-003:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgUREV-RB, ALIAS=DTL-010:EMR-SM-003:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgVELO-RB, ALIAS=DTL-010:EMR-SM-003:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-CfgVMAX-RB, ALIAS=DTL-010:EMR-SM-003:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-DbgStrToLOG, ALIAS=DTL-010:EMR-SM-003:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-DIR_, ALIAS=DTL-010:EMR-SM-003:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-enabled, ALIAS=DTL-010:EMR-SM-003:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-EncAct, ALIAS=DTL-010:EMR-SM-003:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-EncSourceType-Cmd, ALIAS=DTL-010:EMR-SM-003:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-EncSourceType-RB, ALIAS=DTL-010:EMR-SM-003:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-execute, ALIAS=DTL-010:EMR-SM-003:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-homeswitch, ALIAS=DTL-010:EMR-SM-003:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-HomPos, ALIAS=DTL-010:EMR-SM-003:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-HomPos-RB, ALIAS=DTL-010:EMR-SM-003:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-HomProc, ALIAS=DTL-010:EMR-SM-003:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-HomProc-RB, ALIAS=DTL-010:EMR-SM-003:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-inrealtime, ALIAS=DTL-010:EMR-SM-003:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-instartup, ALIAS=DTL-010:EMR-SM-003:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-lastilock, ALIAS=DTL-010:EMR-SM-003:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-limitbwd, ALIAS=DTL-010:EMR-SM-003:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-limitfwd, ALIAS=DTL-010:EMR-SM-003:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-moving, ALIAS=DTL-010:EMR-SM-003:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-MRES_, ALIAS=DTL-010:EMR-SM-003:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-MsgTxt, ALIAS=DTL-010:EMR-SM-003:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-OFF_, ALIAS=DTL-010:EMR-SM-003:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLC-CmdEn, ALIAS=DTL-010:EMR-SM-003:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLC-CmdEn-RB, ALIAS=DTL-010:EMR-SM-003:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLC-error, ALIAS=DTL-010:EMR-SM-003:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLC-firstscan, ALIAS=DTL-010:EMR-SM-003:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLCExpr, ALIAS=DTL-010:EMR-SM-003:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PLCExpr-RB, ALIAS=DTL-010:EMR-SM-003:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PosAct, ALIAS=DTL-010:EMR-SM-003:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PosErr, ALIAS=DTL-010:EMR-SM-003:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-PosSet, ALIAS=DTL-010:EMR-SM-003:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-seqstate, ALIAS=DTL-010:EMR-SM-003:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Stat, ALIAS=DTL-010:EMR-SM-003:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Stat_, ALIAS=DTL-010:EMR-SM-003:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-TrajSourceType-Cmd, ALIAS=DTL-010:EMR-SM-003:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-TrajSourceType-RB, ALIAS=DTL-010:EMR-SM-003:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-Vel-RB, ALIAS=DTL-010:EMR-SM-003:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-VelAct, ALIAS=DTL-010:EMR-SM-003:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-VelFrmHom, ALIAS=DTL-010:EMR-SM-003:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3-VelToHom, ALIAS=DTL-010:EMR-SM-003:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-010:AxisT1M3, ALIAS=DTL-010:EMR-SM-003")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-020, ECMC_AXIS_NAME=AxisT2M1, SECTION_NAME=DTL-020, ECMC_AXIS_EPICS_NAME=EMR-SM-001"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Err, ALIAS=DTL-020:EMR-SM-001:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-ErrId, ALIAS=DTL-020:EMR-SM-001:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-ErrRst, ALIAS=DTL-020:EMR-SM-001:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Acc-RB, ALIAS=DTL-020:EMR-SM-001:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-AccHom, ALIAS=DTL-020:EMR-SM-001:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-AllowCmdFromPLC-CmdEn, ALIAS=DTL-020:EMR-SM-001:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-001:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Array-Stat, ALIAS=DTL-020:EMR-SM-001:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-attarget, ALIAS=DTL-020:EMR-SM-001:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-AxisType-Act, ALIAS=DTL-020:EMR-SM-001:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-busy, ALIAS=DTL-020:EMR-SM-001:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgACCS-RB, ALIAS=DTL-020:EMR-SM-001:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgDHLM-En-RB, ALIAS=DTL-020:EMR-SM-001:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgDHLM-RB, ALIAS=DTL-020:EMR-SM-001:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgDLLM-En-RB, ALIAS=DTL-020:EMR-SM-001:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgDLLM-RB, ALIAS=DTL-020:EMR-SM-001:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgJVEL-RB, ALIAS=DTL-020:EMR-SM-001:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgPMAX-RB, ALIAS=DTL-020:EMR-SM-001:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgPMIN-RB, ALIAS=DTL-020:EMR-SM-001:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgPOSLAG-En-RB, ALIAS=DTL-020:EMR-SM-001:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgPOSLAG-RB, ALIAS=DTL-020:EMR-SM-001:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgPOSLAG-Tim-RB, ALIAS=DTL-020:EMR-SM-001:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgRDBD-En-RB, ALIAS=DTL-020:EMR-SM-001:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgRDBD-RB, ALIAS=DTL-020:EMR-SM-001:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgRDBD-Tim-RB, ALIAS=DTL-020:EMR-SM-001:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgSPDB-RB, ALIAS=DTL-020:EMR-SM-001:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgSREV-RB, ALIAS=DTL-020:EMR-SM-001:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgUREV-RB, ALIAS=DTL-020:EMR-SM-001:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgVELO-RB, ALIAS=DTL-020:EMR-SM-001:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-CfgVMAX-RB, ALIAS=DTL-020:EMR-SM-001:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-DbgStrToLOG, ALIAS=DTL-020:EMR-SM-001:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-DIR_, ALIAS=DTL-020:EMR-SM-001:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-enabled, ALIAS=DTL-020:EMR-SM-001:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-EncAct, ALIAS=DTL-020:EMR-SM-001:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-EncSourceType-Cmd, ALIAS=DTL-020:EMR-SM-001:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-EncSourceType-RB, ALIAS=DTL-020:EMR-SM-001:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-execute, ALIAS=DTL-020:EMR-SM-001:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-homeswitch, ALIAS=DTL-020:EMR-SM-001:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-HomPos, ALIAS=DTL-020:EMR-SM-001:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-HomPos-RB, ALIAS=DTL-020:EMR-SM-001:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-HomProc, ALIAS=DTL-020:EMR-SM-001:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-HomProc-RB, ALIAS=DTL-020:EMR-SM-001:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-inrealtime, ALIAS=DTL-020:EMR-SM-001:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-instartup, ALIAS=DTL-020:EMR-SM-001:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-lastilock, ALIAS=DTL-020:EMR-SM-001:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-limitbwd, ALIAS=DTL-020:EMR-SM-001:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-limitfwd, ALIAS=DTL-020:EMR-SM-001:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-moving, ALIAS=DTL-020:EMR-SM-001:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-MRES_, ALIAS=DTL-020:EMR-SM-001:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-MsgTxt, ALIAS=DTL-020:EMR-SM-001:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-OFF_, ALIAS=DTL-020:EMR-SM-001:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLC-CmdEn, ALIAS=DTL-020:EMR-SM-001:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-001:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLC-error, ALIAS=DTL-020:EMR-SM-001:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLC-firstscan, ALIAS=DTL-020:EMR-SM-001:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLCExpr, ALIAS=DTL-020:EMR-SM-001:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PLCExpr-RB, ALIAS=DTL-020:EMR-SM-001:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PosAct, ALIAS=DTL-020:EMR-SM-001:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PosErr, ALIAS=DTL-020:EMR-SM-001:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-PosSet, ALIAS=DTL-020:EMR-SM-001:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-seqstate, ALIAS=DTL-020:EMR-SM-001:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Stat, ALIAS=DTL-020:EMR-SM-001:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Stat_, ALIAS=DTL-020:EMR-SM-001:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-TrajSourceType-Cmd, ALIAS=DTL-020:EMR-SM-001:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-TrajSourceType-RB, ALIAS=DTL-020:EMR-SM-001:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-Vel-RB, ALIAS=DTL-020:EMR-SM-001:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-VelAct, ALIAS=DTL-020:EMR-SM-001:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-VelFrmHom, ALIAS=DTL-020:EMR-SM-001:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1-VelToHom, ALIAS=DTL-020:EMR-SM-001:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M1, ALIAS=DTL-020:EMR-SM-001")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-020, ECMC_AXIS_NAME=AxisT2M2, SECTION_NAME=DTL-020, ECMC_AXIS_EPICS_NAME=EMR-SM-002"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Err, ALIAS=DTL-020:EMR-SM-002:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-ErrId, ALIAS=DTL-020:EMR-SM-002:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-ErrRst, ALIAS=DTL-020:EMR-SM-002:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Acc-RB, ALIAS=DTL-020:EMR-SM-002:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-AccHom, ALIAS=DTL-020:EMR-SM-002:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-AllowCmdFromPLC-CmdEn, ALIAS=DTL-020:EMR-SM-002:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-002:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Array-Stat, ALIAS=DTL-020:EMR-SM-002:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-attarget, ALIAS=DTL-020:EMR-SM-002:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-AxisType-Act, ALIAS=DTL-020:EMR-SM-002:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-busy, ALIAS=DTL-020:EMR-SM-002:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgACCS-RB, ALIAS=DTL-020:EMR-SM-002:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgDHLM-En-RB, ALIAS=DTL-020:EMR-SM-002:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgDHLM-RB, ALIAS=DTL-020:EMR-SM-002:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgDLLM-En-RB, ALIAS=DTL-020:EMR-SM-002:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgDLLM-RB, ALIAS=DTL-020:EMR-SM-002:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgJVEL-RB, ALIAS=DTL-020:EMR-SM-002:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgPMAX-RB, ALIAS=DTL-020:EMR-SM-002:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgPMIN-RB, ALIAS=DTL-020:EMR-SM-002:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgPOSLAG-En-RB, ALIAS=DTL-020:EMR-SM-002:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgPOSLAG-RB, ALIAS=DTL-020:EMR-SM-002:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgPOSLAG-Tim-RB, ALIAS=DTL-020:EMR-SM-002:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgRDBD-En-RB, ALIAS=DTL-020:EMR-SM-002:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgRDBD-RB, ALIAS=DTL-020:EMR-SM-002:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgRDBD-Tim-RB, ALIAS=DTL-020:EMR-SM-002:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgSPDB-RB, ALIAS=DTL-020:EMR-SM-002:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgSREV-RB, ALIAS=DTL-020:EMR-SM-002:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgUREV-RB, ALIAS=DTL-020:EMR-SM-002:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgVELO-RB, ALIAS=DTL-020:EMR-SM-002:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-CfgVMAX-RB, ALIAS=DTL-020:EMR-SM-002:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-DbgStrToLOG, ALIAS=DTL-020:EMR-SM-002:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-DIR_, ALIAS=DTL-020:EMR-SM-002:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-enabled, ALIAS=DTL-020:EMR-SM-002:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-EncAct, ALIAS=DTL-020:EMR-SM-002:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-EncSourceType-Cmd, ALIAS=DTL-020:EMR-SM-002:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-EncSourceType-RB, ALIAS=DTL-020:EMR-SM-002:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-execute, ALIAS=DTL-020:EMR-SM-002:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-homeswitch, ALIAS=DTL-020:EMR-SM-002:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-HomPos, ALIAS=DTL-020:EMR-SM-002:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-HomPos-RB, ALIAS=DTL-020:EMR-SM-002:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-HomProc, ALIAS=DTL-020:EMR-SM-002:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-HomProc-RB, ALIAS=DTL-020:EMR-SM-002:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-inrealtime, ALIAS=DTL-020:EMR-SM-002:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-instartup, ALIAS=DTL-020:EMR-SM-002:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-lastilock, ALIAS=DTL-020:EMR-SM-002:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-limitbwd, ALIAS=DTL-020:EMR-SM-002:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-limitfwd, ALIAS=DTL-020:EMR-SM-002:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-moving, ALIAS=DTL-020:EMR-SM-002:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-MRES_, ALIAS=DTL-020:EMR-SM-002:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-MsgTxt, ALIAS=DTL-020:EMR-SM-002:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-OFF_, ALIAS=DTL-020:EMR-SM-002:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLC-CmdEn, ALIAS=DTL-020:EMR-SM-002:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-002:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLC-error, ALIAS=DTL-020:EMR-SM-002:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLC-firstscan, ALIAS=DTL-020:EMR-SM-002:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLCExpr, ALIAS=DTL-020:EMR-SM-002:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PLCExpr-RB, ALIAS=DTL-020:EMR-SM-002:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PosAct, ALIAS=DTL-020:EMR-SM-002:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PosErr, ALIAS=DTL-020:EMR-SM-002:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-PosSet, ALIAS=DTL-020:EMR-SM-002:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-seqstate, ALIAS=DTL-020:EMR-SM-002:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Stat, ALIAS=DTL-020:EMR-SM-002:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Stat_, ALIAS=DTL-020:EMR-SM-002:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-TrajSourceType-Cmd, ALIAS=DTL-020:EMR-SM-002:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-TrajSourceType-RB, ALIAS=DTL-020:EMR-SM-002:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-Vel-RB, ALIAS=DTL-020:EMR-SM-002:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-VelAct, ALIAS=DTL-020:EMR-SM-002:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-VelFrmHom, ALIAS=DTL-020:EMR-SM-002:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2-VelToHom, ALIAS=DTL-020:EMR-SM-002:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M2, ALIAS=DTL-020:EMR-SM-002")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-020, ECMC_AXIS_NAME=AxisT2M3, SECTION_NAME=DTL-020, ECMC_AXIS_EPICS_NAME=EMR-SM-003"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Err, ALIAS=DTL-020:EMR-SM-003:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-ErrId, ALIAS=DTL-020:EMR-SM-003:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-ErrRst, ALIAS=DTL-020:EMR-SM-003:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Acc-RB, ALIAS=DTL-020:EMR-SM-003:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-AccHom, ALIAS=DTL-020:EMR-SM-003:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-AllowCmdFromPLC-CmdEn, ALIAS=DTL-020:EMR-SM-003:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-003:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Array-Stat, ALIAS=DTL-020:EMR-SM-003:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-attarget, ALIAS=DTL-020:EMR-SM-003:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-AxisType-Act, ALIAS=DTL-020:EMR-SM-003:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-busy, ALIAS=DTL-020:EMR-SM-003:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgACCS-RB, ALIAS=DTL-020:EMR-SM-003:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgDHLM-En-RB, ALIAS=DTL-020:EMR-SM-003:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgDHLM-RB, ALIAS=DTL-020:EMR-SM-003:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgDLLM-En-RB, ALIAS=DTL-020:EMR-SM-003:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgDLLM-RB, ALIAS=DTL-020:EMR-SM-003:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgJVEL-RB, ALIAS=DTL-020:EMR-SM-003:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgPMAX-RB, ALIAS=DTL-020:EMR-SM-003:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgPMIN-RB, ALIAS=DTL-020:EMR-SM-003:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgPOSLAG-En-RB, ALIAS=DTL-020:EMR-SM-003:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgPOSLAG-RB, ALIAS=DTL-020:EMR-SM-003:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgPOSLAG-Tim-RB, ALIAS=DTL-020:EMR-SM-003:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgRDBD-En-RB, ALIAS=DTL-020:EMR-SM-003:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgRDBD-RB, ALIAS=DTL-020:EMR-SM-003:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgRDBD-Tim-RB, ALIAS=DTL-020:EMR-SM-003:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgSPDB-RB, ALIAS=DTL-020:EMR-SM-003:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgSREV-RB, ALIAS=DTL-020:EMR-SM-003:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgUREV-RB, ALIAS=DTL-020:EMR-SM-003:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgVELO-RB, ALIAS=DTL-020:EMR-SM-003:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-CfgVMAX-RB, ALIAS=DTL-020:EMR-SM-003:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-DbgStrToLOG, ALIAS=DTL-020:EMR-SM-003:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-DIR_, ALIAS=DTL-020:EMR-SM-003:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-enabled, ALIAS=DTL-020:EMR-SM-003:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-EncAct, ALIAS=DTL-020:EMR-SM-003:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-EncSourceType-Cmd, ALIAS=DTL-020:EMR-SM-003:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-EncSourceType-RB, ALIAS=DTL-020:EMR-SM-003:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-execute, ALIAS=DTL-020:EMR-SM-003:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-homeswitch, ALIAS=DTL-020:EMR-SM-003:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-HomPos, ALIAS=DTL-020:EMR-SM-003:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-HomPos-RB, ALIAS=DTL-020:EMR-SM-003:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-HomProc, ALIAS=DTL-020:EMR-SM-003:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-HomProc-RB, ALIAS=DTL-020:EMR-SM-003:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-inrealtime, ALIAS=DTL-020:EMR-SM-003:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-instartup, ALIAS=DTL-020:EMR-SM-003:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-lastilock, ALIAS=DTL-020:EMR-SM-003:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-limitbwd, ALIAS=DTL-020:EMR-SM-003:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-limitfwd, ALIAS=DTL-020:EMR-SM-003:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-moving, ALIAS=DTL-020:EMR-SM-003:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-MRES_, ALIAS=DTL-020:EMR-SM-003:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-MsgTxt, ALIAS=DTL-020:EMR-SM-003:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-OFF_, ALIAS=DTL-020:EMR-SM-003:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLC-CmdEn, ALIAS=DTL-020:EMR-SM-003:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLC-CmdEn-RB, ALIAS=DTL-020:EMR-SM-003:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLC-error, ALIAS=DTL-020:EMR-SM-003:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLC-firstscan, ALIAS=DTL-020:EMR-SM-003:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLCExpr, ALIAS=DTL-020:EMR-SM-003:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PLCExpr-RB, ALIAS=DTL-020:EMR-SM-003:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PosAct, ALIAS=DTL-020:EMR-SM-003:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PosErr, ALIAS=DTL-020:EMR-SM-003:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-PosSet, ALIAS=DTL-020:EMR-SM-003:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-seqstate, ALIAS=DTL-020:EMR-SM-003:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Stat, ALIAS=DTL-020:EMR-SM-003:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Stat_, ALIAS=DTL-020:EMR-SM-003:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-TrajSourceType-Cmd, ALIAS=DTL-020:EMR-SM-003:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-TrajSourceType-RB, ALIAS=DTL-020:EMR-SM-003:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-Vel-RB, ALIAS=DTL-020:EMR-SM-003:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-VelAct, ALIAS=DTL-020:EMR-SM-003:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-VelFrmHom, ALIAS=DTL-020:EMR-SM-003:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3-VelToHom, ALIAS=DTL-020:EMR-SM-003:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-020:AxisT2M3, ALIAS=DTL-020:EMR-SM-003")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-030, ECMC_AXIS_NAME=AxisT3M1, SECTION_NAME=DTL-030, ECMC_AXIS_EPICS_NAME=EMR-SM-001"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Err, ALIAS=DTL-030:EMR-SM-001:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-ErrId, ALIAS=DTL-030:EMR-SM-001:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-ErrRst, ALIAS=DTL-030:EMR-SM-001:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Acc-RB, ALIAS=DTL-030:EMR-SM-001:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-AccHom, ALIAS=DTL-030:EMR-SM-001:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-AllowCmdFromPLC-CmdEn, ALIAS=DTL-030:EMR-SM-001:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-001:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Array-Stat, ALIAS=DTL-030:EMR-SM-001:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-attarget, ALIAS=DTL-030:EMR-SM-001:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-AxisType-Act, ALIAS=DTL-030:EMR-SM-001:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-busy, ALIAS=DTL-030:EMR-SM-001:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgACCS-RB, ALIAS=DTL-030:EMR-SM-001:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgDHLM-En-RB, ALIAS=DTL-030:EMR-SM-001:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgDHLM-RB, ALIAS=DTL-030:EMR-SM-001:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgDLLM-En-RB, ALIAS=DTL-030:EMR-SM-001:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgDLLM-RB, ALIAS=DTL-030:EMR-SM-001:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgJVEL-RB, ALIAS=DTL-030:EMR-SM-001:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgPMAX-RB, ALIAS=DTL-030:EMR-SM-001:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgPMIN-RB, ALIAS=DTL-030:EMR-SM-001:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgPOSLAG-En-RB, ALIAS=DTL-030:EMR-SM-001:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgPOSLAG-RB, ALIAS=DTL-030:EMR-SM-001:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgPOSLAG-Tim-RB, ALIAS=DTL-030:EMR-SM-001:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgRDBD-En-RB, ALIAS=DTL-030:EMR-SM-001:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgRDBD-RB, ALIAS=DTL-030:EMR-SM-001:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgRDBD-Tim-RB, ALIAS=DTL-030:EMR-SM-001:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgSPDB-RB, ALIAS=DTL-030:EMR-SM-001:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgSREV-RB, ALIAS=DTL-030:EMR-SM-001:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgUREV-RB, ALIAS=DTL-030:EMR-SM-001:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgVELO-RB, ALIAS=DTL-030:EMR-SM-001:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-CfgVMAX-RB, ALIAS=DTL-030:EMR-SM-001:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-DbgStrToLOG, ALIAS=DTL-030:EMR-SM-001:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-DIR_, ALIAS=DTL-030:EMR-SM-001:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-enabled, ALIAS=DTL-030:EMR-SM-001:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-EncAct, ALIAS=DTL-030:EMR-SM-001:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-EncSourceType-Cmd, ALIAS=DTL-030:EMR-SM-001:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-EncSourceType-RB, ALIAS=DTL-030:EMR-SM-001:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-execute, ALIAS=DTL-030:EMR-SM-001:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-homeswitch, ALIAS=DTL-030:EMR-SM-001:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-HomPos, ALIAS=DTL-030:EMR-SM-001:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-HomPos-RB, ALIAS=DTL-030:EMR-SM-001:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-HomProc, ALIAS=DTL-030:EMR-SM-001:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-HomProc-RB, ALIAS=DTL-030:EMR-SM-001:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-inrealtime, ALIAS=DTL-030:EMR-SM-001:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-instartup, ALIAS=DTL-030:EMR-SM-001:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-lastilock, ALIAS=DTL-030:EMR-SM-001:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-limitbwd, ALIAS=DTL-030:EMR-SM-001:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-limitfwd, ALIAS=DTL-030:EMR-SM-001:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-moving, ALIAS=DTL-030:EMR-SM-001:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-MRES_, ALIAS=DTL-030:EMR-SM-001:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-MsgTxt, ALIAS=DTL-030:EMR-SM-001:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-OFF_, ALIAS=DTL-030:EMR-SM-001:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLC-CmdEn, ALIAS=DTL-030:EMR-SM-001:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-001:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLC-error, ALIAS=DTL-030:EMR-SM-001:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLC-firstscan, ALIAS=DTL-030:EMR-SM-001:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLCExpr, ALIAS=DTL-030:EMR-SM-001:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PLCExpr-RB, ALIAS=DTL-030:EMR-SM-001:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PosAct, ALIAS=DTL-030:EMR-SM-001:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PosErr, ALIAS=DTL-030:EMR-SM-001:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-PosSet, ALIAS=DTL-030:EMR-SM-001:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-seqstate, ALIAS=DTL-030:EMR-SM-001:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Stat, ALIAS=DTL-030:EMR-SM-001:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Stat_, ALIAS=DTL-030:EMR-SM-001:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-TrajSourceType-Cmd, ALIAS=DTL-030:EMR-SM-001:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-TrajSourceType-RB, ALIAS=DTL-030:EMR-SM-001:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-Vel-RB, ALIAS=DTL-030:EMR-SM-001:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-VelAct, ALIAS=DTL-030:EMR-SM-001:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-VelFrmHom, ALIAS=DTL-030:EMR-SM-001:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1-VelToHom, ALIAS=DTL-030:EMR-SM-001:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M1, ALIAS=DTL-030:EMR-SM-001")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-030, ECMC_AXIS_NAME=AxisT3M2, SECTION_NAME=DTL-030, ECMC_AXIS_EPICS_NAME=EMR-SM-002"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Err, ALIAS=DTL-030:EMR-SM-002:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-ErrId, ALIAS=DTL-030:EMR-SM-002:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-ErrRst, ALIAS=DTL-030:EMR-SM-002:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Acc-RB, ALIAS=DTL-030:EMR-SM-002:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-AccHom, ALIAS=DTL-030:EMR-SM-002:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-AllowCmdFromPLC-CmdEn, ALIAS=DTL-030:EMR-SM-002:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-002:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Array-Stat, ALIAS=DTL-030:EMR-SM-002:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-attarget, ALIAS=DTL-030:EMR-SM-002:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-AxisType-Act, ALIAS=DTL-030:EMR-SM-002:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-busy, ALIAS=DTL-030:EMR-SM-002:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgACCS-RB, ALIAS=DTL-030:EMR-SM-002:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgDHLM-En-RB, ALIAS=DTL-030:EMR-SM-002:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgDHLM-RB, ALIAS=DTL-030:EMR-SM-002:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgDLLM-En-RB, ALIAS=DTL-030:EMR-SM-002:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgDLLM-RB, ALIAS=DTL-030:EMR-SM-002:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgJVEL-RB, ALIAS=DTL-030:EMR-SM-002:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgPMAX-RB, ALIAS=DTL-030:EMR-SM-002:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgPMIN-RB, ALIAS=DTL-030:EMR-SM-002:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgPOSLAG-En-RB, ALIAS=DTL-030:EMR-SM-002:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgPOSLAG-RB, ALIAS=DTL-030:EMR-SM-002:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgPOSLAG-Tim-RB, ALIAS=DTL-030:EMR-SM-002:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgRDBD-En-RB, ALIAS=DTL-030:EMR-SM-002:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgRDBD-RB, ALIAS=DTL-030:EMR-SM-002:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgRDBD-Tim-RB, ALIAS=DTL-030:EMR-SM-002:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgSPDB-RB, ALIAS=DTL-030:EMR-SM-002:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgSREV-RB, ALIAS=DTL-030:EMR-SM-002:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgUREV-RB, ALIAS=DTL-030:EMR-SM-002:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgVELO-RB, ALIAS=DTL-030:EMR-SM-002:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-CfgVMAX-RB, ALIAS=DTL-030:EMR-SM-002:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-DbgStrToLOG, ALIAS=DTL-030:EMR-SM-002:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-DIR_, ALIAS=DTL-030:EMR-SM-002:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-enabled, ALIAS=DTL-030:EMR-SM-002:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-EncAct, ALIAS=DTL-030:EMR-SM-002:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-EncSourceType-Cmd, ALIAS=DTL-030:EMR-SM-002:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-EncSourceType-RB, ALIAS=DTL-030:EMR-SM-002:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-execute, ALIAS=DTL-030:EMR-SM-002:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-homeswitch, ALIAS=DTL-030:EMR-SM-002:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-HomPos, ALIAS=DTL-030:EMR-SM-002:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-HomPos-RB, ALIAS=DTL-030:EMR-SM-002:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-HomProc, ALIAS=DTL-030:EMR-SM-002:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-HomProc-RB, ALIAS=DTL-030:EMR-SM-002:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-inrealtime, ALIAS=DTL-030:EMR-SM-002:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-instartup, ALIAS=DTL-030:EMR-SM-002:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-lastilock, ALIAS=DTL-030:EMR-SM-002:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-limitbwd, ALIAS=DTL-030:EMR-SM-002:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-limitfwd, ALIAS=DTL-030:EMR-SM-002:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-moving, ALIAS=DTL-030:EMR-SM-002:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-MRES_, ALIAS=DTL-030:EMR-SM-002:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-MsgTxt, ALIAS=DTL-030:EMR-SM-002:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-OFF_, ALIAS=DTL-030:EMR-SM-002:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLC-CmdEn, ALIAS=DTL-030:EMR-SM-002:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-002:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLC-error, ALIAS=DTL-030:EMR-SM-002:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLC-firstscan, ALIAS=DTL-030:EMR-SM-002:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLCExpr, ALIAS=DTL-030:EMR-SM-002:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PLCExpr-RB, ALIAS=DTL-030:EMR-SM-002:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PosAct, ALIAS=DTL-030:EMR-SM-002:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PosErr, ALIAS=DTL-030:EMR-SM-002:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-PosSet, ALIAS=DTL-030:EMR-SM-002:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-seqstate, ALIAS=DTL-030:EMR-SM-002:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Stat, ALIAS=DTL-030:EMR-SM-002:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Stat_, ALIAS=DTL-030:EMR-SM-002:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-TrajSourceType-Cmd, ALIAS=DTL-030:EMR-SM-002:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-TrajSourceType-RB, ALIAS=DTL-030:EMR-SM-002:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-Vel-RB, ALIAS=DTL-030:EMR-SM-002:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-VelAct, ALIAS=DTL-030:EMR-SM-002:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-VelFrmHom, ALIAS=DTL-030:EMR-SM-002:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2-VelToHom, ALIAS=DTL-030:EMR-SM-002:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M2, ALIAS=DTL-030:EMR-SM-002")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-030, ECMC_AXIS_NAME=AxisT3M3, SECTION_NAME=DTL-030, ECMC_AXIS_EPICS_NAME=EMR-SM-003"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Err, ALIAS=DTL-030:EMR-SM-003:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-ErrId, ALIAS=DTL-030:EMR-SM-003:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-ErrRst, ALIAS=DTL-030:EMR-SM-003:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Acc-RB, ALIAS=DTL-030:EMR-SM-003:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-AccHom, ALIAS=DTL-030:EMR-SM-003:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-AllowCmdFromPLC-CmdEn, ALIAS=DTL-030:EMR-SM-003:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-003:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Array-Stat, ALIAS=DTL-030:EMR-SM-003:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-attarget, ALIAS=DTL-030:EMR-SM-003:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-AxisType-Act, ALIAS=DTL-030:EMR-SM-003:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-busy, ALIAS=DTL-030:EMR-SM-003:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgACCS-RB, ALIAS=DTL-030:EMR-SM-003:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgDHLM-En-RB, ALIAS=DTL-030:EMR-SM-003:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgDHLM-RB, ALIAS=DTL-030:EMR-SM-003:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgDLLM-En-RB, ALIAS=DTL-030:EMR-SM-003:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgDLLM-RB, ALIAS=DTL-030:EMR-SM-003:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgJVEL-RB, ALIAS=DTL-030:EMR-SM-003:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgPMAX-RB, ALIAS=DTL-030:EMR-SM-003:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgPMIN-RB, ALIAS=DTL-030:EMR-SM-003:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgPOSLAG-En-RB, ALIAS=DTL-030:EMR-SM-003:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgPOSLAG-RB, ALIAS=DTL-030:EMR-SM-003:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgPOSLAG-Tim-RB, ALIAS=DTL-030:EMR-SM-003:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgRDBD-En-RB, ALIAS=DTL-030:EMR-SM-003:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgRDBD-RB, ALIAS=DTL-030:EMR-SM-003:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgRDBD-Tim-RB, ALIAS=DTL-030:EMR-SM-003:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgSPDB-RB, ALIAS=DTL-030:EMR-SM-003:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgSREV-RB, ALIAS=DTL-030:EMR-SM-003:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgUREV-RB, ALIAS=DTL-030:EMR-SM-003:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgVELO-RB, ALIAS=DTL-030:EMR-SM-003:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-CfgVMAX-RB, ALIAS=DTL-030:EMR-SM-003:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-DbgStrToLOG, ALIAS=DTL-030:EMR-SM-003:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-DIR_, ALIAS=DTL-030:EMR-SM-003:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-enabled, ALIAS=DTL-030:EMR-SM-003:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-EncAct, ALIAS=DTL-030:EMR-SM-003:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-EncSourceType-Cmd, ALIAS=DTL-030:EMR-SM-003:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-EncSourceType-RB, ALIAS=DTL-030:EMR-SM-003:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-execute, ALIAS=DTL-030:EMR-SM-003:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-homeswitch, ALIAS=DTL-030:EMR-SM-003:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-HomPos, ALIAS=DTL-030:EMR-SM-003:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-HomPos-RB, ALIAS=DTL-030:EMR-SM-003:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-HomProc, ALIAS=DTL-030:EMR-SM-003:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-HomProc-RB, ALIAS=DTL-030:EMR-SM-003:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-inrealtime, ALIAS=DTL-030:EMR-SM-003:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-instartup, ALIAS=DTL-030:EMR-SM-003:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-lastilock, ALIAS=DTL-030:EMR-SM-003:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-limitbwd, ALIAS=DTL-030:EMR-SM-003:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-limitfwd, ALIAS=DTL-030:EMR-SM-003:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-moving, ALIAS=DTL-030:EMR-SM-003:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-MRES_, ALIAS=DTL-030:EMR-SM-003:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-MsgTxt, ALIAS=DTL-030:EMR-SM-003:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-OFF_, ALIAS=DTL-030:EMR-SM-003:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLC-CmdEn, ALIAS=DTL-030:EMR-SM-003:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLC-CmdEn-RB, ALIAS=DTL-030:EMR-SM-003:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLC-error, ALIAS=DTL-030:EMR-SM-003:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLC-firstscan, ALIAS=DTL-030:EMR-SM-003:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLCExpr, ALIAS=DTL-030:EMR-SM-003:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PLCExpr-RB, ALIAS=DTL-030:EMR-SM-003:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PosAct, ALIAS=DTL-030:EMR-SM-003:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PosErr, ALIAS=DTL-030:EMR-SM-003:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-PosSet, ALIAS=DTL-030:EMR-SM-003:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-seqstate, ALIAS=DTL-030:EMR-SM-003:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Stat, ALIAS=DTL-030:EMR-SM-003:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Stat_, ALIAS=DTL-030:EMR-SM-003:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-TrajSourceType-Cmd, ALIAS=DTL-030:EMR-SM-003:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-TrajSourceType-RB, ALIAS=DTL-030:EMR-SM-003:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-Vel-RB, ALIAS=DTL-030:EMR-SM-003:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-VelAct, ALIAS=DTL-030:EMR-SM-003:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-VelFrmHom, ALIAS=DTL-030:EMR-SM-003:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3-VelToHom, ALIAS=DTL-030:EMR-SM-003:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-030:AxisT3M3, ALIAS=DTL-030:EMR-SM-003")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-040, ECMC_AXIS_NAME=AxisT4M1, SECTION_NAME=DTL-040, ECMC_AXIS_EPICS_NAME=EMR-SM-001"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Err, ALIAS=DTL-040:EMR-SM-001:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-ErrId, ALIAS=DTL-040:EMR-SM-001:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-ErrRst, ALIAS=DTL-040:EMR-SM-001:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Acc-RB, ALIAS=DTL-040:EMR-SM-001:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-AccHom, ALIAS=DTL-040:EMR-SM-001:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-AllowCmdFromPLC-CmdEn, ALIAS=DTL-040:EMR-SM-001:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-001:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Array-Stat, ALIAS=DTL-040:EMR-SM-001:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-attarget, ALIAS=DTL-040:EMR-SM-001:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-AxisType-Act, ALIAS=DTL-040:EMR-SM-001:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-busy, ALIAS=DTL-040:EMR-SM-001:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgACCS-RB, ALIAS=DTL-040:EMR-SM-001:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgDHLM-En-RB, ALIAS=DTL-040:EMR-SM-001:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgDHLM-RB, ALIAS=DTL-040:EMR-SM-001:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgDLLM-En-RB, ALIAS=DTL-040:EMR-SM-001:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgDLLM-RB, ALIAS=DTL-040:EMR-SM-001:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgJVEL-RB, ALIAS=DTL-040:EMR-SM-001:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgPMAX-RB, ALIAS=DTL-040:EMR-SM-001:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgPMIN-RB, ALIAS=DTL-040:EMR-SM-001:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgPOSLAG-En-RB, ALIAS=DTL-040:EMR-SM-001:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgPOSLAG-RB, ALIAS=DTL-040:EMR-SM-001:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgPOSLAG-Tim-RB, ALIAS=DTL-040:EMR-SM-001:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgRDBD-En-RB, ALIAS=DTL-040:EMR-SM-001:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgRDBD-RB, ALIAS=DTL-040:EMR-SM-001:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgRDBD-Tim-RB, ALIAS=DTL-040:EMR-SM-001:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgSPDB-RB, ALIAS=DTL-040:EMR-SM-001:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgSREV-RB, ALIAS=DTL-040:EMR-SM-001:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgUREV-RB, ALIAS=DTL-040:EMR-SM-001:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgVELO-RB, ALIAS=DTL-040:EMR-SM-001:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-CfgVMAX-RB, ALIAS=DTL-040:EMR-SM-001:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-DbgStrToLOG, ALIAS=DTL-040:EMR-SM-001:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-DIR_, ALIAS=DTL-040:EMR-SM-001:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-enabled, ALIAS=DTL-040:EMR-SM-001:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-EncAct, ALIAS=DTL-040:EMR-SM-001:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-EncSourceType-Cmd, ALIAS=DTL-040:EMR-SM-001:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-EncSourceType-RB, ALIAS=DTL-040:EMR-SM-001:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-execute, ALIAS=DTL-040:EMR-SM-001:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-homeswitch, ALIAS=DTL-040:EMR-SM-001:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-HomPos, ALIAS=DTL-040:EMR-SM-001:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-HomPos-RB, ALIAS=DTL-040:EMR-SM-001:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-HomProc, ALIAS=DTL-040:EMR-SM-001:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-HomProc-RB, ALIAS=DTL-040:EMR-SM-001:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-inrealtime, ALIAS=DTL-040:EMR-SM-001:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-instartup, ALIAS=DTL-040:EMR-SM-001:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-lastilock, ALIAS=DTL-040:EMR-SM-001:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-limitbwd, ALIAS=DTL-040:EMR-SM-001:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-limitfwd, ALIAS=DTL-040:EMR-SM-001:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-moving, ALIAS=DTL-040:EMR-SM-001:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-MRES_, ALIAS=DTL-040:EMR-SM-001:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-MsgTxt, ALIAS=DTL-040:EMR-SM-001:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-OFF_, ALIAS=DTL-040:EMR-SM-001:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLC-CmdEn, ALIAS=DTL-040:EMR-SM-001:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-001:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLC-error, ALIAS=DTL-040:EMR-SM-001:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLC-firstscan, ALIAS=DTL-040:EMR-SM-001:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLCExpr, ALIAS=DTL-040:EMR-SM-001:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PLCExpr-RB, ALIAS=DTL-040:EMR-SM-001:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PosAct, ALIAS=DTL-040:EMR-SM-001:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PosErr, ALIAS=DTL-040:EMR-SM-001:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-PosSet, ALIAS=DTL-040:EMR-SM-001:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-seqstate, ALIAS=DTL-040:EMR-SM-001:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Stat, ALIAS=DTL-040:EMR-SM-001:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Stat_, ALIAS=DTL-040:EMR-SM-001:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-TrajSourceType-Cmd, ALIAS=DTL-040:EMR-SM-001:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-TrajSourceType-RB, ALIAS=DTL-040:EMR-SM-001:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-Vel-RB, ALIAS=DTL-040:EMR-SM-001:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-VelAct, ALIAS=DTL-040:EMR-SM-001:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-VelFrmHom, ALIAS=DTL-040:EMR-SM-001:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1-VelToHom, ALIAS=DTL-040:EMR-SM-001:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M1, ALIAS=DTL-040:EMR-SM-001")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-040, ECMC_AXIS_NAME=AxisT4M2, SECTION_NAME=DTL-040, ECMC_AXIS_EPICS_NAME=EMR-SM-002"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Err, ALIAS=DTL-040:EMR-SM-002:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-ErrId, ALIAS=DTL-040:EMR-SM-002:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-ErrRst, ALIAS=DTL-040:EMR-SM-002:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Acc-RB, ALIAS=DTL-040:EMR-SM-002:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-AccHom, ALIAS=DTL-040:EMR-SM-002:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-AllowCmdFromPLC-CmdEn, ALIAS=DTL-040:EMR-SM-002:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-002:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Array-Stat, ALIAS=DTL-040:EMR-SM-002:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-attarget, ALIAS=DTL-040:EMR-SM-002:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-AxisType-Act, ALIAS=DTL-040:EMR-SM-002:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-busy, ALIAS=DTL-040:EMR-SM-002:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgACCS-RB, ALIAS=DTL-040:EMR-SM-002:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgDHLM-En-RB, ALIAS=DTL-040:EMR-SM-002:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgDHLM-RB, ALIAS=DTL-040:EMR-SM-002:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgDLLM-En-RB, ALIAS=DTL-040:EMR-SM-002:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgDLLM-RB, ALIAS=DTL-040:EMR-SM-002:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgJVEL-RB, ALIAS=DTL-040:EMR-SM-002:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgPMAX-RB, ALIAS=DTL-040:EMR-SM-002:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgPMIN-RB, ALIAS=DTL-040:EMR-SM-002:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgPOSLAG-En-RB, ALIAS=DTL-040:EMR-SM-002:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgPOSLAG-RB, ALIAS=DTL-040:EMR-SM-002:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgPOSLAG-Tim-RB, ALIAS=DTL-040:EMR-SM-002:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgRDBD-En-RB, ALIAS=DTL-040:EMR-SM-002:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgRDBD-RB, ALIAS=DTL-040:EMR-SM-002:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgRDBD-Tim-RB, ALIAS=DTL-040:EMR-SM-002:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgSPDB-RB, ALIAS=DTL-040:EMR-SM-002:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgSREV-RB, ALIAS=DTL-040:EMR-SM-002:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgUREV-RB, ALIAS=DTL-040:EMR-SM-002:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgVELO-RB, ALIAS=DTL-040:EMR-SM-002:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-CfgVMAX-RB, ALIAS=DTL-040:EMR-SM-002:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-DbgStrToLOG, ALIAS=DTL-040:EMR-SM-002:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-DIR_, ALIAS=DTL-040:EMR-SM-002:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-enabled, ALIAS=DTL-040:EMR-SM-002:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-EncAct, ALIAS=DTL-040:EMR-SM-002:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-EncSourceType-Cmd, ALIAS=DTL-040:EMR-SM-002:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-EncSourceType-RB, ALIAS=DTL-040:EMR-SM-002:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-execute, ALIAS=DTL-040:EMR-SM-002:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-homeswitch, ALIAS=DTL-040:EMR-SM-002:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-HomPos, ALIAS=DTL-040:EMR-SM-002:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-HomPos-RB, ALIAS=DTL-040:EMR-SM-002:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-HomProc, ALIAS=DTL-040:EMR-SM-002:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-HomProc-RB, ALIAS=DTL-040:EMR-SM-002:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-inrealtime, ALIAS=DTL-040:EMR-SM-002:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-instartup, ALIAS=DTL-040:EMR-SM-002:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-lastilock, ALIAS=DTL-040:EMR-SM-002:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-limitbwd, ALIAS=DTL-040:EMR-SM-002:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-limitfwd, ALIAS=DTL-040:EMR-SM-002:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-moving, ALIAS=DTL-040:EMR-SM-002:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-MRES_, ALIAS=DTL-040:EMR-SM-002:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-MsgTxt, ALIAS=DTL-040:EMR-SM-002:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-OFF_, ALIAS=DTL-040:EMR-SM-002:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLC-CmdEn, ALIAS=DTL-040:EMR-SM-002:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-002:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLC-error, ALIAS=DTL-040:EMR-SM-002:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLC-firstscan, ALIAS=DTL-040:EMR-SM-002:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLCExpr, ALIAS=DTL-040:EMR-SM-002:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PLCExpr-RB, ALIAS=DTL-040:EMR-SM-002:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PosAct, ALIAS=DTL-040:EMR-SM-002:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PosErr, ALIAS=DTL-040:EMR-SM-002:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-PosSet, ALIAS=DTL-040:EMR-SM-002:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-seqstate, ALIAS=DTL-040:EMR-SM-002:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Stat, ALIAS=DTL-040:EMR-SM-002:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Stat_, ALIAS=DTL-040:EMR-SM-002:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-TrajSourceType-Cmd, ALIAS=DTL-040:EMR-SM-002:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-TrajSourceType-RB, ALIAS=DTL-040:EMR-SM-002:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-Vel-RB, ALIAS=DTL-040:EMR-SM-002:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-VelAct, ALIAS=DTL-040:EMR-SM-002:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-VelFrmHom, ALIAS=DTL-040:EMR-SM-002:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2-VelToHom, ALIAS=DTL-040:EMR-SM-002:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M2, ALIAS=DTL-040:EMR-SM-002")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-040, ECMC_AXIS_NAME=AxisT4M3, SECTION_NAME=DTL-040, ECMC_AXIS_EPICS_NAME=EMR-SM-003"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Err, ALIAS=DTL-040:EMR-SM-003:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-ErrId, ALIAS=DTL-040:EMR-SM-003:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-ErrRst, ALIAS=DTL-040:EMR-SM-003:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Acc-RB, ALIAS=DTL-040:EMR-SM-003:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-AccHom, ALIAS=DTL-040:EMR-SM-003:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-AllowCmdFromPLC-CmdEn, ALIAS=DTL-040:EMR-SM-003:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-003:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Array-Stat, ALIAS=DTL-040:EMR-SM-003:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-attarget, ALIAS=DTL-040:EMR-SM-003:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-AxisType-Act, ALIAS=DTL-040:EMR-SM-003:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-busy, ALIAS=DTL-040:EMR-SM-003:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgACCS-RB, ALIAS=DTL-040:EMR-SM-003:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgDHLM-En-RB, ALIAS=DTL-040:EMR-SM-003:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgDHLM-RB, ALIAS=DTL-040:EMR-SM-003:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgDLLM-En-RB, ALIAS=DTL-040:EMR-SM-003:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgDLLM-RB, ALIAS=DTL-040:EMR-SM-003:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgJVEL-RB, ALIAS=DTL-040:EMR-SM-003:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgPMAX-RB, ALIAS=DTL-040:EMR-SM-003:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgPMIN-RB, ALIAS=DTL-040:EMR-SM-003:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgPOSLAG-En-RB, ALIAS=DTL-040:EMR-SM-003:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgPOSLAG-RB, ALIAS=DTL-040:EMR-SM-003:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgPOSLAG-Tim-RB, ALIAS=DTL-040:EMR-SM-003:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgRDBD-En-RB, ALIAS=DTL-040:EMR-SM-003:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgRDBD-RB, ALIAS=DTL-040:EMR-SM-003:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgRDBD-Tim-RB, ALIAS=DTL-040:EMR-SM-003:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgSPDB-RB, ALIAS=DTL-040:EMR-SM-003:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgSREV-RB, ALIAS=DTL-040:EMR-SM-003:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgUREV-RB, ALIAS=DTL-040:EMR-SM-003:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgVELO-RB, ALIAS=DTL-040:EMR-SM-003:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-CfgVMAX-RB, ALIAS=DTL-040:EMR-SM-003:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-DbgStrToLOG, ALIAS=DTL-040:EMR-SM-003:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-DIR_, ALIAS=DTL-040:EMR-SM-003:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-enabled, ALIAS=DTL-040:EMR-SM-003:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-EncAct, ALIAS=DTL-040:EMR-SM-003:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-EncSourceType-Cmd, ALIAS=DTL-040:EMR-SM-003:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-EncSourceType-RB, ALIAS=DTL-040:EMR-SM-003:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-execute, ALIAS=DTL-040:EMR-SM-003:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-homeswitch, ALIAS=DTL-040:EMR-SM-003:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-HomPos, ALIAS=DTL-040:EMR-SM-003:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-HomPos-RB, ALIAS=DTL-040:EMR-SM-003:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-HomProc, ALIAS=DTL-040:EMR-SM-003:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-HomProc-RB, ALIAS=DTL-040:EMR-SM-003:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-inrealtime, ALIAS=DTL-040:EMR-SM-003:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-instartup, ALIAS=DTL-040:EMR-SM-003:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-lastilock, ALIAS=DTL-040:EMR-SM-003:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-limitbwd, ALIAS=DTL-040:EMR-SM-003:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-limitfwd, ALIAS=DTL-040:EMR-SM-003:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-moving, ALIAS=DTL-040:EMR-SM-003:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-MRES_, ALIAS=DTL-040:EMR-SM-003:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-MsgTxt, ALIAS=DTL-040:EMR-SM-003:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-OFF_, ALIAS=DTL-040:EMR-SM-003:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLC-CmdEn, ALIAS=DTL-040:EMR-SM-003:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLC-CmdEn-RB, ALIAS=DTL-040:EMR-SM-003:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLC-error, ALIAS=DTL-040:EMR-SM-003:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLC-firstscan, ALIAS=DTL-040:EMR-SM-003:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLCExpr, ALIAS=DTL-040:EMR-SM-003:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PLCExpr-RB, ALIAS=DTL-040:EMR-SM-003:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PosAct, ALIAS=DTL-040:EMR-SM-003:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PosErr, ALIAS=DTL-040:EMR-SM-003:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-PosSet, ALIAS=DTL-040:EMR-SM-003:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-seqstate, ALIAS=DTL-040:EMR-SM-003:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Stat, ALIAS=DTL-040:EMR-SM-003:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Stat_, ALIAS=DTL-040:EMR-SM-003:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-TrajSourceType-Cmd, ALIAS=DTL-040:EMR-SM-003:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-TrajSourceType-RB, ALIAS=DTL-040:EMR-SM-003:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-Vel-RB, ALIAS=DTL-040:EMR-SM-003:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-VelAct, ALIAS=DTL-040:EMR-SM-003:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-VelFrmHom, ALIAS=DTL-040:EMR-SM-003:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3-VelToHom, ALIAS=DTL-040:EMR-SM-003:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-040:AxisT4M3, ALIAS=DTL-040:EMR-SM-003")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-050, ECMC_AXIS_NAME=AxisT5M1, SECTION_NAME=DTL-050, ECMC_AXIS_EPICS_NAME=EMR-SM-001"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Err, ALIAS=DTL-050:EMR-SM-001:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-ErrId, ALIAS=DTL-050:EMR-SM-001:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-ErrRst, ALIAS=DTL-050:EMR-SM-001:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Acc-RB, ALIAS=DTL-050:EMR-SM-001:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-AccHom, ALIAS=DTL-050:EMR-SM-001:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-AllowCmdFromPLC-CmdEn, ALIAS=DTL-050:EMR-SM-001:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-001:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Array-Stat, ALIAS=DTL-050:EMR-SM-001:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-attarget, ALIAS=DTL-050:EMR-SM-001:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-AxisType-Act, ALIAS=DTL-050:EMR-SM-001:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-busy, ALIAS=DTL-050:EMR-SM-001:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgACCS-RB, ALIAS=DTL-050:EMR-SM-001:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgDHLM-En-RB, ALIAS=DTL-050:EMR-SM-001:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgDHLM-RB, ALIAS=DTL-050:EMR-SM-001:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgDLLM-En-RB, ALIAS=DTL-050:EMR-SM-001:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgDLLM-RB, ALIAS=DTL-050:EMR-SM-001:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgJVEL-RB, ALIAS=DTL-050:EMR-SM-001:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgPMAX-RB, ALIAS=DTL-050:EMR-SM-001:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgPMIN-RB, ALIAS=DTL-050:EMR-SM-001:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgPOSLAG-En-RB, ALIAS=DTL-050:EMR-SM-001:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgPOSLAG-RB, ALIAS=DTL-050:EMR-SM-001:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgPOSLAG-Tim-RB, ALIAS=DTL-050:EMR-SM-001:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgRDBD-En-RB, ALIAS=DTL-050:EMR-SM-001:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgRDBD-RB, ALIAS=DTL-050:EMR-SM-001:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgRDBD-Tim-RB, ALIAS=DTL-050:EMR-SM-001:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgSPDB-RB, ALIAS=DTL-050:EMR-SM-001:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgSREV-RB, ALIAS=DTL-050:EMR-SM-001:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgUREV-RB, ALIAS=DTL-050:EMR-SM-001:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgVELO-RB, ALIAS=DTL-050:EMR-SM-001:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-CfgVMAX-RB, ALIAS=DTL-050:EMR-SM-001:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-DbgStrToLOG, ALIAS=DTL-050:EMR-SM-001:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-DIR_, ALIAS=DTL-050:EMR-SM-001:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-enabled, ALIAS=DTL-050:EMR-SM-001:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-EncAct, ALIAS=DTL-050:EMR-SM-001:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-EncSourceType-Cmd, ALIAS=DTL-050:EMR-SM-001:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-EncSourceType-RB, ALIAS=DTL-050:EMR-SM-001:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-execute, ALIAS=DTL-050:EMR-SM-001:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-homeswitch, ALIAS=DTL-050:EMR-SM-001:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-HomPos, ALIAS=DTL-050:EMR-SM-001:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-HomPos-RB, ALIAS=DTL-050:EMR-SM-001:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-HomProc, ALIAS=DTL-050:EMR-SM-001:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-HomProc-RB, ALIAS=DTL-050:EMR-SM-001:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-inrealtime, ALIAS=DTL-050:EMR-SM-001:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-instartup, ALIAS=DTL-050:EMR-SM-001:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-lastilock, ALIAS=DTL-050:EMR-SM-001:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-limitbwd, ALIAS=DTL-050:EMR-SM-001:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-limitfwd, ALIAS=DTL-050:EMR-SM-001:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-moving, ALIAS=DTL-050:EMR-SM-001:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-MRES_, ALIAS=DTL-050:EMR-SM-001:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-MsgTxt, ALIAS=DTL-050:EMR-SM-001:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-OFF_, ALIAS=DTL-050:EMR-SM-001:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLC-CmdEn, ALIAS=DTL-050:EMR-SM-001:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-001:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLC-error, ALIAS=DTL-050:EMR-SM-001:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLC-firstscan, ALIAS=DTL-050:EMR-SM-001:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLCExpr, ALIAS=DTL-050:EMR-SM-001:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PLCExpr-RB, ALIAS=DTL-050:EMR-SM-001:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PosAct, ALIAS=DTL-050:EMR-SM-001:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PosErr, ALIAS=DTL-050:EMR-SM-001:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-PosSet, ALIAS=DTL-050:EMR-SM-001:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-seqstate, ALIAS=DTL-050:EMR-SM-001:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Stat, ALIAS=DTL-050:EMR-SM-001:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Stat_, ALIAS=DTL-050:EMR-SM-001:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-TrajSourceType-Cmd, ALIAS=DTL-050:EMR-SM-001:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-TrajSourceType-RB, ALIAS=DTL-050:EMR-SM-001:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-Vel-RB, ALIAS=DTL-050:EMR-SM-001:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-VelAct, ALIAS=DTL-050:EMR-SM-001:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-VelFrmHom, ALIAS=DTL-050:EMR-SM-001:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1-VelToHom, ALIAS=DTL-050:EMR-SM-001:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M1, ALIAS=DTL-050:EMR-SM-001")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-050, ECMC_AXIS_NAME=AxisT5M2, SECTION_NAME=DTL-050, ECMC_AXIS_EPICS_NAME=EMR-SM-002"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Err, ALIAS=DTL-050:EMR-SM-002:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-ErrId, ALIAS=DTL-050:EMR-SM-002:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-ErrRst, ALIAS=DTL-050:EMR-SM-002:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Acc-RB, ALIAS=DTL-050:EMR-SM-002:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-AccHom, ALIAS=DTL-050:EMR-SM-002:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-AllowCmdFromPLC-CmdEn, ALIAS=DTL-050:EMR-SM-002:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-002:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Array-Stat, ALIAS=DTL-050:EMR-SM-002:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-attarget, ALIAS=DTL-050:EMR-SM-002:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-AxisType-Act, ALIAS=DTL-050:EMR-SM-002:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-busy, ALIAS=DTL-050:EMR-SM-002:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgACCS-RB, ALIAS=DTL-050:EMR-SM-002:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgDHLM-En-RB, ALIAS=DTL-050:EMR-SM-002:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgDHLM-RB, ALIAS=DTL-050:EMR-SM-002:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgDLLM-En-RB, ALIAS=DTL-050:EMR-SM-002:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgDLLM-RB, ALIAS=DTL-050:EMR-SM-002:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgJVEL-RB, ALIAS=DTL-050:EMR-SM-002:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgPMAX-RB, ALIAS=DTL-050:EMR-SM-002:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgPMIN-RB, ALIAS=DTL-050:EMR-SM-002:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgPOSLAG-En-RB, ALIAS=DTL-050:EMR-SM-002:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgPOSLAG-RB, ALIAS=DTL-050:EMR-SM-002:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgPOSLAG-Tim-RB, ALIAS=DTL-050:EMR-SM-002:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgRDBD-En-RB, ALIAS=DTL-050:EMR-SM-002:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgRDBD-RB, ALIAS=DTL-050:EMR-SM-002:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgRDBD-Tim-RB, ALIAS=DTL-050:EMR-SM-002:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgSPDB-RB, ALIAS=DTL-050:EMR-SM-002:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgSREV-RB, ALIAS=DTL-050:EMR-SM-002:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgUREV-RB, ALIAS=DTL-050:EMR-SM-002:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgVELO-RB, ALIAS=DTL-050:EMR-SM-002:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-CfgVMAX-RB, ALIAS=DTL-050:EMR-SM-002:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-DbgStrToLOG, ALIAS=DTL-050:EMR-SM-002:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-DIR_, ALIAS=DTL-050:EMR-SM-002:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-enabled, ALIAS=DTL-050:EMR-SM-002:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-EncAct, ALIAS=DTL-050:EMR-SM-002:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-EncSourceType-Cmd, ALIAS=DTL-050:EMR-SM-002:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-EncSourceType-RB, ALIAS=DTL-050:EMR-SM-002:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-execute, ALIAS=DTL-050:EMR-SM-002:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-homeswitch, ALIAS=DTL-050:EMR-SM-002:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-HomPos, ALIAS=DTL-050:EMR-SM-002:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-HomPos-RB, ALIAS=DTL-050:EMR-SM-002:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-HomProc, ALIAS=DTL-050:EMR-SM-002:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-HomProc-RB, ALIAS=DTL-050:EMR-SM-002:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-inrealtime, ALIAS=DTL-050:EMR-SM-002:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-instartup, ALIAS=DTL-050:EMR-SM-002:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-lastilock, ALIAS=DTL-050:EMR-SM-002:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-limitbwd, ALIAS=DTL-050:EMR-SM-002:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-limitfwd, ALIAS=DTL-050:EMR-SM-002:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-moving, ALIAS=DTL-050:EMR-SM-002:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-MRES_, ALIAS=DTL-050:EMR-SM-002:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-MsgTxt, ALIAS=DTL-050:EMR-SM-002:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-OFF_, ALIAS=DTL-050:EMR-SM-002:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLC-CmdEn, ALIAS=DTL-050:EMR-SM-002:PLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-002:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLC-error, ALIAS=DTL-050:EMR-SM-002:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLC-firstscan, ALIAS=DTL-050:EMR-SM-002:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLCExpr, ALIAS=DTL-050:EMR-SM-002:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PLCExpr-RB, ALIAS=DTL-050:EMR-SM-002:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PosAct, ALIAS=DTL-050:EMR-SM-002:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PosErr, ALIAS=DTL-050:EMR-SM-002:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-PosSet, ALIAS=DTL-050:EMR-SM-002:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-seqstate, ALIAS=DTL-050:EMR-SM-002:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Stat, ALIAS=DTL-050:EMR-SM-002:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Stat_, ALIAS=DTL-050:EMR-SM-002:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-TrajSourceType-Cmd, ALIAS=DTL-050:EMR-SM-002:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-TrajSourceType-RB, ALIAS=DTL-050:EMR-SM-002:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-Vel-RB, ALIAS=DTL-050:EMR-SM-002:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-VelAct, ALIAS=DTL-050:EMR-SM-002:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-VelFrmHom, ALIAS=DTL-050:EMR-SM-002:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2-VelToHom, ALIAS=DTL-050:EMR-SM-002:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M2, ALIAS=DTL-050:EMR-SM-002")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasMotorAxis.cmd", "DEV=DTL-050, ECMC_AXIS_NAME=AxisT5M3, SECTION_NAME=DTL-050, ECMC_AXIS_EPICS_NAME=EMR-SM-003"
#==============================================================================
# aliasMotorAxis.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Err, ALIAS=DTL-050:EMR-SM-003:Err") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-ErrId, ALIAS=DTL-050:EMR-SM-003:Err-Id") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-ErrRst, ALIAS=DTL-050:EMR-SM-003:Err-Rst") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Acc-RB, ALIAS=DTL-050:EMR-SM-003:Acc-RB") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-AccHom, ALIAS=DTL-050:EMR-SM-003:AccHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-AllowCmdFromPLC-CmdEn, ALIAS=DTL-050:EMR-SM-003:AllowCmdFromPLC-CmdEn")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-AllowCmdFromPLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-003:AllowCmdFromPLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Array-Stat, ALIAS=DTL-050:EMR-SM-003:Array-Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-attarget, ALIAS=DTL-050:EMR-SM-003:attarget")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-AxisType-Act, ALIAS=DTL-050:EMR-SM-003:AxisType-Act")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-busy, ALIAS=DTL-050:EMR-SM-003:busy")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgACCS-RB, ALIAS=DTL-050:EMR-SM-003:CfgACCS-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgDHLM-En-RB, ALIAS=DTL-050:EMR-SM-003:CfgDHLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgDHLM-RB, ALIAS=DTL-050:EMR-SM-003:CfgDHLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgDLLM-En-RB, ALIAS=DTL-050:EMR-SM-003:CfgDLLM-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgDLLM-RB, ALIAS=DTL-050:EMR-SM-003:CfgDLLM-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgJVEL-RB, ALIAS=DTL-050:EMR-SM-003:CfgJVEL-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgPMAX-RB, ALIAS=DTL-050:EMR-SM-003:CfgPMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgPMIN-RB, ALIAS=DTL-050:EMR-SM-003:CfgPMIN-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgPOSLAG-En-RB, ALIAS=DTL-050:EMR-SM-003:CfgPOSLAG-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgPOSLAG-RB, ALIAS=DTL-050:EMR-SM-003:CfgPOSLAG-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgPOSLAG-Tim-RB, ALIAS=DTL-050:EMR-SM-003:CfgPOSLAG-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgRDBD-En-RB, ALIAS=DTL-050:EMR-SM-003:CfgRDBD-En-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgRDBD-RB, ALIAS=DTL-050:EMR-SM-003:CfgRDBD-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgRDBD-Tim-RB, ALIAS=DTL-050:EMR-SM-003:CfgRDBD-Tim-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgSPDB-RB, ALIAS=DTL-050:EMR-SM-003:CfgSPDB-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgSREV-RB, ALIAS=DTL-050:EMR-SM-003:CfgSREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgUREV-RB, ALIAS=DTL-050:EMR-SM-003:CfgUREV-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgVELO-RB, ALIAS=DTL-050:EMR-SM-003:CfgVELO-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-CfgVMAX-RB, ALIAS=DTL-050:EMR-SM-003:CfgVMAX-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-DbgStrToLOG, ALIAS=DTL-050:EMR-SM-003:DbgStrToLOG")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-DIR_, ALIAS=DTL-050:EMR-SM-003:DIR")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-enabled, ALIAS=DTL-050:EMR-SM-003:enabled")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-EncAct, ALIAS=DTL-050:EMR-SM-003:EncAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-EncSourceType-Cmd, ALIAS=DTL-050:EMR-SM-003:EncSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-EncSourceType-RB, ALIAS=DTL-050:EMR-SM-003:EncSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-execute, ALIAS=DTL-050:EMR-SM-003:execute")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-homeswitch, ALIAS=DTL-050:EMR-SM-003:homeswitch")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-HomPos, ALIAS=DTL-050:EMR-SM-003:HomPos")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-HomPos-RB, ALIAS=DTL-050:EMR-SM-003:HomPos-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-HomProc, ALIAS=DTL-050:EMR-SM-003:HomProc")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-HomProc-RB, ALIAS=DTL-050:EMR-SM-003:HomProc-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-inrealtime, ALIAS=DTL-050:EMR-SM-003:inrealtime")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-instartup, ALIAS=DTL-050:EMR-SM-003:instartup")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-lastilock, ALIAS=DTL-050:EMR-SM-003:lastilock")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-limitbwd, ALIAS=DTL-050:EMR-SM-003:limitbwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-limitfwd, ALIAS=DTL-050:EMR-SM-003:limitfwd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-moving, ALIAS=DTL-050:EMR-SM-003:moving")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-MRES_, ALIAS=DTL-050:EMR-SM-003:MRES")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-MsgTxt, ALIAS=DTL-050:EMR-SM-003:MsgTxt")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-OFF_, ALIAS=DTL-050:EMR-SM-003:OFF")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PLC-CmdEn, ALIAS=DTL-050:EMR-SM-003:PLC-CmdEn")
dbLoadRecords(ecmcGenericAliaCan't create alias "DTL-010:MC-MCU-00001:OkStat" referring to "DTL-000:ec3-s6-EL2624-BO2"
Error at or before ")" in path "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/db"  file "ecmcGenericAlias.db" line 1
Can't create alias "DTL-010:MC-MCU-001:OkStat-RB" referring to "DTL-000:ec3-s6-EL2624-BO2-RB"
Error at or before ")" in path "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/db"  file "ecmcGenericAlias.db" line 1
Can't create alias "DTL-010:MC-MCU-00001:OkStat" referring to "DTL-000:ec3-s6-EL2624-BO3"
Error at or before ")" in path "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/db"  file "ecmcGenericAlias.db" line 1
Can't create alias "DTL-010:MC-MCU-001:OkStat-RB" referring to "DTL-000:ec3-s6-EL2624-BO3-RB"
Error at or before ")" in path "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/db"  file "ecmcGenericAlias.db" line 1
s.db,"NAME=DTL-050:AxisT5M3-PLC-CmdEn-RB, ALIAS=DTL-050:EMR-SM-003:PLC-CmdEn-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PLC-error, ALIAS=DTL-050:EMR-SM-003:PLC-error")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PLC-firstscan, ALIAS=DTL-050:EMR-SM-003:PLC-firstscan")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PLCExpr, ALIAS=DTL-050:EMR-SM-003:PLCExpr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PLCExpr-RB, ALIAS=DTL-050:EMR-SM-003:PLCExpr-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PosAct, ALIAS=DTL-050:EMR-SM-003:PosAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PosErr, ALIAS=DTL-050:EMR-SM-003:PosErr")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-PosSet, ALIAS=DTL-050:EMR-SM-003:PosSet")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-seqstate, ALIAS=DTL-050:EMR-SM-003:seqstate")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Stat, ALIAS=DTL-050:EMR-SM-003:Stat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Stat_, ALIAS=DTL-050:EMR-SM-003:Stat_CK")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-TrajSourceType-Cmd, ALIAS=DTL-050:EMR-SM-003:TrajSourceType-Cmd")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-TrajSourceType-RB, ALIAS=DTL-050:EMR-SM-003:TrajSourceType-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-Vel-RB, ALIAS=DTL-050:EMR-SM-003:Vel-RB")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-VelAct, ALIAS=DTL-050:EMR-SM-003:VelAct")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-VelFrmHom, ALIAS=DTL-050:EMR-SM-003:VelFrmHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3-VelToHom, ALIAS=DTL-050:EMR-SM-003:VelToHom")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-050:AxisT5M3, ALIAS=DTL-050:EMR-SM-003")

# Power
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasPrwUnitStatus.cmd", "SLAVE_ID=4, HW_DESC=EL1008, BIT_24V=7, BIT_48V=8, SECTION_NAME=DTL-010"
#==============================================================================
# aliasPrwUnitStatus.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI7, ALIAS=DTL-010:MC-MCU:GS24VPS_OKStat")
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s4-EL1008-BI8, ALIAS=DTL-010:MC-MCU:48VPS_OKStat")

# Tuner Status
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasTunerStatus.cmd", "SLAVE_ID=6, HW_DESC=EL2624, BIT=1, SECTION_NAME=DTL-010, DEVICE_POS=001"
#==============================================================================
# aliasTunerStatus.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO1, ALIAS=DTL-010:MC-MCU-00001:OkStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO1-RB, ALIAS=DTL-010:MC-MCU-001:OkStat-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasTunerStatus.cmd", "SLAVE_ID=6, HW_DESC=EL2624, BIT=2, SECTION_NAME=DTL-010, DEVICE_POS=001"
#==============================================================================
# aliasTunerStatus.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO2, ALIAS=DTL-010:MC-MCU-00001:OkStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO2-RB, ALIAS=DTL-010:MC-MCU-001:OkStat-RB") 
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasTunerStatus.cmd", "SLAVE_ID=6, HW_DESC=EL2624, BIT=3, SECTION_NAME=DTL-010, DEVICE_POS=001"
#==============================================================================
# aliasTunerStatus.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO3, ALIAS=DTL-010:MC-MCU-00001:OkStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO3-RB, ALIAS=DTL-010:MC-MCU-001:OkStat-RB") 

# Tank Status
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/aliasTankStatus.cmd", "SLAVE_ID=6, HW_DESC=EL2624, BIT=4, SECTION_NAME=DTL-010"
#==============================================================================
# aliasTankStatus.cmd
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO4, ALIAS=DTL-010:MC-MCU:OkStat") 
dbLoadRecords(ecmcGenericAlias.db,"NAME=DTL-000:ec3-s6-EL2624-BO4-RB, ALIAS=DTL-010:MC-MCU:OkStat-RB") 


##############################################################################
############## Post Configuration - Record Fields Config

## Linear Encorders
##
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-010, DEVICE_POS=1"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-010:EMR-GT-001:Pos.EGU" "mm")
afterInit(dbpf "DTL-010:EMR-GT-001:Pos.EOFF" "105")
afterInit(dbpf "DTL-010:EMR-GT-001:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-010:EMR-GT-001:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-010, DEVICE_POS=2"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-010:EMR-GT-002:Pos.EGU" "mm")
afterInit(dbpf "DTL-010:EMR-GT-002:Pos.EOFF" "105")
afterInit(dbpf "DTL-010:EMR-GT-002:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-010:EMR-GT-002:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-010, DEVICE_POS=3"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-010:EMR-GT-003:Pos.EGU" "mm")
afterInit(dbpf "DTL-010:EMR-GT-003:Pos.EOFF" "105")
afterInit(dbpf "DTL-010:EMR-GT-003:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-010:EMR-GT-003:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-020, DEVICE_POS=1"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-020:EMR-GT-001:Pos.EGU" "mm")
afterInit(dbpf "DTL-020:EMR-GT-001:Pos.EOFF" "105")
afterInit(dbpf "DTL-020:EMR-GT-001:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-020:EMR-GT-001:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-020, DEVICE_POS=2"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-020:EMR-GT-002:Pos.EGU" "mm")
afterInit(dbpf "DTL-020:EMR-GT-002:Pos.EOFF" "105")
afterInit(dbpf "DTL-020:EMR-GT-002:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-020:EMR-GT-002:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-020, DEVICE_POS=3"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-020:EMR-GT-003:Pos.EGU" "mm")
afterInit(dbpf "DTL-020:EMR-GT-003:Pos.EOFF" "105")
afterInit(dbpf "DTL-020:EMR-GT-003:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-020:EMR-GT-003:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-030, DEVICE_POS=1"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-030:EMR-GT-001:Pos.EGU" "mm")
afterInit(dbpf "DTL-030:EMR-GT-001:Pos.EOFF" "105")
afterInit(dbpf "DTL-030:EMR-GT-001:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-030:EMR-GT-001:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-030, DEVICE_POS=2"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-030:EMR-GT-002:Pos.EGU" "mm")
afterInit(dbpf "DTL-030:EMR-GT-002:Pos.EOFF" "105")
afterInit(dbpf "DTL-030:EMR-GT-002:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-030:EMR-GT-002:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-030, DEVICE_POS=3"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-030:EMR-GT-003:Pos.EGU" "mm")
afterInit(dbpf "DTL-030:EMR-GT-003:Pos.EOFF" "105")
afterInit(dbpf "DTL-030:EMR-GT-003:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-030:EMR-GT-003:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-040, DEVICE_POS=1"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-040:EMR-GT-001:Pos.EGU" "mm")
afterInit(dbpf "DTL-040:EMR-GT-001:Pos.EOFF" "105")
afterInit(dbpf "DTL-040:EMR-GT-001:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-040:EMR-GT-001:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-040, DEVICE_POS=2"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-040:EMR-GT-002:Pos.EGU" "mm")
afterInit(dbpf "DTL-040:EMR-GT-002:Pos.EOFF" "105")
afterInit(dbpf "DTL-040:EMR-GT-002:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-040:EMR-GT-002:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-040, DEVICE_POS=3"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-040:EMR-GT-003:Pos.EGU" "mm")
afterInit(dbpf "DTL-040:EMR-GT-003:Pos.EOFF" "105")
afterInit(dbpf "DTL-040:EMR-GT-003:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-040:EMR-GT-003:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-050, DEVICE_POS=1"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-050:EMR-GT-001:Pos.EGU" "mm")
afterInit(dbpf "DTL-050:EMR-GT-001:Pos.EOFF" "105")
afterInit(dbpf "DTL-050:EMR-GT-001:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-050:EMR-GT-001:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-050, DEVICE_POS=2"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-050:EMR-GT-002:Pos.EGU" "mm")
afterInit(dbpf "DTL-050:EMR-GT-002:Pos.EOFF" "105")
afterInit(dbpf "DTL-050:EMR-GT-002:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-050:EMR-GT-002:Pos.LINR" "SLOPE")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitLinearEncConfig.cmd", "SECTION_NAME=DTL-050, DEVICE_POS=3"
#==============================================================================
# postInitLinearEncConfig.cmd
afterInit(dbpf "DTL-050:EMR-GT-003:Pos.EGU" "mm")
afterInit(dbpf "DTL-050:EMR-GT-003:Pos.EOFF" "105")
afterInit(dbpf "DTL-050:EMR-GT-003:Pos.ESLO" "-0.0032145")
afterInit(dbpf "DTL-050:EMR-GT-003:Pos.LINR" "SLOPE")


## SQL State Machine
##
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitStateMachine.cmd", "SECTION_NAME=DTL-010"
#==============================================================================
# postInitStateMachine.cmd
afterInit(seq tuners_statemachine "SECTION_NAME=DTL-010")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitStateMachine.cmd", "SECTION_NAME=DTL-020"
#==============================================================================
# postInitStateMachine.cmd
afterInit(seq tuners_statemachine "SECTION_NAME=DTL-020")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitStateMachine.cmd", "SECTION_NAME=DTL-030"
#==============================================================================
# postInitStateMachine.cmd
afterInit(seq tuners_statemachine "SECTION_NAME=DTL-030")
iocshLoad "/epics/base-7.0.3.1/req2020/08/10 18:13:37.925 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocBuild (0). Allow callbacks: true.
Starting iocInit
2020/08/10 18:13:37.925 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtBeginning (1). Allow callbacks: true.
2020/08/10 18:13:37.926 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCallbackInit (2). Allow callbacks: true.
2020/08/10 18:13:37.926 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaLinkInit (3). Allow callbacks: true.
2020/08/10 18:13:37.926 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDrvSup (4). Allow callbacks: true.
2020/08/10 18:13:37.926 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitRecSup (5). Allow callbacks: true.
2020/08/10 18:13:37.926 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDevSup (6). Allow callbacks: true.
2020/08/10 18:13:37.939 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.BO_1 linked to record (asyn reason 1).
2020/08/10 18:13:37.940 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.BO_2 linked to record (asyn reason 2).
2020/08/10 18:13:37.940 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.BO_3 linked to record (asyn reason 3).
2020/08/10 18:13:37.941 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.BO_4 linked to record (asyn reason 4).
2020/08/10 18:13:37.941 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.BO_1 linked to record (asyn reason 5).
2020/08/10 18:13:37.942 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.BO_2 linked to record (asyn reason 6).
2020/08/10 18:13:37.942 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.BO_3 linked to record (asyn reason 7).
2020/08/10 18:13:37.943 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.BO_4 linked to record (asyn reason 8).
2020/08/10 18:13:37.944 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.BO_1 linked to record (asyn reason 9).
2020/08/10 18:13:37.944 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.BO_2 linked to record (asyn reason 10).
2020/08/10 18:13:37.945 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.BO_3 linked to record (asyn reason 11).
2020/08/10 18:13:37.946 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.BO_4 linked to record (asyn reason 12).
2020/08/10 18:13:37.946 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.BO_1 linked to record (asyn reason 13).
2020/08/10 18:13:37.947 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.BO_2 linked to record (asyn reason 14).
2020/08/10 18:13:37.948 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.BO_3 linked to record (asyn reason 15).
2020/08/10 18:13:37.948 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.BO_4 linked to record (asyn reason 16).
2020/08/10 18:13:37.949 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.BO_1 linked to record (asyn reason 17).
2020/08/10 18:13:37.950 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.BO_2 linked to record (asyn reason 18).
2020/08/10 18:13:37.950 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.BO_3 linked to record (asyn reason 19).
2020/08/10 18:13:37.951 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.BO_4 linked to record (asyn reason 20).
2020/08/10 18:13:37.952 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_1 linked to record (asyn reason 21).
2020/08/10 18:13:37.953 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_2 linked to record (asyn reason 22).
2020/08/10 18:13:37.954 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_3 linked to record (asyn reason 23).
2020/08/10 18:13:37.954 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_4 linked to record (asyn reason 24).
2020/08/10 18:13:37.955 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_5 linked to record (asyn reason 25).
2020/08/10 18:13:37.956 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_6 linked to record (asyn reason 26).
2020/08/10 18:13:37.957 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_7 linked to record (asyn reason 27).
2020/08/10 18:13:37.958 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_8 linked to record (asyn reason 28).
2020/08/10 18:13:37.959 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_9 linked to record (asyn reason 29).
2020/08/10 18:13:37.959 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_10 linked to record (asyn reason 30).
2020/08/10 18:13:37.960 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_11 linked to record (asyn reason 31).
2020/08/10 18:13:37.961 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_12 linked to record (asyn reason 32).
2020/08/10 18:13:37.962 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_13 linked to record (asyn reason 33).
2020/08/10 18:13:37.963 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_14 linked to record (asyn reason 34).
2020/08/10 18:13:37.964 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_15 linked to record (asyn reason 35).
2020/08/10 18:13:37.965 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.BO_16 linked to record (asyn reason 36).
2020/08/10 18:13:37.966 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_1 linked to record (asyn reason 37).
2020/08/10 18:13:37.967 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_2 linked to record (asyn reason 38).
2020/08/10 18:13:37.968 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_3 linked to record (asyn reason 39).
2020/08/10 18:13:37.968 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_4 linked to record (asyn reason 40).
2020/08/10 18:13:37.969 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_5 linked to record (asyn reason 41).
2020/08/10 18:13:37.970 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_6 linked to record (asyn reason 42).
2020/08/10 18:13:37.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_7 linked to record (asyn reason 43).
2020/08/10 18:13:37.972 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_8 linked to record (asyn reason 44).
2020/08/10 18:13:37.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_9 linked to record (asyn reason 45).
2020/08/10 18:13:37.974 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_10 linked to record (asyn reason 46).
2020/08/10 18:13:37.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_11 linked to record (asyn reason 47).
2020/08/10 18:13:37.976 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_12 linked to record (asyn reason 48).
2020/08/10 18:13:37.977 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_13 linked to record (asyn reason 49).
2020/08/10 18:13:37.978 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_14 linked to record (asyn reason 50).
2020/08/10 18:13:37.979 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_15 linked to record (asyn reason 51).
2020/08/10 18:13:37.980 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.BO_16 linked to record (asyn reason 52).
2020/08/10 18:13:37.981 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_1 linked to record (asyn reason 53).
2020/08/10 18:13:37.982 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_2 linked to record (asyn reason 54).
2020/08/10 18:13:37.983 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_3 linked to record (asyn reason 55).
2020/08/10 18:13:37.984 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_4 linked to record (asyn reason 56).
2020/08/10 18:13:37.985 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_5 linked to record (asyn reason 57).
2020/08/10 18:13:37.986 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_6 linked to record (asyn reason 58).
2020/08/10 18:13:37.987 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_7 linked to record (asyn reason 59).
2020/08/10 18:13:37.988 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_8 linked to record (asyn reason 60).
2020/08/10 18:13:37.989 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_9 linked to record (asyn reason 61).
2020/08/10 18:13:37.990 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_10 linked to record (asyn reason 62).
2020/08/10 18:13:37.991 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_11 linked to record (asyn reason 63).
2020/08/10 18:13:37.992 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_12 linked to record (asyn reason 64).
2020/08/10 18:13:37.993 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_13 linked to record (asyn reason 65).
2020/08/10 18:13:37.994 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_14 linked to record (asyn reason 66).
2020/08/10 18:13:37.995 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_15 linked to record (asyn reason 67).
2020/08/10 18:13:37.996 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.BO_16 linked to record (asyn reason 68).
2020/08/10 18:13:37.998 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_1 linked to record (asyn reason 69).
2020/08/10 18:13:37.999 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_2 linked to record (asyn reason 70).
2020/08/10 18:13:37.999 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_3 linked to record (asyn reason 71).
2020/08/10 18:13:38.001 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_4 linked to record (asyn reason 72).
2020/08/10 18:13:38.002 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_5 linked to record (asyn reason 73).
2020/08/10 18:13:38.003 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_6 linked to record (asyn reason 74).
2020/08/10 18:13:38.005 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_7 linked to record (asyn reason 75).
2020/08/10 18:13:38.006 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_8 linked to record (asyn reason 76).
2020/08/10 18:13:38.007 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_9 linked to record (asyn reason 77).
2020/08/10 18:13:38.008 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_10 linked to record (asyn reason 78).
2020/08/10 18:13:38.009 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_11 linked to record (asyn reason 79).
2020/08/10 18:13:38.011 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_12 linked to record (asyn reason 80).
2020/08/10 18:13:38.012 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_13 linked to record (asyn reason 81).
2020/08/10 18:13:38.013 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_14 linked to record (asyn reason 82).
2020/08/10 18:13:38.014 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_15 linked to record (asyn reason 83).
2020/08/10 18:13:38.016 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.BO_16 linked to record (asyn reason 84).
2020/08/10 18:13:38.017 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_1 linked to record (asyn reason 85).
2020/08/10 18:13:38.018 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_2 linked to record (asyn reason 86).
2020/08/10 18:13:38.020 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_3 linked to record (asyn reason 87).
2020/08/10 18:13:38.021 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_4 linked to record (asyn reason 88).
2020/08/10 18:13:38.022 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_5 linked to record (asyn reason 89).
2020/08/10 18:13:38.023 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_6 linked to record (asyn reason 90).
2020/08/10 18:13:38.024 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_7 linked to record (asyn reason 91).
2020/08/10 18:13:38.024 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_8 linked to record (asyn reason 92).
2020/08/10 18:13:38.025 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_9 linked to record (asyn reason 93).
2020/08/10 18:13:38.026 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_10 linked to record (asyn reason 94).
2020/08/10 18:13:38.027 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_11 linked to record (asyn reason 95).
2020/08/10 18:13:38.027 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_12 linked to record (asyn reason 96).
2020/08/10 18:13:38.028 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_13 linked to record (asyn reason 97).
2020/08/10 18:13:38.029 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_14 linked to record (asyn reason 98).
2020/08/10 18:13:38.030 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_15 linked to record (asyn reason 99).
2020/08/10 18:13:38.030 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.BO_16 linked to record (asyn reason 100).
2020/08/10 18:13:38.031 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.BO_1 linked to record (asyn reason 101).
2020/08/10 18:13:38.032 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.BO_2 linked to record (asyn reason 102).
2020/08/10 18:13:38.032 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.BO_3 linked to record (asyn reason 103).
2020/08/10 18:13:38.033 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.BO_4 linked to record (asyn reason 104).
2020/08/10 18:13:38.034 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.BO_1 linked to record (asyn reason 105).
2020/08/10 18:13:38.034 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.BO_2 linked to record (asyn reason 106).
2020/08/10 18:13:38.035 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.BO_3 linked to record (asyn reason 107).
2020/08/10 18:13:38.035 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.BO_4 linked to record (asyn reason 108).
2020/08/10 18:13:38.036 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.BO_1 linked to record (asyn reason 109).
2020/08/10 18:13:38.037 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.BO_2 linked to record (asyn reason 110).
2020/08/10 18:13:38.037 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.BO_3 linked to record (asyn reason 111).
2020/08/10 18:13:38.038 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.BO_4 linked to record (asyn reason 112).
2020/08/10 18:13:38.038 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.BO_1 linked to record (asyn reason 113).
2020/08/10 18:13:38.039 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.BO_2 linked to record (asyn reason 114).
2020/08/10 18:13:38.039 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.BO_3 linked to record (asyn reason 115).
2020/08/10 18:13:38.040 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.BO_4 linked to record (asyn reason 116).
2020/08/10 18:13:38.041 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.BO_1 linked to record (asyn reason 117).
2020/08/10 18:13:38.041 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.BO_2 linked to record (asyn reason 118).
2020/08/10 18:13:38.042 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.BO_3 linked to record (asyn reason 119).
2020/08/10 18:13:38.042 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.BO_4 linked to record (asyn reason 120).
2020/08/10 18:13:38.043 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.BO_1 linked to record (asyn reason 121).
2020/08/10 18:13:38.043 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.BO_2 linked to record (asyn reason 122).
2020/08/10 18:13:38.044 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.BO_3 linked to record (asyn reason 123).
2020/08/10 18:13:38.044 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.BO_4 linked to record (asyn reason 124).
2020/08/10 18:13:38.045 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.BO_1 linked to record (asyn reason 125).
2020/08/10 18:13:38.045 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.BO_2 linked to record (asyn reason 126).
2020/08/10 18:13:38.046 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.BO_3 linked to record (asyn reason 127).
2020/08/10 18:13:38.046 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.BO_4 linked to record (asyn reason 128).
2020/08/10 18:13:38.047 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.BO_1 linked to record (asyn reason 129).
2020/08/10 18:13:38.047 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.BO_2 linked to record (asyn reason 130).
2020/08/10 18:13:38.048 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.BO_3 linked to record (asyn reason 131).
2020/08/10 18:13:38.049 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.BO_4 linked to record (asyn reason 132).
2020/08/10 18:13:38.049 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.BO_1 linked to record (asyn reason 133).
2020/08/10 18:13:38.050 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.BO_2 linked to record (asyn reason 134).
2020/08/10 18:13:38.050 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.BO_3 linked to record (asyn reason 135).
2020/08/10 18:13:38.051 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.BO_4 linked to record (asyn reason 136).
2020/08/10 18:13:38.051 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.BO_1 linked to record (asyn reason 137).
2020/08/10 18:13:38.052 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.BO_2 linked to record (asyn reason 138).
2020/08/10 18:13:38.052 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.BO_3 linked to record (asyn reason 139).
2020/08/10 18:13:38.053 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.BO_4 linked to record (asyn reason 140).
2020/08/10 18:13:38.055 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.reset linked to record (asyn reason 141).
2020/08/10 18:13:38.056 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.STM_CONTROL linked to record (asyn reason 142).
2020/08/10 18:13:38.057 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.VELOCITY_SETPOINT linked to record (asyn reason 143).
2020/08/10 18:13:38.057 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.ENC_CONTROL linked to record (asyn reason 144).
2020/08/10 18:13:38.058 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.VALUE linked to record (asyn reason 145).
2020/08/10 18:13:38.058 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.STM_CONTROL linked to record (asyn reason 146).
2020/08/10 18:13:38.059 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.VELOCITY_SETPOINT linked to record (asyn reason 147).
2020/08/10 18:13:38.060 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.ENC_CONTROL linked to record (asyn reason 148).
2020/08/10 18:13:38.060 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.VALUE linked to record (asyn reason 149).
2020/08/10 18:13:38.061 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.STM_CONTROL linked to record (asyn reason 150).
2020/08/10 18:13:38.061 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.VELOCITY_SETPOINT linked to record (asyn reason 151).
2020/08/10 18:13:38.062 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.ENC_CONTROL linked to record (asyn reason 152).
2020/08/10 18:13:38.063 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.VALUE linked to record (asyn reason 153).
2020/08/10 18:13:38.063 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.STM_CONTROL linked to record (asyn reason 154).
2020/08/10 18:13:38.064 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.VELOCITY_SETPOINT linked to record (asyn reason 155).
2020/08/10 18:13:38.065 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.ENC_CONTROL linked to record (asyn reason 156).
2020/08/10 18:13:38.065 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.VALUE linked to record (asyn reason 157).
2020/08/10 18:13:38.066 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.STM_CONTROL linked to record (asyn reason 158).
2020/08/10 18:13:38.066 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.VELOCITY_SETPOINT linked to record (asyn reason 159).
2020/08/10 18:13:38.067 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.ENC_CONTROL linked to record (asyn reason 160).
2020/08/10 18:13:38.068 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.VALUE linked to record (asyn reason 161).
2020/08/10 18:13:38.068 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.STM_CONTROL linked to record (asyn reason 162).
2020/08/10 18:13:38.069 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.VELOCITY_SETPOINT linked to record (asyn reason 163).
2020/08/10 18:13:38.070 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.ENC_CONTROL linked to record (asyn reason 164).
2020/08/10 18:13:38.070 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.VALUE linked to record (asyn reason 165).
2020/08/10 18:13:38.071 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.STM_CONTROL linked to record (asyn reason 166).
2020/08/10 18:13:38.072 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.VELOCITY_SETPOINT linked to record (asyn reason 167).
2020/08/10 18:13:38.072 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.ENC_CONTROL linked to record (asyn reason 168).
2020/08/10 18:13:38.073 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.VALUE linked to record (asyn reason 169).
2020/08/10 18:13:38.074 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.STM_CONTROL linked to record (asyn reason 170).
2020/08/10 18:13:38.074 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.VELOCITY_SETPOINT linked to record (asyn reason 171).
2020/08/10 18:13:38.075 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.ENC_CONTROL linked to record (asyn reason 172).
2020/08/10 18:13:38.076 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.VALUE linked to record (asyn reason 173).
2020/08/10 18:13:38.076 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.STM_CONTROL linked to record (asyn reason 174).
2020/08/10 18:13:38.077 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.VELOCITY_SETPOINT linked to record (asyn reason 175).
2020/08/10 18:13:38.078 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.ENC_CONTROL linked to record (asyn reason 176).
2020/08/10 18:13:38.078 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.VALUE linked to record (asyn reason 177).
2020/08/10 18:13:38.079 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.STM_CONTROL linked to record (asyn reason 178).
2020/08/10 18:13:38.080 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.VELOCITY_SETPOINT linked to record (asyn reason 179).
2020/08/10 18:13:38.080 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.ENC_CONTROL linked to record (asyn reason 180).
2020/08/10 18:13:38.081 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.VALUE linked to record (asyn reason 181).
2020/08/10 18:13:38.082 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.STM_CONTROL linked to record (asyn reason 182).
2020/08/10 18:13:38.082 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.VELOCITY_SETPOINT linked to record (asyn reason 183).
2020/08/10 18:13:38.083 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.ENC_CONTROL linked to record (asyn reason 184).
2020/08/10 18:13:38.084 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.VALUE linked to record (asyn reason 185).
2020/08/10 18:13:38.085 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.STM_CONTROL linked to record (asyn reason 186).
2020/08/10 18:13:38.085 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.VELOCITY_SETPOINT linked to record (asyn reason 187).
2020/08/10 18:13:38.086 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.ENC_CONTROL linked to record (asyn reason 188).
2020/08/10 18:13:38.087 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.VALUE linked to record (asyn reason 189).
2020/08/10 18:13:38.087 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.STM_CONTROL linked to record (asyn reason 190).
2020/08/10 18:13:38.088 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.VELOCITY_SETPOINT linked to record (asyn reason 191).
2020/08/10 18:13:38.089 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.ENC_CONTROL linked to record (asyn reason 192).
2020/08/10 18:13:38.090 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.VALUE linked to record (asyn reason 193).
2020/08/10 18:13:38.090 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.STM_CONTROL linked to record (asyn reason 194).
2020/08/10 18:13:38.091 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.VELOCITY_SETPOINT linked to record (asyn reason 195).
2020/08/10 18:13:38.092 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.ENC_CONTROL linked to record (asyn reason 196).
2020/08/10 18:13:38.093 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.VALUE linked to record (asyn reason 197).
2020/08/10 18:13:38.093 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.STM_CONTROL linked to record (asyn reason 198).
2020/08/10 18:13:38.094 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.VELOCITY_SETPOINT linked to record (asyn reason 199).
2020/08/10 18:13:38.095 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.ENC_CONTROL linked to record (asyn reason 200).
2020/08/10 18:13:38.095 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.VALUE linked to record (asyn reason 201).
2020/08/10 18:13:38.099 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_1 linked to record (asyn reason 202).
2020/08/10 18:13:38.100 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_2 linked to record (asyn reason 203).
2020/08/10 18:13:38.101 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_3 linked to record (asyn reason 204).
2020/08/10 18:13:38.102 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_4 linked to record (asyn reason 205).
2020/08/10 18:13:38.102 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_5 linked to record (asyn reason 206).
2020/08/10 18:13:38.103 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_6 linked to record (asyn reason 207).
2020/08/10 18:13:38.104 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_7 linked to record (asyn reason 208).
2020/08/10 18:13:38.105 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_8 linked to record (asyn reason 209).
2020/08/10 18:13:38.106 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_9 linked to record (asyn reason 210).
2020/08/10 18:13:38.107 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_10 linked to record (asyn reason 211).
2020/08/10 18:13:38.108 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_11 linked to record (asyn reason 212).
2020/08/10 18:13:38.109 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_12 linked to record (asyn reason 213).
2020/08/10 18:13:38.110 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_13 linked to record (asyn reason 214).
2020/08/10 18:13:38.111 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_14 linked to record (asyn reason 215).
2020/08/10 18:13:38.112 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_15 linked to record (asyn reason 216).
2020/08/10 18:13:38.112 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.STATUS_16 linked to record (asyn reason 217).
2020/08/10 18:13:38.113 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_1 linked to record (asyn reason 218).
2020/08/10 18:13:38.114 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_2 linked to record (asyn reason 219).
2020/08/10 18:13:38.115 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_3 linked to record (asyn reason 220).
2020/08/10 18:13:38.116 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_4 linked to record (asyn reason 221).
2020/08/10 18:13:38.117 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_5 linked to record (asyn reason 222).
2020/08/10 18:13:38.118 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_6 linked to record (asyn reason 223).
2020/08/10 18:13:38.119 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_7 linked to record (asyn reason 224).
2020/08/10 18:13:38.120 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_8 linked to record (asyn reason 225).
2020/08/10 18:13:38.121 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_9 linked to record (asyn reason 226).
2020/08/10 18:13:38.122 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_10 linked to record (asyn reason 227).
2020/08/10 18:13:38.123 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_11 linked to record (asyn reason 228).
2020/08/10 18:13:38.124 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_12 linked to record (asyn reason 229).
2020/08/10 18:13:38.125 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_13 linked to record (asyn reason 230).
2020/08/10 18:13:38.126 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_14 linked to record (asyn reason 231).
2020/08/10 18:13:38.127 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_15 linked to record (asyn reason 232).
2020/08/10 18:13:38.128 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.STATUS_16 linked to record (asyn reason 233).
2020/08/10 18:13:38.129 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_1 linked to record (asyn reason 234).
2020/08/10 18:13:38.130 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_2 linked to record (asyn reason 235).
2020/08/10 18:13:38.131 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_3 linked to record (asyn reason 236).
2020/08/10 18:13:38.132 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_4 linked to record (asyn reason 237).
2020/08/10 18:13:38.133 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_5 linked to record (asyn reason 238).
2020/08/10 18:13:38.134 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_6 linked to record (asyn reason 239).
2020/08/10 18:13:38.135 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_7 linked to record (asyn reason 240).
2020/08/10 18:13:38.136 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_8 linked to record (asyn reason 241).
2020/08/10 18:13:38.137 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_9 linked to record (asyn reason 242).
2020/08/10 18:13:38.138 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_10 linked to record (asyn reason 243).
2020/08/10 18:13:38.139 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_11 linked to record (asyn reason 244).
2020/08/10 18:13:38.140 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_12 linked to record (asyn reason 245).
2020/08/10 18:13:38.141 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_13 linked to record (asyn reason 246).
2020/08/10 18:13:38.142 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_14 linked to record (asyn reason 247).
2020/08/10 18:13:38.143 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_15 linked to record (asyn reason 248).
2020/08/10 18:13:38.143 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.STATUS_16 linked to record (asyn reason 249).
2020/08/10 18:13:38.145 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_1 linked to record (asyn reason 250).
2020/08/10 18:13:38.146 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_2 linked to record (asyn reason 251).
2020/08/10 18:13:38.147 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_3 linked to record (asyn reason 252).
2020/08/10 18:13:38.148 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_4 linked to record (asyn reason 253).
2020/08/10 18:13:38.149 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_5 linked to record (asyn reason 254).
2020/08/10 18:13:38.150 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_6 linked to record (asyn reason 255).
2020/08/10 18:13:38.151 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_7 linked to record (asyn reason 256).
2020/08/10 18:13:38.152 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_8 linked to record (asyn reason 257).
2020/08/10 18:13:38.153 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_9 linked to record (asyn reason 258).
2020/08/10 18:13:38.154 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_10 linked to record (asyn reason 259).
2020/08/10 18:13:38.155 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_11 linked to record (asyn reason 260).
2020/08/10 18:13:38.156 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_12 linked to record (asyn reason 261).
2020/08/10 18:13:38.157 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_13 linked to record (asyn reason 262).
2020/08/10 18:13:38.158 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_14 linked to record (asyn reason 263).
2020/08/10 18:13:38.159 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_15 linked to record (asyn reason 264).
2020/08/10 18:13:38.160 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.STATUS_16 linked to record (asyn reason 265).
2020/08/10 18:13:38.161 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_1 linked to record (asyn reason 266).
2020/08/10 18:13:38.162 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_2 linked to record (asyn reason 267).
2020/08/10 18:13:38.163 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_3 linked to record (asyn reason 268).
2020/08/10 18:13:38.164 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_4 linked to record (asyn reason 269).
2020/08/10 18:13:38.165 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_5 linked to record (asyn reason 270).
2020/08/10 18:13:38.166 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_6 linked to record (asyn reason 271).
2020/08/10 18:13:38.167 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_7 linked to record (asyn reason 272).
2020/08/10 18:13:38.168 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_8 linked to record (asyn reason 273).
2020/08/10 18:13:38.169 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_9 linked to record (asyn reason 274).
2020/08/10 18:13:38.171 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_10 linked to record (asyn reason 275).
2020/08/10 18:13:38.172 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_11 linked to record (asyn reason 276).
2020/08/10 18:13:38.173 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_12 linked to record (asyn reason 277).
2020/08/10 18:13:38.174 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_13 linked to record (asyn reason 278).
2020/08/10 18:13:38.175 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_14 linked to record (asyn reason 279).
2020/08/10 18:13:38.176 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_15 linked to record (asyn reason 280).
2020/08/10 18:13:38.177 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.STATUS_16 linked to record (asyn reason 281).
2020/08/10 18:13:38.178 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH1_STATUS linked to record (asyn reason 282).
2020/08/10 18:13:38.179 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH2_STATUS linked to record (asyn reason 283).
2020/08/10 18:13:38.180 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH3_STATUS linked to record (asyn reason 284).
2020/08/10 18:13:38.182 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH4_STATUS linked to record (asyn reason 285).
2020/08/10 18:13:38.183 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH5_STATUS linked to record (asyn reason 286).
2020/08/10 18:13:38.184 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH1_STATUS linked to record (asyn reason 287).
2020/08/10 18:13:38.185 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH2_STATUS linked to record (asyn reason 288).
2020/08/10 18:13:38.186 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH3_STATUS linked to record (asyn reason 289).
2020/08/10 18:13:38.188 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH4_STATUS linked to record (asyn reason 290).
2020/08/10 18:13:38.189 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH5_STATUS linked to record (asyn reason 291).
2020/08/10 18:13:38.190 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH1_STATUS linked to record (asyn reason 292).
2020/08/10 18:13:38.191 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH2_STATUS linked to record (asyn reason 293).
2020/08/10 18:13:38.192 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH3_STATUS linked to record (asyn reason 294).
2020/08/10 18:13:38.194 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH4_STATUS linked to record (asyn reason 295).
2020/08/10 18:13:38.195 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH5_STATUS linked to record (asyn reason 296).
2020/08/10 18:13:38.196 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH1_STATUS linked to record (asyn reason 297).
2020/08/10 18:13:38.197 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH2_STATUS linked to record (asyn reason 298).
2020/08/10 18:13:38.198 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH3_STATUS linked to record (asyn reason 299).
2020/08/10 18:13:38.199 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH4_STATUS linked to record (asyn reason 300).
2020/08/10 18:13:38.201 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH5_STATUS linked to record (asyn reason 301).
2020/08/10 18:13:38.202 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH1_STATUS linked to record (asyn reason 302).
2020/08/10 18:13:38.203 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH2_STATUS linked to record (asyn reason 303).
2020/08/10 18:13:38.204 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH3_STATUS linked to record (asyn reason 304).
2020/08/10 18:13:38.205 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH4_STATUS linked to record (asyn reason 305).
2020/08/10 18:13:38.206 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH5_STATUS linked to record (asyn reason 306).
2020/08/10 18:13:38.208 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.STM_STATUS linked to record (asyn reason 307).
2020/08/10 18:13:38.209 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.ENC_STATUS linked to record (asyn reason 308).
2020/08/10 18:13:38.210 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.STM_STATUS linked to record (asyn reason 309).
2020/08/10 18:13:38.211 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.ENC_STATUS linked to record (asyn reason 310).
2020/08/10 18:13:38.212 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.STM_STATUS linked to record (asyn reason 311).
2020/08/10 18:13:38.214 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.ENC_STATUS linked to record (asyn reason 312).
2020/08/10 18:13:38.215 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.STM_STATUS linked to record (asyn reason 313).
2020/08/10 18:13:38.216 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.ENC_STATUS linked to record (asyn reason 314).
2020/08/10 18:13:38.217 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.STM_STATUS linked to record (asyn reason 315).
2020/08/10 18:13:38.219 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.ENC_STATUS linked to record (asyn reason 316).
2020/08/10 18:13:38.220 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.STM_STATUS linked to record (asyn reason 317).
2020/08/10 18:13:38.221 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.ENC_STATUS linked to record (asyn reason 318).
2020/08/10 18:13:38.222 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.STM_STATUS linked to record (asyn reason 319).
2020/08/10 18:13:38.223 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.ENC_STATUS linked to record (asyn reason 320).
2020/08/10 18:13:38.225 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.STM_STATUS linked to record (asyn reason 321).
2020/08/10 18:13:38.226 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.ENC_STATUS linked to record (asyn reason 322).
2020/08/10 18:13:38.227 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.STM_STATUS linked to record (asyn reason 323).
2020/08/10 18:13:38.229 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.ENC_STATUS linked to record (asyn reason 324).
2020/08/10 18:13:38.230 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.STM_STATUS linked to record (asyn reason 325).
2020/08/10 18:13:38.231 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.ENC_STATUS linked to record (asyn reason 326).
2020/08/10 18:13:38.233 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.STM_STATUS linked to record (asyn reason 327).
2020/08/10 18:13:38.234 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.ENC_STATUS linked to record (asyn reason 328).
2020/08/10 18:13:38.235 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.STM_STATUS linked to record (asyn reason 329).
2020/08/10 18:13:38.236 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.ENC_STATUS linked to record (asyn reason 330).
2020/08/10 18:13:38.238 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.STM_STATUS linked to record (asyn reason 331).
2020/08/10 18:13:38.239 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.ENC_STATUS linked to record (asyn reason 332).
2020/08/10 18:13:38.240 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.STM_STATUS linked to record (asyn reason 333).
2020/08/10 18:13:38.242 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.ENC_STATUS linked to record (asyn reason 334).
2020/08/10 18:13:38.243 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.STM_STATUS linked to record (asyn reason 335).
2020/08/10 18:13:38.244 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.ENC_STATUS linked to record (asyn reason 336).
2020/08/10 18:13:38.246 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.diagnostic linked to record (asyn reason 337).
2020/08/10 18:13:38.246 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.plc.expression linked to record (asyn reason 338).
2020/08/10 18:13:38.248 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.diagnostic linked to record (asyn reason 339).
2020/08/10 18:13:38.249 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.diagnostic linked to record (asyn reason 340).
2020/08/10 18:13:38.251 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.diagnostic linked to record (asyn reason 341).
2020/08/10 18:13:38.252 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.diagnostic linked to record (asyn reason 342).
2020/08/10 18:13:38.254 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.diagnostic linked to record (asyn reason 343).
2020/08/10 18:13:38.255 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.diagnostic linked to record (asyn reason 344).
2020/08/10 18:13:38.257 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.diagnostic linked to record (asyn reason 345).
2020/08/10 18:13:38.259 ecmcAsynPortDriver:drvUserCreate: Parameter ax9.diagnostic linked to record (asyn reason 346).
2020/08/10 18:13:38.260 ecmcAsynPortDriver:drvUserCreate: Parameter ax10.diagnostic linked to record (asyn reason 347).
2020/08/10 18:13:38.262 ecmcAsynPortDriver:drvUserCreate: Parameter ax11.diagnostic linked to record (asyn reason 348).
2020/08/10 18:13:38.264 ecmcAsynPortDriver:drvUserCreate: Parameter ax12.diagnostic linked to record (asyn reason 349).
2020/08/10 18:13:38.265 ecmcAsynPortDriver:drvUserCreate: Parameter ax13.diagnostic linked to record (asyn reason 350).
2020/08/10 18:13:38.267 ecmcAsynPortDriver:drvUserCreate: Parameter ax14.diagnostic linked to record (asyn reason 351).
2020/08/10 18:13:38.269 ecmcAsynPortDriver:drvUserCreate: Parameter ax15.diagnostic linked to record (asyn reason 352).
2020/08/10 18:13:38.270 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.msg linked to record (asyn reason 353).
2020/08/10 18:13:38.271 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.updated linked to record (asyn reason 354).
2020/08/10 18:13:38.272 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s0.slavestatus linked to record (asyn reason 355).
2020/08/10 18:13:38.273 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s2.slavestatus linked to record (asyn reason 356).
2020/08/10 18:13:38.275 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s12.slavestatus linked to record (asyn reason 357).
2020/08/10 18:13:38.276 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s23.slavestatus linked to record (asyn reason 358).
2020/08/10 18:13:38.278 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s33.slavestatus linked to record (asyn reason 359).
2020/08/10 18:13:38.279 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s44.slavestatus linked to record (asyn reason 360).
2020/08/10 18:13:38.281 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s54.slavestatus linked to record (asyn reason 361).
2020/08/10 18:13:38.282 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s56.slavestatus linked to record (asyn reason 362).
2020/08/10 18:13:38.284 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s59.slavestatus linked to record (asyn reason 363).
2020/08/10 18:13:38.285 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s63.slavestatus linked to record (asyn reason 364).
2020/08/10 18:13:38.287 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s66.slavestatus linked to record (asyn reason 365).
2020/08/10 18:13:38.288 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s70.slavestatus linked to record (asyn reason 366).
2020/08/10 18:13:38.290 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s1.slavestatus linked to record (asyn reason 367).
2020/08/10 18:13:38.291 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s22.slavestatus linked to record (asyn reason 368).
2020/08/10 18:13:38.293 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s43.slavestatus linked to record (asyn reason 369).
2020/08/10 18:13:38.294 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s55.slavestatus linked to record (asyn reason 370).
2020/08/10 18:13:38.296 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s62.slavestatus linked to record (asyn reason 371).
2020/08/10 18:13:38.297 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s69.slavestatus linked to record (asyn reason 372).
2020/08/10 18:13:38.299 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.slavestatus linked to record (asyn reason 373).
2020/08/10 18:13:38.300 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.slavestatus linked to record (asyn reason 374).
2020/08/10 18:13:38.302 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.slavestatus linked to record (asyn reason 375).
2020/08/10 18:13:38.303 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.slavestatus linked to record (asyn reason 376).
2020/08/10 18:13:38.305 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.slavestatus linked to record (asyn reason 377).
2020/08/10 18:13:38.306 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.slavestatus linked to record (asyn reason 378).
2020/08/10 18:13:38.308 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.slavestatus linked to record (asyn reason 379).
2020/08/10 18:13:38.309 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.slavestatus linked to record (asyn reason 380).
2020/08/10 18:13:38.311 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.slavestatus linked to record (asyn reason 381).
2020/08/10 18:13:38.313 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.slavestatus linked to record (asyn reason 382).
2020/08/10 18:13:38.314 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.slavestatus linked to record (asyn reason 383).
2020/08/10 18:13:38.316 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.slavestatus linked to record (asyn reason 384).
2020/08/10 18:13:38.317 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.slavestatus linked to record (asyn reason 385).
2020/08/10 18:13:38.319 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.slavestatus linked to record (asyn reason 386).
2020/08/10 18:13:38.320 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.slavestatus linked to record (asyn reason 387).
2020/08/10 18:13:38.322 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.slavestatus linked to record (asyn reason 388).
2020/08/10 18:13:38.323 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.slavestatus linked to record (asyn reason 389).
2020/08/10 18:13:38.325 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.slavestatus linked to record (asyn reason 390).
2020/08/10 18:13:38.327 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.slavestatus linked to record (asyn reason 391).
2020/08/10 18:13:38.328 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.slavestatus linked to record (asyn reason 392).
2020/08/10 18:13:38.330 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.slavestatus linked to record (asyn reason 393).
2020/08/10 18:13:38.331 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.slavestatus linked to record (asyn reason 394).
2020/08/10 18:13:38.333 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.slavestatus linked to record (asyn reason 395).
2020/08/10 18:13:38.335 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.slavestatus linked to record (asyn reason 396).
2020/08/10 18:13:38.336 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.slavestatus linked to record (asyn reason 397).
2020/08/10 18:13:38.338 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.slavestatus linked to record (asyn reason 398).
2020/08/10 18:13:38.339 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.slavestatus linked to record (asyn reason 399).
2020/08/10 18:13:38.341 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.slavestatus linked to record (asyn reason 400).
2020/08/10 18:13:38.343 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.slavestatus linked to record (asyn reason 401).
2020/08/10 18:13:38.344 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.slavestatus linked to record (asyn reason 402).
2020/08/10 18:13:38.346 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.slavestatus linked to record (asyn reason 403).
2020/08/10 18:13:38.347 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.slavestatus linked to record (asyn reason 404).
2020/08/10 18:13:38.349 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.slavestatus linked to record (asyn reason 405).
2020/08/10 18:13:38.350 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.slavestatus linked to record (asyn reason 406).
2020/08/10 18:13:38.352 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.slavestatus linked to record (asyn reason 407).
2020/08/10 18:13:38.353 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.slavestatus linked to record (asyn reason 408).
2020/08/10 18:13:38.355 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.slavestatus linked to record (asyn reason 409).
2020/08/10 18:13:38.356 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.slavestatus linked to record (asyn reason 410).
2020/08/10 18:13:38.358 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.slavestatus linked to record (asyn reason 411).
2020/08/10 18:13:38.359 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.slavestatus linked to record (asyn reason 412).
2020/08/10 18:13:38.361 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.slavestatus linked to record (asyn reason 413).
2020/08/10 18:13:38.362 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.slavestatus linked to record (asyn reason 414).
2020/08/10 18:13:38.364 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.slavestatus linked to record (asyn reason 415).
2020/08/10 18:13:38.365 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.slavestatus linked to record (asyn reason 416).
2020/08/10 18:13:38.367 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.slavestatus linked to record (asyn reason 417).
2020/08/10 18:13:38.369 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.slavestatus linked to record (asyn reason 418).
2020/08/10 18:13:38.370 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.slavestatus linked to record (asyn reason 419).
2020/08/10 18:13:38.372 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.slavestatus linked to record (asyn reason 420).
2020/08/10 18:13:38.373 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.slavestatus linked to record (asyn reason 421).
2020/08/10 18:13:38.375 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.slavestatus linked to record (asyn reason 422).
2020/08/10 18:13:38.376 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.status linked to record (asyn reason 423).
2020/08/10 18:13:38.378 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.status linked to record (asyn reason 424).
2020/08/10 18:13:38.380 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.status linked to record (asyn reason 425).
2020/08/10 18:13:38.381 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.status linked to record (asyn reason 426).
2020/08/10 18:13:38.383 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.status linked to record (asyn reason 427).
2020/08/10 18:13:38.385 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.status linked to record (asyn reason 428).
2020/08/10 18:13:38.387 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.status linked to record (asyn reason 429).
2020/08/10 18:13:38.388 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.status linked to record (asyn reason 430).
2020/08/10 18:13:38.390 ecmcAsynPortDriver:drvUserCreate: Parameter ax9.status linked to record (asyn reason 431).
2020/08/10 18:13:38.392 ecmcAsynPortDriver:drvUserCreate: Parameter ax10.status linked to record (asyn reason 432).
2020/08/10 18:13:38.394 ecmcAsynPortDriver:drvUserCreate: Parameter ax11.status linked to record (asyn reason 433).
2020/08/10 18:13:38.395 ecmcAsynPortDriver:drvUserCreate: Parameter ax12.status linked to record (asyn reason 434).
2020/08/10 18:13:38.397 ecmcAsynPortDriver:drvUserCreate: Parameter ax13.status linked to record (asyn reason 435).
2020/08/10 18:13:38.399 ecmcAsynPortDriver:drvUserCreate: Parameter ax14.status linked to record (asyn reason 436).
2020/08/10 18:13:38.401 ecmcAsynPortDriver:drvUserCreate: Parameter ax15.status linked to record (asyn reason 437).
2020/08/10 18:13:38.402 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.masterstatus linked to record (asyn reason 438).
2020/08/10 18:13:38.404 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.slavecounter linked to record (asyn reason 439).
2020/08/10 18:13:38.406 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.memmapcounter linked to record (asyn reason 440).
2020/08/10 18:13:38.407 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.domainfailcountertotal linked to record (asyn reason 441).
2020/08/10 18:13:38.409 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.entrycounter linked to record (asyn reason 442).
2020/08/10 18:13:38.411 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.domainstatus linked to record (asyn reason 443).
2020/08/10 18:13:38.413 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_1 linked to record (asyn reason 444).
2020/08/10 18:13:38.415 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_2 linked to record (asyn reason 445).
2020/08/10 18:13:38.418 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_3 linked to record (asyn reason 446).
2020/08/10 18:13:38.421 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_4 linked to record (asyn reason 447).
2020/08/10 18:13:38.423 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_5 linked to record (asyn reason 448).
2020/08/10 18:13:38.426 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_6 linked to record (asyn reason 449).
2020/08/10 18:13:38.429 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_7 linked to record (asyn reason 450).
2020/08/10 18:13:38.432 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.BI_8 linked to record (asyn reason 451).
2020/08/10 18:13:38.434 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_1 linked to record (asyn reason 452).
2020/08/10 18:13:38.437 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_2 linked to record (asyn reason 453).
2020/08/10 18:13:38.440 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_3 linked to record (asyn reason 454).
2020/08/10 18:13:38.443 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_4 linked to record (asyn reason 455).
2020/08/10 18:13:38.445 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_5 linked to record (asyn reason 456).
2020/08/10 18:13:38.448 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_6 linked to record (asyn reason 457).
2020/08/10 18:13:38.451 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_7 linked to record (asyn reason 458).
2020/08/10 18:13:38.454 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.BI_8 linked to record (asyn reason 459).
2020/08/10 18:13:38.456 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_1 linked to record (asyn reason 460).
2020/08/10 18:13:38.459 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_2 linked to record (asyn reason 461).
2020/08/10 18:13:38.462 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_3 linked to record (asyn reason 462).
2020/08/10 18:13:38.465 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_4 linked to record (asyn reason 463).
2020/08/10 18:13:38.468 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_5 linked to record (asyn reason 464).
2020/08/10 18:13:38.470 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_6 linked to record (asyn reason 465).
2020/08/10 18:13:38.473 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_7 linked to record (asyn reason 466).
2020/08/10 18:13:38.476 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.BI_8 linked to record (asyn reason 467).
2020/08/10 18:13:38.479 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_1 linked to record (asyn reason 468).
2020/08/10 18:13:38.481 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_2 linked to record (asyn reason 469).
2020/08/10 18:13:38.484 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_3 linked to record (asyn reason 470).
2020/08/10 18:13:38.487 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_4 linked to record (asyn reason 471).
2020/08/10 18:13:38.490 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_5 linked to record (asyn reason 472).
2020/08/10 18:13:38.493 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_6 linked to record (asyn reason 473).
2020/08/10 18:13:38.495 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_7 linked to record (asyn reason 474).
2020/08/10 18:13:38.498 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.BI_8 linked to record (asyn reason 475).
2020/08/10 18:13:38.501 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_1 linked to record (asyn reason 476).
2020/08/10 18:13:38.504 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_2 linked to record (asyn reason 477).
2020/08/10 18:13:38.507 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_3 linked to record (asyn reason 478).
2020/08/10 18:13:38.510 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_4 linked to record (asyn reason 479).
2020/08/10 18:13:38.513 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_5 linked to record (asyn reason 480).
2020/08/10 18:13:38.515 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_6 linked to record (asyn reason 481).
2020/08/10 18:13:38.518 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_7 linked to record (asyn reason 482).
2020/08/10 18:13:38.521 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.BI_8 linked to record (asyn reason 483).
2020/08/10 18:13:38.524 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_1 linked to record (asyn reason 484).
2020/08/10 18:13:38.527 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_2 linked to record (asyn reason 485).
2020/08/10 18:13:38.530 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_3 linked to record (asyn reason 486).
2020/08/10 18:13:38.532 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_4 linked to record (asyn reason 487).
2020/08/10 18:13:38.535 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_5 linked to record (asyn reason 488).
2020/08/10 18:13:38.538 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_6 linked to record (asyn reason 489).
2020/08/10 18:13:38.541 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_7 linked to record (asyn reason 490).
2020/08/10 18:13:38.544 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.BI_8 linked to record (asyn reason 491).
2020/08/10 18:13:38.547 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_1 linked to record (asyn reason 492).
2020/08/10 18:13:38.550 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_2 linked to record (asyn reason 493).
2020/08/10 18:13:38.553 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_3 linked to record (asyn reason 494).
2020/08/10 18:13:38.555 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_4 linked to record (asyn reason 495).
2020/08/10 18:13:38.558 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_5 linked to record (asyn reason 496).
2020/08/10 18:13:38.561 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_6 linked to record (asyn reason 497).
2020/08/10 18:13:38.564 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_7 linked to record (asyn reason 498).
2020/08/10 18:13:38.567 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.BI_8 linked to record (asyn reason 499).
2020/08/10 18:13:38.570 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_1 linked to record (asyn reason 500).
2020/08/10 18:13:38.573 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_2 linked to record (asyn reason 501).
2020/08/10 18:13:38.576 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_3 linked to record (asyn reason 502).
2020/08/10 18:13:38.578 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_4 linked to record (asyn reason 503).
2020/08/10 18:13:38.581 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_5 linked to record (asyn reason 504).
2020/08/10 18:13:38.584 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_6 linked to record (asyn reason 505).
2020/08/10 18:13:38.587 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_7 linked to record (asyn reason 506).
2020/08/10 18:13:38.590 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.BI_8 linked to record (asyn reason 507).
2020/08/10 18:13:38.593 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_1 linked to record (asyn reason 508).
2020/08/10 18:13:38.596 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_2 linked to record (asyn reason 509).
2020/08/10 18:13:38.599 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_3 linked to record (asyn reason 510).
2020/08/10 18:13:38.602 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_4 linked to record (asyn reason 511).
2020/08/10 18:13:38.605 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_5 linked to record (asyn reason 512).
2020/08/10 18:13:38.607 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_6 linked to record (asyn reason 513).
2020/08/10 18:13:38.610 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_7 linked to record (asyn reason 514).
2020/08/10 18:13:38.613 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.BI_8 linked to record (asyn reason 515).
2020/08/10 18:13:38.616 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_1 linked to record (asyn reason 516).
2020/08/10 18:13:38.619 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_2 linked to record (asyn reason 517).
2020/08/10 18:13:38.622 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_3 linked to record (asyn reason 518).
2020/08/10 18:13:38.625 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_4 linked to record (asyn reason 519).
2020/08/10 18:13:38.629 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_5 linked to record (asyn reason 520).
2020/08/10 18:13:38.632 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_6 linked to record (asyn reason 521).
2020/08/10 18:13:38.634 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_7 linked to record (asyn reason 522).
2020/08/10 18:13:38.637 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.BI_8 linked to record (asyn reason 523).
2020/08/10 18:13:38.692 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.enable linked to record (asyn reason 524).
2020/08/10 18:13:38.697 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.firstscan linked to record (asyn reason 525).
2020/08/10 18:13:38.702 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.enable linked to record (asyn reason 526).
2020/08/10 18:13:38.707 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.firstscan linked to record (asyn reason 527).
2020/08/10 18:13:38.712 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.enable linked to record (asyn reason 528).
2020/08/10 18:13:38.716 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.firstscan linked to record (asyn reason 529).
2020/08/10 18:13:38.721 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.enable linked to record (asyn reason 530).
2020/08/10 18:13:38.726 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.firstscan linked to record (asyn reason 531).
2020/08/10 18:13:38.731 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.enable linked to record (asyn reason 532).
2020/08/10 18:13:38.736 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.firstscan linked to record (asyn reason 533).
2020/08/10 18:13:38.742 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.enable linked to record (asyn reason 534).
2020/08/10 18:13:38.747 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.firstscan linked to record (asyn reason 535).
2020/08/10 18:13:38.752 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.enable linked to record (asyn reason 536).
2020/08/10 18:13:38.757 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.firstscan linked to record (asyn reason 537).
2020/08/10 18:13:38.762 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.enable linked to record (asyn reason 538).
2020/08/10 18:13:38.767 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.firstscan linked to record (asyn reason 539).
2020/08/10 18:13:38.772 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax9.plc.enable linked to record (asyn reason 540).
2020/08/10 18:13:38.777 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax9.plc.firstscan linked to record (asyn reason 541).
2020/08/10 18:13:38.782 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax10.plc.enable linked to record (asyn reason 542).
2020/08/10 18:13:38.787 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax10.plc.firstscan linked to record (asyn reason 543).
2020/08/10 18:13:38.793 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax11.plc.enable linked to record (asyn reason 544).
2020/08/10 18:13:38.798 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax11.plc.firstscan linked to record (asyn reason 545).
2020/08/10 18:13:38.803 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax12.plc.enable linked to record (asyn reason 546).
2020/08/10 18:13:38.808 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax12.plc.firstscan linked to record (asyn reason 547).
2020/08/10 18:13:38.813 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax13.plc.enable linked to record (asyn reason 548).
2020/08/10 18:13:38.819 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax13.plc.firstscan linked to record (asyn reason 549).
2020/08/10 18:13:38.824 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax14.plc.enable linked to record (asyn reason 550).
2020/08/10 18:13:38.829 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax14.plc.firstscan linked to record (asyn reason 551).
2020/08/10 18:13:38.835 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax15.plc.enable linked to record (asyn reason 552).
2020/08/10 18:13:38.840 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax15.plc.firstscan linked to record (asyn reason 553).
2020/08/10 18:13:38.846 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s0.ONE linked to record (asyn reason 554).
2020/08/10 18:13:38.850 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s0.ZERO linked to record (asyn reason 555).
2020/08/10 18:13:38.854 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s2.ONE linked to record (asyn reason 556).
2020/08/10 18:13:38.858 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s2.ZERO linked to record (asyn reason 557).
2020/08/10 18:13:38.862 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s12.ONE linked to record (asyn reason 558).
2020/08/10 18:13:38.867 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s12.ZERO linked to record (asyn reason 559).
2020/08/10 18:13:38.871 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s23.ONE linked to record (asyn reason 560).
2020/08/10 18:13:38.875 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s23.ZERO linked to record (asyn reason 561).
2020/08/10 18:13:38.879 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s33.ONE linked to record (asyn reason 562).
2020/08/10 18:13:38.883 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s33.ZERO linked to record (asyn reason 563).
2020/08/10 18:13:38.888 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s44.ONE linked to record (asyn reason 564).
2020/08/10 18:13:38.892 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s44.ZERO linked to record (asyn reason 565).
2020/08/10 18:13:38.896 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s54.ONE linked to record (asyn reason 566).
2020/08/10 18:13:38.900 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s54.ZERO linked to record (asyn reason 567).
2020/08/10 18:13:38.905 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s56.ONE linked to record (asyn reason 568).
2020/08/10 18:13:38.909 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s56.ZERO linked to record (asyn reason 569).
2020/08/10 18:13:38.913 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s59.ONE linked to record (asyn reason 570).
2020/08/10 18:13:38.917 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s59.ZERO linked to record (asyn reason 571).
2020/08/10 18:13:38.922 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s63.ONE linked to record (asyn reason 572).
2020/08/10 18:13:38.926 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s63.ZERO linked to record (asyn reason 573).
2020/08/10 18:13:38.930 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s66.ONE linked to record (asyn reason 574).
2020/08/10 18:13:38.934 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s66.ZERO linked to record (asyn reason 575).
2020/08/10 18:13:38.939 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s70.ONE linked to record (asyn reason 576).
2020/08/10 18:13:38.943 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s70.ZERO linked to record (asyn reason 577).
2020/08/10 18:13:38.947 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s1.ONE linked to record (asyn reason 578).
2020/08/10 18:13:38.952 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s1.ZERO linked to record (asyn reason 579).
2020/08/10 18:13:38.956 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s22.ONE linked to record (asyn reason 580).
2020/08/10 18:13:38.960 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s22.ZERO linked to record (asyn reason 581).
2020/08/10 18:13:38.964 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s43.ONE linked to record (asyn reason 582).
2020/08/10 18:13:38.969 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s43.ZERO linked to record (asyn reason 583).
2020/08/10 18:13:38.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s55.ONE linked to record (asyn reason 584).
2020/08/10 18:13:38.977 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s55.ZERO linked to record (asyn reason 585).
2020/08/10 18:13:38.982 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s62.ONE linked to record (asyn reason 586).
2020/08/10 18:13:38.986 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s62.ZERO linked to record (asyn reason 587).
2020/08/10 18:13:38.990 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s69.ONE linked to record (asyn reason 588).
2020/08/10 18:13:38.994 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s69.ZERO linked to record (asyn reason 589).
2020/08/10 18:13:38.999 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.ONE linked to record (asyn reason 590).
2020/08/10 18:13:39.003 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s4.ZERO linked to record (asyn reason 591).
2020/08/10 18:13:39.008 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.ONE linked to record (asyn reason 592).
2020/08/10 18:13:39.012 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s5.ZERO linked to record (asyn reason 593).
2020/08/10 18:13:39.016 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.ONE linked to record (asyn reason 594).
2020/08/10 18:13:39.021 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s14.ZERO linked to record (asyn reason 595).
2020/08/10 18:13:39.025 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.ONE linked to record (asyn reason 596).
2020/08/10 18:13:39.029 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s15.ZERO linked to record (asyn reason 597).
2020/08/10 18:13:39.034 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.ONE linked to record (asyn reason 598).
2020/08/10 18:13:39.038 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s25.ZERO linked to record (asyn reason 599).
2020/08/10 18:13:39.043 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.ONE linked to record (asyn reason 600).
2020/08/10 18:13:39.047 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s26.ZERO linked to record (asyn reason 601).
2020/08/10 18:13:39.051 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.ONE linked to record (asyn reason 602).
2020/08/10 18:13:39.056 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s35.ZERO linked to record (asyn reason 603).
2020/08/10 18:13:39.060 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.ONE linked to record (asyn reason 604).
2020/08/10 18:13:39.064 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s36.ZERO linked to record (asyn reason 605).
2020/08/10 18:13:39.068 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.ONE linked to record (asyn reason 606).
2020/08/10 18:13:39.073 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s46.ZERO linked to record (asyn reason 607).
2020/08/10 18:13:39.077 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.ONE linked to record (asyn reason 608).
2020/08/10 18:13:39.082 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s47.ZERO linked to record (asyn reason 609).
2020/08/10 18:13:39.086 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.ONE linked to record (asyn reason 610).
2020/08/10 18:13:39.091 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s6.ZERO linked to record (asyn reason 611).
2020/08/10 18:13:39.095 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.ONE linked to record (asyn reason 612).
2020/08/10 18:13:39.099 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s16.ZERO linked to record (asyn reason 613).
2020/08/10 18:13:39.104 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.ONE linked to record (asyn reason 614).
2020/08/10 18:13:39.108 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s27.ZERO linked to record (asyn reason 615).
2020/08/10 18:13:39.113 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.ONE linked to record (asyn reason 616).
2020/08/10 18:13:39.117 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s37.ZERO linked to record (asyn reason 617).
2020/08/10 18:13:39.121 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.ONE linked to record (asyn reason 618).
2020/08/10 18:13:39.126 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s48.ZERO linked to record (asyn reason 619).
2020/08/10 18:13:39.130 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.ONE linked to record (asyn reason 620).
2020/08/10 18:13:39.135 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s11.ZERO linked to record (asyn reason 621).
2020/08/10 18:13:39.139 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.ONE linked to record (asyn reason 622).
2020/08/10 18:13:39.143 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s21.ZERO linked to record (asyn reason 623).
2020/08/10 18:13:39.148 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.ONE linked to record (asyn reason 624).
2020/08/10 18:13:39.152 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s32.ZERO linked to record (asyn reason 625).
2020/08/10 18:13:39.157 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.ONE linked to record (asyn reason 626).
2020/08/10 18:13:39.161 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s42.ZERO linked to record (asyn reason 627).
2020/08/10 18:13:39.166 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.ONE linked to record (asyn reason 628).
2020/08/10 18:13:39.170 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s53.ZERO linked to record (asyn reason 629).
2020/08/10 18:13:39.175 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.ONE linked to record (asyn reason 630).
2020/08/10 18:13:39.180 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s57.ZERO linked to record (asyn reason 631).
2020/08/10 18:13:39.185 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.ONE linked to record (asyn reason 632).
2020/08/10 18:13:39.190 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s58.ZERO linked to record (asyn reason 633).
2020/08/10 18:13:39.194 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.ONE linked to record (asyn reason 634).
2020/08/10 18:13:39.199 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s60.ZERO linked to record (asyn reason 635).
2020/08/10 18:13:39.204 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.ONE linked to record (asyn reason 636).
2020/08/10 18:13:39.208 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s61.ZERO linked to record (asyn reason 637).
2020/08/10 18:13:39.213 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.ONE linked to record (asyn reason 638).
2020/08/10 18:13:39.217 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s64.ZERO linked to record (asyn reason 639).
2020/08/10 18:13:39.222 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.ONE linked to record (asyn reason 640).
2020/08/10 18:13:39.227 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s65.ZERO linked to record (asyn reason 641).
2020/08/10 18:13:39.231 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.ONE linked to record (asyn reason 642).
2020/08/10 18:13:39.236 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s67.ZERO linked to record (asyn reason 643).
2020/08/10 18:13:39.241 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.ONE linked to record (asyn reason 644).
2020/08/10 18:13:39.245 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s68.ZERO linked to record (asyn reason 645).
2020/08/10 18:13:39.250 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.ONE linked to record (asyn reason 646).
2020/08/10 18:13:39.254 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s71.ZERO linked to record (asyn reason 647).
2020/08/10 18:13:39.259 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.ONE linked to record (asyn reason 648).
2020/08/10 18:13:39.264 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s72.ZERO linked to record (asyn reason 649).
2020/08/10 18:13:39.268 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.ONE linked to record (asyn reason 650).
2020/08/10 18:13:39.273 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.ZERO linked to record (asyn reason 651).
2020/08/10 18:13:39.277 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.ONE linked to record (asyn reason 652).
2020/08/10 18:13:39.282 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.ZERO linked to record (asyn reason 653).
2020/08/10 18:13:39.287 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.ONE linked to record (asyn reason 654).
2020/08/10 18:13:39.292 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.ZERO linked to record (asyn reason 655).
2020/08/10 18:13:39.296 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.ONE linked to record (asyn reason 656).
2020/08/10 18:13:39.301 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.ZERO linked to record (asyn reason 657).
2020/08/10 18:13:39.306 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.ONE linked to record (asyn reason 658).
2020/08/10 18:13:39.310 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.ZERO linked to record (asyn reason 659).
2020/08/10 18:13:39.315 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.ONE linked to record (asyn reason 660).
2020/08/10 18:13:39.320 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.ZERO linked to record (asyn reason 661).
2020/08/10 18:13:39.324 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.ONE linked to record (asyn reason 662).
2020/08/10 18:13:39.329 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.ZERO linked to record (asyn reason 663).
2020/08/10 18:13:39.334 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.ONE linked to record (asyn reason 664).
2020/08/10 18:13:39.338 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.ZERO linked to record (asyn reason 665).
2020/08/10 18:13:39.343 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.ONE linked to record (asyn reason 666).
2020/08/10 18:13:39.347 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.ZERO linked to record (asyn reason 667).
2020/08/10 18:13:39.352 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.ONE linked to record (asyn reason 668).
2020/08/10 18:13:39.357 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.ZERO linked to record (asyn reason 669).
2020/08/10 18:13:39.361 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.ONE linked to record (asyn reason 670).
2020/08/10 18:13:39.366 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.ZERO linked to record (asyn reason 671).
2020/08/10 18:13:39.371 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.ONE linked to record (asyn reason 672).
2020/08/10 18:13:39.375 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.ZERO linked to record (asyn reason 673).
2020/08/10 18:13:39.380 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.ONE linked to record (asyn reason 674).
2020/08/10 18:13:39.385 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.ZERO linked to record (asyn reason 675).
2020/08/10 18:13:39.389 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.ONE linked to record (asyn reason 676).
2020/08/10 18:13:39.394 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.ZERO linked to record (asyn reason 677).
2020/08/10 18:13:39.399 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.ONE linked to record (asyn reason 678).
2020/08/10 18:13:39.403 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.ZERO linked to record (asyn reason 679).
2020/08/10 18:13:39.408 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.ONE linked to record (asyn reason 680).
2020/08/10 18:13:39.413 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.ZERO linked to record (asyn reason 681).
2020/08/10 18:13:39.417 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.ONE linked to record (asyn reason 682).
2020/08/10 18:13:39.422 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.ZERO linked to record (asyn reason 683).
2020/08/10 18:13:39.427 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.ONE linked to record (asyn reason 684).
2020/08/10 18:13:39.431 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.ZERO linked to record (asyn reason 685).
2020/08/10 18:13:39.436 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.ONE linked to record (asyn reason 686).
2020/08/10 18:13:39.441 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.ZERO linked to record (asyn reason 687).
2020/08/10 18:13:39.445 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.ONE linked to record (asyn reason 688).
2020/08/10 18:13:39.450 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.ZERO linked to record (asyn reason 689).
2020/08/10 18:13:39.456 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH1_VALUE linked to record (asyn reason 690).
2020/08/10 18:13:39.461 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH2_VALUE linked to record (asyn reason 691).
2020/08/10 18:13:39.466 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH3_VALUE linked to record (asyn reason 692).
2020/08/10 18:13:39.471 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH4_VALUE linked to record (asyn reason 693).
2020/08/10 18:13:39.476 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s3.CH5_VALUE linked to record (asyn reason 694).
2020/08/10 18:13:39.481 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH1_VALUE linked to record (asyn reason 695).
2020/08/10 18:13:39.485 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH2_VALUE linked to record (asyn reason 696).
2020/08/10 18:13:39.490 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH3_VALUE linked to record (asyn reason 697).
2020/08/10 18:13:39.495 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH4_VALUE linked to record (asyn reason 698).
2020/08/10 18:13:39.500 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s13.CH5_VALUE linked to record (asyn reason 699).
2020/08/10 18:13:39.505 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH1_VALUE linked to record (asyn reason 700).
2020/08/10 18:13:39.510 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH2_VALUE linked to record (asyn reason 701).
2020/08/10 18:13:39.515 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH3_VALUE linked to record (asyn reason 702).
2020/08/10 18:13:39.520 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH4_VALUE linked to record (asyn reason 703).
2020/08/10 18:13:39.524 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s24.CH5_VALUE linked to record (asyn reason 704).
2020/08/10 18:13:39.529 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH1_VALUE linked to record (asyn reason 705).
2020/08/10 18:13:39.534 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH2_VALUE linked to record (asyn reason 706).
2020/08/10 18:13:39.539 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH3_VALUE linked to record (asyn reason 707).
2020/08/10 18:13:39.544 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH4_VALUE linked to record (asyn reason 708).
2020/08/10 18:13:39.549 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s34.CH5_VALUE linked to record (asyn reason 709).
2020/08/10 18:13:39.554 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH1_VALUE linked to record (asyn reason 710).
2020/08/10 18:13:39.559 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH2_VALUE linked to record (asyn reason 711).
2020/08/10 18:13:39.564 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH3_VALUE linked to record (asyn reason 712).
2020/08/10 18:13:39.569 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH4_VALUE linked to record (asyn reason 713).
2020/08/10 18:13:39.573 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s45.CH5_VALUE linked to record (asyn reason 714).
2020/08/10 18:13:39.585 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.POSITION linked to record (asyn reason 715).
2020/08/10 18:13:39.590 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s8.LATCH_POSITION linked to record (asyn reason 716).
2020/08/10 18:13:39.608 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.POSITION linked to record (asyn reason 717).
2020/08/10 18:13:39.613 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s9.LATCH_POSITION linked to record (asyn reason 718).
2020/08/10 18:13:39.631 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.POSITION linked to record (asyn reason 719).
2020/08/10 18:13:39.636 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s10.LATCH_POSITION linked to record (asyn reason 720).
2020/08/10 18:13:39.654 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.POSITION linked to record (asyn reason 721).
2020/08/10 18:13:39.659 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s18.LATCH_POSITION linked to record (asyn reason 722).
2020/08/10 18:13:39.677 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.POSITION linked to record (asyn reason 723).
2020/08/10 18:13:39.682 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s19.LATCH_POSITION linked to record (asyn reason 724).
2020/08/10 18:13:39.701 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.POSITION linked to record (asyn reason 725).
2020/08/10 18:13:39.706 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s20.LATCH_POSITION linked to record (asyn reason 726).
2020/08/10 18:13:39.724 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.POSITION linked to record (asyn reason 727).
2020/08/10 18:13:39.729 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s29.LATCH_POSITION linked to record (asyn reason 728).
2020/08/10 18:13:39.748 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.POSITION linked to record (asyn reason 729).
2020/08/10 18:13:39.753 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s30.LATCH_POSITION linked to record (asyn reason 730).
2020/08/10 18:13:39.771 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.POSITION linked to record (asyn reason 731).
2020/08/10 18:13:39.776 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s31.LATCH_POSITION linked to record (asyn reason 732).
2020/08/10 18:13:39.795 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.POSITION linked to record (asyn reason 733).
2020/08/10 18:13:39.800 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s39.LATCH_POSITION linked to record (asyn reason 734).
2020/08/10 18:13:39.819 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.POSITION linked to record (asyn reason 735).
2020/08/10 18:13:39.824 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s40.LATCH_POSITION linked to record (asyn reason 736).
2020/08/10 18:13:39.842 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.POSITION linked to record (asyn reason 737).
2020/08/10 18:13:39.847 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s41.LATCH_POSITION linked to record (asyn reason 738).
2020/08/10 18:13:39.865 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.POSITION linked to record (asyn reason 739).
2020/08/10 18:13:39.870 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s50.LATCH_POSITION linked to record (asyn reason 740).
2020/08/10 18:13:39.889 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.POSITION linked to record (asyn reason 741).
2020/08/10 18:13:39.894 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s51.LATCH_POSITION linked to record (asyn reason 742).
2020/08/10 18:13:39.913 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.POSITION linked to record (asyn reason 743).
2020/08/10 18:13:39.918 ecmcAsynPortDriver:drvUserCreate: Parameter ec3.s52.LATCH_POSITION linked to record (asyn reason 744).
2020/08/10 18:13:39.930 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.actpos linked to record (asyn reason 745).
2020/08/10 18:13:39.935 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.setpos linked to record (asyn reason 746).
2020/08/10 18:13:39.940 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.poserr linked to record (asyn reason 747).
2020/08/10 18:13:39.945 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.error linked to record (asyn reason 748).
2020/08/10 18:13:39.950 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.actpos linked to record (asyn reason 749).
2020/08/10 18:13:39.955 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.setpos linked to record (asyn reason 750).
2020/08/10 18:13:39.960 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.poserr linked to record (asyn reason 751).
2020/08/10 18:13:39.965 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.error linked to record (asyn reason 752).
2020/08/10 18:13:39.970 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.actpos linked to record (asyn reason 753).
2020/08/10 18:13:39.975 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.setpos linked to record (asyn reason 754).
2020/08/10 18:13:39.980 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.poserr linked to record (asyn reason 755).
2020/08/10 18:13:39.985 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.error linked to record (asyn reason 756).
2020/08/10 18:13:39.991 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.actpos linked to record (asyn reason 757).
2020/08/10 18:13:39.996 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.setpos linked to record (asyn reason 758).
2020/08/10 18:13:40.001 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.poserr linked to record (asyn reason 759).
2020/08/10 18:13:40.006 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.error linked to record (asyn reason 760).
2020/08/10 18:13:40.011 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.actpos linked to record (asyn reason 761).
2020/08/10 18:13:40.016 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.setpos linked to record (asyn reason 762).
2020/08/10 18:13:40.021 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.poserr linked to record (asyn reason 763).
2020/08/10 18:13:40.026 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.error linked to record (asyn reason 764).
2020/08/10 18:13:40.032 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.actpos linked to record (asyn reason 765).
2020/08/10 18:13:40.037 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.setpos linked to record (asyn reason 766).
2020/08/10 18:13:40.042 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.poserr linked to record (asyn reason 767).
2020/08/10 18:13:40.047 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.error linked to record (asyn reason 768).
2020/08/10 18:13:40.053 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.actpos linked to record (asyn reason 769).
2020/08/10 18:13:40.058 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.setpos linked to record (asyn reason 770).
2020/08/10 18:13:40.063 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.poserr linked to record (asyn reason 771).
2020/08/10 18:13:40.069 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.error linked to record (asyn reason 772).
2020/08/10 18:13:40.074 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.actpos linked to record (asyn reason 773).
2020/08/10 18:13:40.079 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.setpos linked to record (asyn reason 774).
2020/08/10 18:13:40.085 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.poserr linked to record (asyn reason 775).
2020/08/10 18:13:40.090 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.error linked to record (asyn reason 776).
2020/08/10 18:13:40.095 ecmcAsynPortDriver:drvUserCreate: Parameter ax9.actpos linked to record (asyn reason 777).
2020/08/10 18:13:40.100 ecmcAsynPortDriver:drvUserCreate: Parameter ax9.setpos linked to record (asyn reason 778).
2020/08/10 18:13:40.106 ecmcAsynPortDriver:drvUserCreate: Parameter ax9.poserr linked to record (asyn reason 779).
2020/08/10 18:13:40.111 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax9.plc.error linked to record (asyn reason 780).
2020/08/10 18:13:40.117 ecmcAsynPortDriver:drvUserCreate: Parameter ax10.actpos linked to record (asyn reason 781).
2020/08/10 18:13:40.122 ecmcAsynPortDriver:drvUserCreate: Parameter ax10.setpos linked to record (asyn reason 782).
2020/08/10 18:13:40.127 ecmcAsynPortDriver:drvUserCreate: Parameter ax10.poserr linked to record (asyn reason 783).
2020/08/10 18:13:40.133 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax10.plc.error linked to record (asyn reason 784).
2020/08/10 18:13:40.138 ecmcAsynPortDriver:drvUserCreate: Parameter ax11.actpos linked to record (asyn reason 785).
2020/08/10 18:13:40.144 ecmcAsynPortDriver:drvUserCreate: Parameter ax11.setpos linked to record (asyn reason 786).
2020/08/10 18:13:40.149 ecmcAsynPortDriver:drvUserCreate: Parameter ax11.poserr linked to record (asyn reason 787).
2020/08/10 18:13:40.154 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax11.plc.error linked to record (asyn reason 788).
2020/08/10 18:13:40.160 ecmcAsynPortDriver:drvUserCreate: Parameter ax12.actpos linked to record (asyn reason 789).
2020/08/10 18:13:40.166 ecmcAsynPortDriver:drvUserCreate: Parameter ax12.setpos linked to record (asyn reason 790).
2020/08/10 18:13:40.171 ecmcAsynPortDriver:drvUserCreate: Parameter ax12.poserr linked to record (asyn reason 791).
2020/08/10 18:13:40.177 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax12.plc.error linked to record (asyn reason 792).
2020/08/10 18:13:40.183 ecmcAsynPortDriver:drvUserCreate: Parameter ax13.actpos linked to record (asyn reason 793).
2020/08/10 18:13:40.188 ecmcAsynPortDriver:drvUserCreate: Parameter ax13.setpos linked to record (asyn reason 794).
2020/08/10 18:13:40.194 ecmcAsynPortDriver:drvUserCreate: Parameter ax13.poserr linked to record (asyn reason 795).
2020/08/10 18:13:40.200 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax13.plc.error linked to record (asyn reason 796).
2020/08/10 18:13:40.205 ecmcAsynPortDriver:drvUserCreate: Parameter ax14.actpos linked to record (asyn reason 797).
2020/08/10 18:13:40.211 ecmcAsynPortDriver:drvUserCreate: Parameter ax14.setpos linked to record (asyn reason 798).
2020/08/10 18:13:40.217 ecmcAsynPortDriver:drvUserCreate: Parameter ax14.poserr linked to record (asyn reason 799).
2020/08/10 18:13:40.222 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax14.plc.error linked to record (asyn reason 800).
2020/08/10 18:13:40.228 ecmcAsynPortDriver:drvUserCreate: Parameter ax15.actpos linked to record (asyn reason 801).
2020/08/10 18:13:40.233 ecmcAsynPortDriver:drvUserCreate: Parameter ax15.setpos linked to record (asyn reason 802).
2020/08/10 18:13:40.239 ecmcAsynPortDriver:drvUserCreate: Parameter ax15.poserr linked to record (asyn reason 803).
2020/08/10 18:13:40.245 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax15.plc.error linked to record (asyn reason 804).
2020/08/10 18:13:40.250 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.appmode linked to record (asyn reason 805).
2020/08/10 18:13:40.256 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.id linked to record (asyn reason 806).
2020/08/10 18:13:40.262 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.min linked to record (asyn reason 807).
2020/08/10 18:13:40.267 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.max linked to record (asyn reason 808).
2020/08/10 18:13:40.273 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.min linked to record (asyn reason 809).
2020/08/10 18:13:40.279 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.max linked to record (asyn reason 810).
2020/08/10 18:13:40.284 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.min linked to record (asyn reason 811).
2020/08/10 18:13:40.290 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.max linked to record (asyn reason 812).
2020/08/10 18:13:40.296 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.min linked to record (asyn reason 813).
2020/08/10 18:13:40.302 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.max linked to record (asyn reason 814).
2020/08/10 18:13:40.304 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=1
2020/08/10 18:13:40.304 devMotorAsyn::update_soft_limits DTL-010:AxisT1M1 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.304 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=0
2020/08/10 18:13:40.304 ecmcMotorRecord:: setIntegerParam(2 motorUpdateStatus_)=1
2020/08/10 18:13:40.304 devMotorAsyn::update_soft_limits DTL-010:AxisT1M2 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.304 ecmcMotorRecord:: setIntegerParam(2 motorUpdateStatus_)=0
2020/08/10 18:13:40.304 ecmcMotorRecord:: setIntegerParam(3 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-010:AxisT1M3 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(3 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(4 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-020:AxisT2M1 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(4 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(5 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-020:AxisT2M2 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(5 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(6 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-020:AxisT2M3 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(6 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(7 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-030:AxisT3M1 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
uire/3.1.2/siteMods/dtlTuners/master/postInitStateMachine.cmd", "SECTION_NAME=DTL-040"
#==============================================================================
# postInitStateMachine.cmd
afterInit(seq tuners_statemachine "SECTION_NAME=DTL-040")
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/dtlTuners/master/postInitStateMachine.cmd", "SECTION_NAME=DTL-050"
#==============================================================================
# postInitStateMachine.cmd
afterInit(seq tuners_statemachine "SECTION_NAME=DTL-050")
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "04d5808-ess-dtl-9653 > "
#
# 
iocInit
############################################################################
## EPICS R7.0.3.1-E3-7.0.3.1-patch
## EPICS Base built Jul  9 2020
############################################################################
../motorApp/MotorSrc/motorRecord.cc:892 DTL-010:AxisT1M1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-010:AxisT1M1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-010:AxisT1M1 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-010:AxisT1M1 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-010:AxisT1M2 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-010:AxisT1M2 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-010:AxisT1M2 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-010:AxisT1M2 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-010:AxisT1M3 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-010:AxisT1M3 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-010:AxisT1M3 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-010:AxisT1M3 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-020:AxisT2M1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-020:AxisT2M1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-020:AxisT2M1 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-020:AxisT2M1 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-020:AxisT2M2 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-020:AxisT2M2 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-020:AxisT2M2 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-020:AxisT2M2 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-020:AxisT2M3 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-020:AxisT2M3 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-020:AxisT2M3 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-020:AxisT2M3 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-030:AxisT3M1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-030:AxisT3M1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-030:AxisT3M1 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-030:AxisT3M1 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=02020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(7 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(8 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-030:AxisT3M2 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(8 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(9 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-030:AxisT3M3 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(9 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(10 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-040:AxisT4M1 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(10 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(11 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-040:AxisT4M2 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(11 motorUpdateStatus_)=0
2020/08/10 18:13:40.305 ecmcMotorRecord:: setIntegerParam(12 motorUpdateStatus_)=1
2020/08/10 18:13:40.305 devMotorAsyn::update_soft_limits DTL-040:AxisT4M3 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(12 motorUpdateStatus_)=0
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(13 motorUpdateStatus_)=1
2020/08/10 18:13:40.306 devMotorAsyn::update_soft_limits DTL-050:AxisT5M1 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(13 motorUpdateStatus_)=0
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(14 motorUpdateStatus_)=1
2020/08/10 18:13:40.306 devMotorAsyn::update_soft_limits DTL-050:AxisT5M2 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(14 motorUpdateStatus_)=0
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(15 motorUpdateStatus_)=1
2020/08/10 18:13:40.306 devMotorAsyn::update_soft_limits DTL-050:AxisT5M3 RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2020/08/10 18:13:40.306 ecmcMotorRecord:: setIntegerParam(15 motorUpdateStatus_)=0
2020/08/10 18:13:40.307 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDatabase (7). Allow callbacks: true.
2020/08/10 18:13:40.307 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterFinishDevSup (8). Allow callbacks: true.
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 1): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 2): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 3): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 4): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 5): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 6): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 7): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 8): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 9): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 10): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 11): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 12): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 13): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 14): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisBase.cpp/preExecute:175: ERROR (axis 15): State change (ECMC_AXIS_STATE_DISABLED->ECMC_AXIS_STATE_STARTUP).
2020/08/10 18:13:40.310 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/10 18:13:40.313 ecmc::  15    105.000    105.000      0.000      0.000      0.000      0.000      0.000      0.000     -0.000      0  14315  0  0  0  7  7  0  0 00  0  0  1  1  0  0  1
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(1) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(1)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-030:AxisT3M2 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-030:AxisT3M2 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-030:AxisT3M2 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-030:AxisT3M2 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-030:AxisT3M3 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-030:AxisT3M3 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-030:AxisT3M3 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-030:AxisT3M3 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-040:AxisT4M1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-040:AxisT4M1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-040:AxisT4M1 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-040:AxisT4M1 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-040:AxisT4M2 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-040:AxisT4M2 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-040:AxisT4M2 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-040:AxisT4M2 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-040:AxisT4M3 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-040:AxisT4M3 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-040:AxisT4M3 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-040:AxisT4M3 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-050:AxisT5M1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-050:AxisT5M1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-050:AxisT5M1 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-050:AxisT5M1 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-050:AxisT5M2 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-050:AxisT5M2 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-050:AxisT5M2 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-050:AxisT5M2 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
../motorApp/MotorSrc/motorRecord.cc:892 DTL-050:AxisT5M3 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 DTL-050:AxisT5M3 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 DTL-050:AxisT5M3 enforceMinRetryDeadband spdb=0.500000 rdbd=0.500000 mres=1.000000
../motorApp/MotorSrc/motorRecord.cc:922 DTL-050:AxisT5M3 init_record process_reason=2 dval=105.000000 drbv=105.000000 rdbd=0.500000 spdb=0.500000 udf=0 stat=0 msta=0x6b0e
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(2) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(2)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(3) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(3)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(4) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(4)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(5) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(5)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(6) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(6)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(7) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(7)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(8) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(8)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(9) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(9)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(9) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(10) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(10)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(10) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(11) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(11)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(11) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(12) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.415 ecmcMotorRecord:: sErrorMessage(12)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.415 ecmcMotorRecord:: poll(12) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(13) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.416 ecmcMotorRecord:: sErrorMessage(13)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(13) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(14) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.416 ecmcMotorRecord:: sErrorMessage(14)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(14) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(15) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/10 18:13:40.416 ecmcMotorRecord:: sErrorMessage(15)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/10 18:13:40.416 ecmcMotorRecord:: poll(15) callParamCallbacksUpdateError Error=1 old=1 ErrID=0x14315 old=0x14c10 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/10 18:13:40.809 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterScanInit (9). Allow callbacks: true.
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(1 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(2 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(3 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(4 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(5 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(6 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(7 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(8 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(9 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(10 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(11 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(12 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(13 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(14 HomPos_)=0.000000
2020/08/10 18:13:40.810 ecmcMotorRecord:: setDoubleParam(15 HomPos_)=0.000000
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(1 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(2 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(3 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(4 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(5 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(6 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(7 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(8 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(9 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(10 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(11 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(12 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(13 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(14 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.812 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitialProcess (10). Allow callbacks: true.
2020/08/10 18:13:40.812 ecmcMotorRecord:: setIntegerParam(15 HomProc_)=0 motorNotHomedProblem=0
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (11). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocBuilt (12). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocRun (13). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterDatabaseRunning (14). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInterruptAccept (21). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaServerRunning (15). Allow callbacks: true.
2020/08/10 18:13:40.814 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (22). Allow callbacks: true.
iocRun: All initialization complete
2020/08/10 18:13:40.816 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocRunning (16). Allow callbacks: true.
dbpf DTL-010:EMR-GT-001:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-010:EMR-GT-001:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-010:EMR-GT-001:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-010:EMR-GT-001:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-010:EMR-GT-002:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-010:EMR-GT-002:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-010:EMR-GT-002:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-010:EMR-GT-002:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-010:EMR-GT-003:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-010:EMR-GT-003:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-010:EMR-GT-003:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-010:EMR-GT-003:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-020:EMR-GT-001:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-020:EMR-GT-001:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-020:EMR-GT-001:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-020:EMR-GT-001:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-020:EMR-GT-002:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-020:EMR-GT-002:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-020:EMR-GT-002:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-020:EMR-GT-002:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-020:EMR-GT-003:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-020:EMR-GT-003:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-020:EMR-GT-003:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-020:EMR-GT-003:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-030:EMR-GT-001:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-030:EMR-GT-001:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-030:EMR-GT-001:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-030:EMR-GT-001:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-030:EMR-GT-002:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-030:EMR-GT-002:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-030:EMR-GT-002:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-030:EMR-GT-002:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-030:EMR-GT-003:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-030:EMR-GT-003:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-030:EMR-GT-003:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-030:EMR-GT-003:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-040:EMR-GT-001:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-040:EMR-GT-001:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-040:EMR-GT-001:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-040:EMR-GT-001:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-040:EMR-GT-002:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-040:EMR-GT-002:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-040:EMR-GT-002:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-040:EMR-GT-002:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-040:EMR-GT-003:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-040:EMR-GT-003:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-040:EMR-GT-003:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-040:EMR-GT-003:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-050:EMR-GT-001:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-050:EMR-GT-001:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-050:EMR-GT-001:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-050:EMR-GT-001:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-050:EMR-GT-002:Pos.EGU mm
DBF_STRING:         "mm"      
dbpf DTL-050:EMR-GT-002:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-050:EMR-GT-002:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-050:EMR-GT-002:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
dbpf DTL-050:EMR-GT-003:Pos.EGU mm
DBF_STRING:    sevr=info Sequencer release 2.2.7, compiled Thu Jul  9 13:10:00 2020
sevr=info Spawning sequencer program "tuners_statemachine", thread 0x40232e0: "tuners_statemachine"
sevr=info tuners_statemachine[0]: all channels connected & received 1st monitor
sevr=info Sequencer release 2.2.7, compiled Thu Jul  9 13:10:00 2020
sevr=info Spawning sequencer program "tuners_statemachine", thread 0x4024d30: "tuners_statemachine"
sevr=info tuners_statemachine[1]: all channels connected & received 1st monitor
sevr=info Sequencer release 2.2.7, compiled Thu Jul  9 13:10:00 2020
sevr=info Spawning sequencer program "tuners_statemachine", thread 0x4026780: "tuners_statemachine"
sevr=info tuners_statemachine[2]: all channels connected & received 1st monitor
sevr=info Sequencer release 2.2.7, compiled Thu Jul  9 13:10:00 2020
sevr=info Spawning sequencer program "tuners_statemachine", thread 0x40281d0: "tuners_statemachine"
sevr=info tuners_statemachine[3]: all channels connected & received 1st monitor
sevr=info Sequencer release 2.2.7, compiled Thu Jul  9 13:10:00 2020
sevr=info Spawning sequencer program "tuners_statemachine", thread 0x4029c20: "tuners_statemachine"
sevr=info tuners_statemachine[4]: all channels connected & received 1st monitor
     "mm"      
dbpf DTL-050:EMR-GT-003:Pos.EOFF 105
DBF_DOUBLE:         105       
dbpf DTL-050:EMR-GT-003:Pos.ESLO -0.0032145
DBF_DOUBLE:         -0.0032145          
dbpf DTL-050:EMR-GT-003:Pos.LINR SLOPE
DBF_STRING:         "SLOPE"   
seq tuners_statemachine SECTION_NAME=DTL-010


Preliminary controls executed due to Application Startup - Intialization

seq tuners_statemachine SECTION_NAME=DTL-020


Preliminary controls executed due to Application Startup - Intialization

seq tuners_statemachine SECTION_NAME=DTL-030


Preliminary controls executed due to Application Startup - Intialization

seq tuners_statemachine SECTION_NAME=DTL-040


Preliminary controls executed due to Application Startup - Intialization

seq tuners_statemachine SECTION_NAME=DTL-050


Preliminary controls executed due to Application Startup - Intialization

[?1034h04d5808-ess-dtl-9653 > 
SELF_CHECK status - ok
SELF_CHECK status - ok
SELF_CHECK status - ok
SELF_CHECK status - ok
SELF_CHECK status - ok^C